query Test($type: NodeContainerType, $invType: NodeContainerType) {
  me {
    username
    # Via Node Reference
    nodeReference(nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
  }
  schema(name: "test") {
    uuid
    # Via schema nodes
    nodes(nodeType: $type, perPage: 1) {
      elements {
        uuid
        version
        isPublished
        isDraft
      }
    }
  }
  
  # Via tag
  tag(name: "blue") {
    name
    nodes(nodeType: $type, perPage: 1) {
      elements {
        uuid
        version
        isPublished
        isDraft
      }
    }
  }
  # Via RootNode
  rootNode(nodeType: $type) {
    uuid
    version
    isPublished
    isDraft
  }
  # Via Tags
  tags {
    elements {
      name
      nodes(nodeType: $type, perPage: 1) {
        elements {
          uuid
          version
          isPublished
          isDraft
        }
      }
    }
  }
  # Via rootNode
  project {
    rootNode(nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
  }

  # Via UUID
  nodePerUuidInverted: node(uuid: "02e3982b6ad14c1fa4a0b5998a02ff92", nodeType: $invType) {
    uuid
    version
    isPublished
    isDraft
    path
    # Nested via Node
    nolang: node (lang: "ru", nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via Parent
    parent(nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via languages
    languages(nodeType: $type) {
      uuid
      version
      language
      isPublished
      isDraft
    }
    # Via Child
    child(path: "level2-1", nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via Breadcrumb
    breadcrumb(nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via foreign reference
    referencedBy(nodeType: $type, perPage: 1) {
      elements {
        node {
          uuid
          version
          isPublished
          isDraft
        }
      }
    }
    # Via Children
    children(nodeType: $type, perPage: 1) {
      elements {
        uuid
        version
        isPublished
        isDraft
      }
    }
    ... on test {
      fields {
        # Via Node Reference
        node(nodeType: $type) {
          uuid
          version
          isPublished
          isDraft
        }
        # Via Node Reference List
        nodeList(nodeType: $type) {
          uuid
          version
          isPublished
          isDraft
        }
    	}
    }
  }
  
  # Via UUID
  nodePerUuid: node(uuid: "02e3982b6ad14c1fa4a0b5998a02ff92", nodeType: $type) {
    uuid
    version
    isPublished
    isDraft
    path
    # Nested via Node
    nolang: node (lang: "ru", nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    invNodeType: node(nodeType: $invType) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via Parent
    parent(nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via languages
    languages(nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via Child
    child(path: "level2-1", nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via Breadcrumb
    breadcrumb(nodeType: $type) {
      uuid
      version
      isPublished
      isDraft
    }
    # Via foreign reference
    referencedBy(nodeType: $type, perPage: 1) {
      elements {
        node {
          uuid
          version
          isPublished
          isDraft
        }
      }
    }
    # Via Children
    children(nodeType: $type, perPage: 1) {
      elements {
        uuid
        version
        isPublished
        isDraft
      }
    }
    ... on test {
      fields {
        name
        extra
        # Via Node Reference
        node(nodeType: $type) {
          uuid
          version
          isPublished
          isDraft
        }
        # Via Node Reference List
        nodeList(nodeType: $type) {
          uuid
          version
          isPublished
          isDraft
        }
      }
   }
  }
  # Via Path
  nodePerPath: node(path: "/level1A", nodeType: $type)  {
    uuid
    version
    isPublished
    isDraft
  }
  # Via Nodes with uuids
  uuidNodes: nodes(uuids: ["02e3982b6ad14c1fa4a0b5998a02ff92","13c5981c51994d54998dd88b0c484720"], nodeType: $type) {
    elements {
      uuid
      version
      isPublished
      isDraft
    }
  }
  # Via Nodes
  nodes(filter: { schema: { is: test } }, nodeType: $type, perPage: 2) {
    elements {
      uuid
      version
      isPublished
      isDraft
    }
  }
#  # Via ES query
#  search: nodes(query:"") {
#    elements {
#      uuid
#      version
#      isPublished
#      isDraft
#    }
#  }
}