#%RAML 0.8
title: Gentics Mesh REST API
version: "0.27.1-SNAPSHOT"
baseUri: "http://localhost:8080/api/v1"
protocols: [HTTP, HTTPS]
mediaType: application/json
/users: 
    displayName: /users
    description: Provides endpoints which allow the manipulation of users.
    /: 
        post: 
            description: Create a new user.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | emailAddress | false | string | Email address of the user. |
                        | firstname | false | string | Firstname of the user. |
                        | groupUuid | false | string | Optional group id for the user. If provided the user will automatically be assigned to the identified group. |
                        | lastname | false | string | Lastname of the user. |
                        | nodeReference | false | object | New node reference of the user. This can also explicitly set to null in order to remove the assigned node from the user |
                        | password | true | string | Password of the new user. |
                        | username | true | string | Username of the user. |
                    example: |
                        {
                          "username" : "newuser",
                          "emailAddress" : "j.doe@nowhere.com",
                          "lastname" : "Doe",
                          "firstname" : "Joe",
                          "groupUuid" : "78c727c690fc44488727c690fc14489f",
                          "password" : "iesiech0eewinioghaRa",
                          "nodeReference" : {
                            "projectName" : "dummy",
                            "uuid" : "197780ff7b004983b780ff7b00c9832d"
                          }
                        }
            responses: 
                "201": 
                    description: User response of the created user.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | emailAddress | false | string | Email address of the user |
                                | enabled | true | boolean | Flag which indicates whether the user is enabled or disabled. Disabled users can no longer log into Gentics Mesh. Deleting a user user will not remove it. Instead the user will just be disabled. |
                                | firstname | false | string | Firstname of the user. |
                                | groups | true | array | List of group references to which the user belongs. |
                                | lastname | false | string | Lastname of the user. |
                                | nodeReference | false | object | Optional node reference of the user. Users can directly reference a single node. This can be used to store additional data that is user related. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | username | true | string | Username of the user. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "94c12b5547e54142812b5547e5d142ed",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "2727e0fe8d8448bca7e0fe8d84e8bcb5"
                                  },
                                  "created" : "2018-10-31T15:39:16.454Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "2f8e2162d4e043788e2162d4e0537887"
                                  },
                                  "edited" : "2018-10-31T15:39:16.454Z",
                                  "lastname" : "Doe",
                                  "firstname" : "Joe",
                                  "username" : "newuser",
                                  "emailAddress" : "j.doe@nowhere.com",
                                  "nodeReference" : {
                                    "projectName" : "dummy",
                                    "uuid" : "850a680b21de4be08a680b21de7be055"
                                  },
                                  "enabled" : true,
                                  "groups" : [ {
                                    "name" : "editors",
                                    "uuid" : "75e11da3507f4c4ea11da3507fec4eb3"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Load multiple users and return a paged list response.
            queryParameters: 
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                resolveLinks: 
                    description: 'The resolve links parameter can be set to either _short_, _medium_ or _full_. Stored mesh links will automatically be resolved and replaced by the resolved webroot link. With the parameter set the _path_ property as well as the _languagesPath_ property (for available language variants) will be included in the response. Gentics Mesh links in any HTML-typed field will automatically be resolved and replaced by the resolved link:{{< relref "features.asciidoc" >}}#_link_resolving[WebRoot path]. No resolving occurs if no link has been specified.'
                    type: string
                    required: false
                    repeat: false
                    example: medium
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
                lang: 
                    description: ISO 639-1 language tag of the language which should be loaded. Fallback handling can be applied by specifying multiple languages in a comma-separated list. The first matching language will be returned.  If omitted or the requested language is not available then the _defaultLanguage_ as configured in _mesh.yml_ will be returned.
                    type: string
                    required: false
                    repeat: false
                    example: en,de
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "200": 
                    description: User list response which may also contain an expanded node references.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "be2a3e5d2a754b5daa3e5d2a75db5d82",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "f74466bf8f644fbb8466bf8f64efbba3"
                                    },
                                    "created" : "2018-10-31T15:39:16.454Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "0ebe2af079134c21be2af07913ec21ae"
                                    },
                                    "edited" : "2018-10-31T15:39:16.454Z",
                                    "lastname" : "Doe",
                                    "firstname" : "Joe",
                                    "username" : "jdoe",
                                    "emailAddress" : "j.doe@nowhere.com",
                                    "nodeReference" : {
                                      "projectName" : "dummy",
                                      "uuid" : "8e8c20ca3fe8425e8c20ca3fe8c25ee7"
                                    },
                                    "enabled" : true,
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "49f702a1aba84559b702a1aba885596e"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "b79581828dd243f99581828dd253f9c5",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "6d8d0c228e424e7d8d0c228e426e7dfc"
                                    },
                                    "created" : "2018-10-31T15:39:16.454Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "54b54aa95f5e4e02b54aa95f5e1e029d"
                                    },
                                    "edited" : "2018-10-31T15:39:16.454Z",
                                    "lastname" : "Roe",
                                    "firstname" : "Jane",
                                    "username" : "jroe",
                                    "emailAddress" : "j.roe@nowhere.com",
                                    "nodeReference" : {
                                      "projectName" : "dummy",
                                      "uuid" : "94cc6e68b44d47ba8c6e68b44d27ba2d"
                                    },
                                    "enabled" : true,
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "335f82f8907240079f82f89072d00747"
                                    }, {
                                      "name" : "super-editors",
                                      "uuid" : "c56015bc3eb8423ea015bc3eb8023e8a"
                                    }, {
                                      "name" : "editors",
                                      "uuid" : "1addcf8421c24a059dcf8421c2fa0578"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{userUuid}: 
        uriParameters: 
            userUuid: 
                displayName: userUuid
                description: Uuid of the user.
                type: string
                required: true
                repeat: false
                example: "45c9409ca6e5490e89409ca6e5190eea"
        post: 
            description: Update the user with the given uuid. The user is created if no user with the specified uuid could be found.
            queryParameters: 
                token: 
                    description: Token code which can be used to update the user even if the connection is not authenticated. This can be used to implement a password recovery feature.
                    type: string
                    required: false
                    repeat: false
                    example: "5QUYG3NVGvaF"
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | emailAddress | false | string | New email address of the user |
                        | firstname | false | string | New firstname of the user |
                        | lastname | false | string | New lastname of the user |
                        | nodeReference | false | object | New node reference of the user. This can also explicitly set to null in order to remove the assigned node from the user |
                        | password | false | string | New password of the user |
                        | username | false | string | New username of the user |
                    example: |
                        {
                          "password" : "iesiech0eewinioghaRa",
                          "lastname" : "Doe",
                          "firstname" : "Joe",
                          "username" : "jdoe42",
                          "emailAddress" : "j.doe@nowhere.com",
                          "nodeReference" : {
                            "projectName" : "dummy",
                            "uuid" : "143b699de657443bbb699de657a43b1c"
                          }
                        }
            responses: 
                "200": 
                    description: Updated user response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | emailAddress | false | string | Email address of the user |
                                | enabled | true | boolean | Flag which indicates whether the user is enabled or disabled. Disabled users can no longer log into Gentics Mesh. Deleting a user user will not remove it. Instead the user will just be disabled. |
                                | firstname | false | string | Firstname of the user. |
                                | groups | true | array | List of group references to which the user belongs. |
                                | lastname | false | string | Lastname of the user. |
                                | nodeReference | false | object | Optional node reference of the user. Users can directly reference a single node. This can be used to store additional data that is user related. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | username | true | string | Username of the user. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "1c92445e47b740d292445e47b750d22f",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "6141b2950380439081b295038033907c"
                                  },
                                  "created" : "2018-10-31T15:39:16.453Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "a0b80e22c00c4164b80e22c00c716442"
                                  },
                                  "edited" : "2018-10-31T15:39:16.453Z",
                                  "lastname" : "Doe",
                                  "firstname" : "Joe",
                                  "username" : "jdoe42",
                                  "emailAddress" : "j.doe@nowhere.com",
                                  "nodeReference" : {
                                    "projectName" : "dummy",
                                    "uuid" : "962441d61c724679a441d61c72b679cf"
                                  },
                                  "enabled" : true,
                                  "groups" : [ {
                                    "name" : "editors",
                                    "uuid" : "7e23e7a4c6124923a3e7a4c612c92366"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Read the user with the given uuid
            queryParameters: 
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                lang: 
                    description: ISO 639-1 language tag of the language which should be loaded. Fallback handling can be applied by specifying multiple languages in a comma-separated list. The first matching language will be returned.  If omitted or the requested language is not available then the _defaultLanguage_ as configured in _mesh.yml_ will be returned.
                    type: string
                    required: false
                    repeat: false
                    example: en,de
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                resolveLinks: 
                    description: 'The resolve links parameter can be set to either _short_, _medium_ or _full_. Stored mesh links will automatically be resolved and replaced by the resolved webroot link. With the parameter set the _path_ property as well as the _languagesPath_ property (for available language variants) will be included in the response. Gentics Mesh links in any HTML-typed field will automatically be resolved and replaced by the resolved link:{{< relref "features.asciidoc" >}}#_link_resolving[WebRoot path]. No resolving occurs if no link has been specified.'
                    type: string
                    required: false
                    repeat: false
                    example: medium
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "200": 
                    description: User response which may also contain an expanded node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | emailAddress | false | string | Email address of the user |
                                | enabled | true | boolean | Flag which indicates whether the user is enabled or disabled. Disabled users can no longer log into Gentics Mesh. Deleting a user user will not remove it. Instead the user will just be disabled. |
                                | firstname | false | string | Firstname of the user. |
                                | groups | true | array | List of group references to which the user belongs. |
                                | lastname | false | string | Lastname of the user. |
                                | nodeReference | false | object | Optional node reference of the user. Users can directly reference a single node. This can be used to store additional data that is user related. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | username | true | string | Username of the user. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "7c16afcf979e41cc96afcf979ec1cc83",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "d3d0329ca1af412a90329ca1aff12a37"
                                  },
                                  "created" : "2018-10-31T15:39:16.454Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "6b9dba0643494bca9dba0643494bcacf"
                                  },
                                  "edited" : "2018-10-31T15:39:16.454Z",
                                  "lastname" : "Doe",
                                  "firstname" : "Joe",
                                  "username" : "jdoe",
                                  "emailAddress" : "j.doe@nowhere.com",
                                  "nodeReference" : {
                                    "projectName" : "dummy",
                                    "uuid" : "637f256844434d3dbf25684443fd3d70"
                                  },
                                  "enabled" : true,
                                  "groups" : [ {
                                    "name" : "editors",
                                    "uuid" : "472077bf65724a69a077bf65726a696d"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Deactivate the user with the given uuid. Please note that users can't be deleted since they are needed to construct creator/editor information.
            responses: 
                "204": 
                    description: User was deactivated.
    /{userUuid}/permissions/{path}: 
        uriParameters: 
            path: 
                displayName: path
                description: Path to the element from which the permissions should be loaded.
                type: string
                required: true
                repeat: false
                example: "projects/:projectUuid/schemas"
            userUuid: 
                displayName: userUuid
                description: Uuid of the user.
                type: string
                required: true
                repeat: false
                example: f6d48a3b2d624ac0948a3b2d62fac0b5
        get: 
            description: Read the user permissions on the element that can be located by the specified path.
            responses: 
                "200": 
                    description: Response which contains the loaded permissions.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | update | true | boolean | Flag which indicates whether the update permission is granted. |
                            example: |
                                {
                                  "create" : true,
                                  "read" : true,
                                  "update" : true,
                                  "delete" : true
                                }
    /{userUuid}/reset_token: 
        uriParameters: 
            userUuid: 
                displayName: userUuid
                description: Uuid of the user.
                type: string
                required: true
                repeat: false
                example: "9284235f7d1c458e84235f7d1ce58e55"
        post: 
            description: "Return a one time token which can be used by any user to update a user (e.g.: Reset the password)"
            responses: 
                "200": 
                    description: User token response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 date of the creation date for the provided token |
                                | token | true | string | JSON Web Token which was issued by the API. |
                            example: |
                                {
                                  "token" : "MhVGfPjGUmja",
                                  "created" : "2018-10-31T15:39:16.455Z"
                                }
    /{userUuid}/token: 
        uriParameters: 
            userUuid: 
                displayName: userUuid
                description: Uuid of the user.
                type: string
                required: true
                repeat: false
                example: "15286f4263bf4017a86f4263bfc017b0"
        post: 
            description: Return API token which can be used to authenticate the user. Store the key somewhere save since you won't be able to retrieve it later on.
            responses: 
                "200": 
                    description: The User API token response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | previousIssueDate | true | string | Date of the last time the API token was issued. |
                                | token | true | string | Issued client API token. |
                            example: |
                                {
                                  "token" : "ef2fc135561a441fafc135561a841fcd"
                                }
        delete: 
            description: Invalidate the issued API token.
            responses: 
                "200": 
                    description: Message confirming the invalidation of the API token.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
/roles: 
    displayName: /roles
    description: Provides endpoints which allow the manipulation of roles.
    /: 
        post: 
            description: Create a new role.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | New name of the role |
                    example: |
                        {
                          "name" : "New role"
                        }
            responses: 
                "201": 
                    description: Created role.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | groups | true | array | List of groups which are assigned to the role. |
                                | name | true | string | Name of the role. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "b909ffb45af442e389ffb45af482e3c9",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "5474420ab5c24f1eb4420ab5c24f1edd"
                                  },
                                  "created" : "2018-10-31T15:39:16.473Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "3fd85b6360aa4f21985b6360aaef2140"
                                  },
                                  "edited" : "2018-10-31T15:39:16.473Z",
                                  "name" : "New role",
                                  "groups" : [ ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Load multiple roles and return a paged list response
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: Loaded list of roles.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "d0f8e634fddc4e1db8e634fddc9e1dbf",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "4548e88702384c1988e8870238cc1903"
                                    },
                                    "created" : "2018-10-31T15:39:16.473Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "1859a1388f064bdd99a1388f062bdd9a"
                                    },
                                    "edited" : "2018-10-31T15:39:16.473Z",
                                    "name" : "Reader role",
                                    "groups" : [ ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "8852890512634d829289051263bd82cc",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "c4c0eb01e4d34ca380eb01e4d33ca3b1"
                                    },
                                    "created" : "2018-10-31T15:39:16.473Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "b89e2012bf0243df9e2012bf0223df22"
                                    },
                                    "edited" : "2018-10-31T15:39:16.473Z",
                                    "name" : "Admin role",
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "15fc616d05fb41e8bc616d05fb61e8fd"
                                    }, {
                                      "name" : "guests",
                                      "uuid" : "5064e8c4bdb44ceda4e8c4bdb48cedbc"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{roleUuid}: 
        uriParameters: 
            roleUuid: 
                displayName: roleUuid
                description: Uuid of the role
                type: string
                required: true
                repeat: false
                example: "28055c30611b4fb8855c30611befb88f"
        get: 
            description: Load the role with the given uuid.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
            responses: 
                "200": 
                    description: Loaded role.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | groups | true | array | List of groups which are assigned to the role. |
                                | name | true | string | Name of the role. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "184e05a2463d47f48e05a2463d37f489",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "3e5001129a264b8f9001129a266b8ffa"
                                  },
                                  "created" : "2018-10-31T15:39:16.473Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "b0efe4397f7d4487afe4397f7de48762"
                                  },
                                  "edited" : "2018-10-31T15:39:16.473Z",
                                  "name" : "Admin Role",
                                  "groups" : [ ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the role with the given uuid. The role is created if no role with the specified uuid could be found.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | New name of the role |
                    example: |
                        {
                          "name" : "New role name"
                        }
            responses: 
                "200": 
                    description: Updated role.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | groups | true | array | List of groups which are assigned to the role. |
                                | name | true | string | Name of the role. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "12e33513e02a4db5a33513e02aedb567",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "dba87257aedb43d0a87257aedb23d0f5"
                                  },
                                  "created" : "2018-10-31T15:39:16.474Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "578226909f1d4f128226909f1def1224"
                                  },
                                  "edited" : "2018-10-31T15:39:16.474Z",
                                  "name" : "New role name",
                                  "groups" : [ ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Delete the role with the given uuid
            responses: 
                "204": 
                    description: Role was deleted.
    /{roleUuid}/permissions/{path}: 
        uriParameters: 
            path: 
                displayName: path
                description: API path to the element.
                type: string
                required: true
                repeat: false
                example: |
                    projects/5ef01d971df440f5b01d971df460f59d
                    projects/e0a3065115ac41c4a3065115ac11c4a4/nodes/40f749e1a78a41deb749e1a78a81de41
            roleUuid: 
                displayName: roleUuid
                description: Uuid of the role.
                type: string
                required: true
                repeat: false
                example: d0de863d1a8b45fa9e863d1a8b25faf0
        post: 
            description: Set the permissions between role and the targeted element.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | permissions | true | object | Set of permissions which should be applied. |
                        | recursive | false | boolean | Flag which indicates whether the permission update should be applied recursivly. |
                    example: |
                        {
                          "permissions" : {
                            "create" : true,
                            "read" : true,
                            "update" : true,
                            "delete" : true,
                            "publish" : false,
                            "readPublished" : false
                          },
                          "recursive" : false
                        }
            responses: 
                "200": 
                    description: Permissions were set.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
        get: 
            description: Load the permissions between given role and the targeted element.
            responses: 
                "200": 
                    description: Loaded permissions.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | update | true | boolean | Flag which indicates whether the update permission is granted. |
                            example: |
                                {
                                  "create" : true,
                                  "read" : true,
                                  "update" : true,
                                  "delete" : true,
                                  "publish" : false,
                                  "readPublished" : false
                                }
/groups: 
    displayName: /groups
    description: Provides endpoints which allow the manipulation of groups.
    /: 
        post: 
            description: Create a new group.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | Name of the group. |
                    example: |
                        {
                          "name" : "New group"
                        }
            responses: 
                "201": 
                    description: Created group.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the group |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | roles | true | array | List of role references |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "04f48296673d4e43b48296673d3e4318",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "f689a8b64534496189a8b64534a96175"
                                  },
                                  "created" : "2018-10-31T15:39:16.491Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "f3bea3e5bab04b87bea3e5bab09b8709"
                                  },
                                  "edited" : "2018-10-31T15:39:16.491Z",
                                  "name" : "New group",
                                  "roles" : [ {
                                    "name" : "admin",
                                    "uuid" : "07825a94b93f471a825a94b93f971ae4"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Read multiple groups and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
            responses: 
                "200": 
                    description: List response which contains the found  groups.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "8521367f3fe64972a1367f3fe6e97234",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "e27ccdbb6ef342d2bccdbb6ef3b2d23a"
                                    },
                                    "created" : "2018-10-31T15:39:16.492Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "dafd5eeb970e43cdbd5eeb970e83cdec"
                                    },
                                    "edited" : "2018-10-31T15:39:16.492Z",
                                    "name" : "Admin Group",
                                    "roles" : [ {
                                      "name" : "admin",
                                      "uuid" : "796df5bb89d04c2aadf5bb89d06c2a06"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "c3e785adbfc9422ea785adbfc9f22e8f",
                                    "name" : "Editor Group",
                                    "roles" : [ ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{groupUuid}: 
        uriParameters: 
            groupUuid: 
                displayName: groupUuid
                description: Uuid of the group which should be deleted.
                type: string
                required: true
                repeat: false
                example: f65a3a8598ad4e479a3a8598adbe47ee
        get: 
            description: Read the group with the given uuid.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
            responses: 
                "200": 
                    description: Loaded group.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the group |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | roles | true | array | List of role references |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "37f59709520e4c77b59709520eec7750",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "282d0e27e8c24486ad0e27e8c2c486da"
                                  },
                                  "created" : "2018-10-31T15:39:16.492Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "9386a00ce64745ff86a00ce64715ff9f"
                                  },
                                  "edited" : "2018-10-31T15:39:16.492Z",
                                  "name" : "Admin Group",
                                  "roles" : [ {
                                    "name" : "admin",
                                    "uuid" : "c7a96a114a1d479ba96a114a1dc79bc9"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the group with the given uuid. The group is created if no group with the specified uuid could be found.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | New name of the group |
                    example: |
                        {
                          "name" : "New group name"
                        }
            responses: 
                "200": 
                    description: Updated group.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the group |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | roles | true | array | List of role references |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "37beddd1ec2940a2beddd1ec2910a252",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "b0e844cd84164e91a844cd84160e9146"
                                  },
                                  "created" : "2018-10-31T15:39:16.492Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "ead9f99889784a9599f99889780a9517"
                                  },
                                  "edited" : "2018-10-31T15:39:16.492Z",
                                  "name" : "New group name",
                                  "roles" : [ {
                                    "name" : "admin",
                                    "uuid" : "e05951bb029243ac9951bb029283ac4b"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Delete the given group.
            responses: 
                "204": 
                    description: Group was deleted.
    /{groupUuid}/roles: 
        uriParameters: 
            groupUuid: 
                displayName: groupUuid
                description: Uuid of the group.
                type: string
                required: true
                repeat: false
                example: "4fbfc97df7d44c3ebfc97df7d41c3ea8"
        get: 
            description: Load multiple roles that are assigned to the group. Return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
            responses: 
                "200": 
                    description: List of roles which were assigned to the group.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "6b3b5094a6d64dcdbb5094a6d6edcdbd",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "74432e6cefdb4033832e6cefdb7033e5"
                                    },
                                    "created" : "2018-10-31T15:39:16.490Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "3c7a47b768eb4a9bba47b768eb2a9bc7"
                                    },
                                    "edited" : "2018-10-31T15:39:16.490Z",
                                    "name" : "Reader role",
                                    "groups" : [ ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "6d8d3bc43bef4ca98d3bc43bef7ca9d1",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "0b892a9300c746a6892a9300c7e6a6eb"
                                    },
                                    "created" : "2018-10-31T15:39:16.490Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "4ac4349f9b234bd884349f9b234bd884"
                                    },
                                    "edited" : "2018-10-31T15:39:16.490Z",
                                    "name" : "Admin role",
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "636c2e86bdf549deac2e86bdf539de27"
                                    }, {
                                      "name" : "guests",
                                      "uuid" : "19e9b303c9d14ff0a9b303c9d16ff081"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{groupUuid}/roles/{roleUuid}: 
        uriParameters: 
            groupUuid: 
                displayName: groupUuid
                description: Uuid of the group.
                type: string
                required: true
                repeat: false
                example: "75243f451aa14b18a43f451aa17b185b"
            roleUuid: 
                displayName: roleUuid
                description: Uuid of the role.
                type: string
                required: true
                repeat: false
                example: "8b7b20129fde4545bb20129fde354569"
        post: 
            description: Add the specified role to the group.
            responses: 
                "200": 
                    description: Loaded role.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the group |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | roles | true | array | List of role references |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "a1adff913fc94b72adff913fc9db72ac",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "b36e1803798440fcae18037984e0fc51"
                                  },
                                  "created" : "2018-10-31T15:39:16.491Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "532cec79fd624e31acec79fd62ee31a9"
                                  },
                                  "edited" : "2018-10-31T15:39:16.491Z",
                                  "name" : "Group name",
                                  "roles" : [ {
                                    "name" : "admin",
                                    "uuid" : "c868416650274856a84166502718564b"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Remove the given role from the group.
            responses: 
                "204": 
                    description: Role was removed from the group.
    /{groupUuid}/users: 
        uriParameters: 
            groupUuid: 
                displayName: groupUuid
                description: Uuid of the group.
                type: string
                required: true
                repeat: false
                example: "65bd25c8a2a44397bd25c8a2a4d3972f"
        get: 
            description: Load a list of users which have been assigned to the group.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: List of users which belong to the group.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "21e85c89908a4972a85c89908af972da",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "7dfa091fe67a47caba091fe67a97caca"
                                    },
                                    "created" : "2018-10-31T15:39:16.488Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "4fc677e89d3a4b738677e89d3a2b739f"
                                    },
                                    "edited" : "2018-10-31T15:39:16.488Z",
                                    "lastname" : "Doe",
                                    "firstname" : "Joe",
                                    "username" : "jdoe",
                                    "emailAddress" : "j.doe@nowhere.com",
                                    "nodeReference" : {
                                      "projectName" : "dummy",
                                      "uuid" : "294f7d2a444a40738f7d2a444a3073ce"
                                    },
                                    "enabled" : true,
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "26cff227281640628ff227281680628c"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "8e6b8afff76d434aab8afff76d934aec",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "dc53337c937a495d93337c937a895d4c"
                                    },
                                    "created" : "2018-10-31T15:39:16.488Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "99925a587eda4c45925a587edabc451d"
                                    },
                                    "edited" : "2018-10-31T15:39:16.488Z",
                                    "lastname" : "Roe",
                                    "firstname" : "Jane",
                                    "username" : "jroe",
                                    "emailAddress" : "j.roe@nowhere.com",
                                    "nodeReference" : {
                                      "projectName" : "dummy",
                                      "uuid" : "dbff89d5e55e4a38bf89d5e55eba38bf"
                                    },
                                    "enabled" : true,
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "2b457958be1c41a8857958be1c31a88b"
                                    }, {
                                      "name" : "super-editors",
                                      "uuid" : "0ff163662721441bb163662721941b9f"
                                    }, {
                                      "name" : "editors",
                                      "uuid" : "deec3c47ea294dccac3c47ea29cdcca0"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{groupUuid}/users/{userUuid}: 
        uriParameters: 
            groupUuid: 
                displayName: groupUuid
                description: Uuid of the group.
                type: string
                required: true
                repeat: false
                example: "48c461484e4c46a28461484e4c86a2f6"
            userUuid: 
                displayName: userUuid
                description: Uuid of the user which should be removed from the group.
                type: string
                required: true
                repeat: false
                example: fa45ee4796174ba085ee4796170ba025
        post: 
            description: Add the given user to the group
            responses: 
                "200": 
                    description: Updated group.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the group |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | roles | true | array | List of role references |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "56b6ad9811604d2db6ad9811604d2d5c",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "72f2b25581034dfdb2b2558103bdfddb"
                                  },
                                  "created" : "2018-10-31T15:39:16.490Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "3f0f409b1ba14edb8f409b1ba13edb74"
                                  },
                                  "edited" : "2018-10-31T15:39:16.490Z",
                                  "name" : "Group name",
                                  "roles" : [ {
                                    "name" : "admin",
                                    "uuid" : "e69f6f04ecf74d1f9f6f04ecf7ad1f19"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Remove the given user from the group.
            responses: 
                "204": 
                    description: User was removed from the group.
/projects: 
    displayName: /projects
    description: Provides endpoints which allow the manipulation of projects.
    /: 
        post: 
            description: Create a new project.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | hostname | false | string | The hostname of the project can be used to generate links across multiple projects. The hostname will be stored along the initial branch of the project. |
                        | name | true | string | Name of the project |
                        | pathPrefix | false | string | Optional path prefix for webroot path and rendered links. |
                        | schema | true | object | Reference to the schema of the root node. Creating a project will also automatically create the base node of the project and link the schema to the initial branch  of the project. |
                        | ssl | false | boolean | SSL flag of the project which will be used to generate links across multiple projects. The flag will be stored along the intial branch of the project. |
                    example: |
                        {
                          "name" : "New project",
                          "schema" : {
                            "name" : "folder",
                            "uuid" : "97a8e09346d44d6ca8e09346d4dd6c6f"
                          },
                          "hostname" : "getmesh.io",
                          "ssl" : true
                        }
            responses: 
                "201": 
                    description: Created project.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | The name of the project. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | rootNode | true | object | The project root node. All futher nodes are children of this node. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "518157a0a9fd44368157a0a9fdf4363f",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "c028e59dd85e4e45a8e59dd85eee45da"
                                  },
                                  "created" : "2018-10-31T15:39:16.508Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "9cc94447e6a54020894447e6a5202018"
                                  },
                                  "edited" : "2018-10-31T15:39:16.508Z",
                                  "name" : "New Project",
                                  "rootNode" : {
                                    "uuid" : "4e00d806f5e941b980d806f5e9f1b922"
                                  },
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Load multiple projects and return a paged response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
            responses: 
                "200": 
                    description: Loaded project list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "da0029281fec45b68029281fecb5b67a",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "b6e54b2c2ba9480aa54b2c2ba9a80ade"
                                    },
                                    "created" : "2018-10-31T15:39:16.508Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "f60299988dcf486d8299988dcf386d74"
                                    },
                                    "edited" : "2018-10-31T15:39:16.509Z",
                                    "name" : "Dummy project",
                                    "rootNode" : {
                                      "uuid" : "4df7fff6b4c44129b7fff6b4c4d12928"
                                    },
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "4d18525cfa3d494298525cfa3df94237",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "bd393501ad394647b93501ad3996478b"
                                    },
                                    "created" : "2018-10-31T15:39:16.509Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "007b54c65df64de9bb54c65df67de957"
                                    },
                                    "edited" : "2018-10-31T15:39:16.509Z",
                                    "name" : "Dummy Project (Mobile)",
                                    "rootNode" : {
                                      "uuid" : "493bc623b0164f2dbbc623b016df2da4"
                                    },
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{projectUuid}: 
        uriParameters: 
            projectUuid: 
                displayName: projectUuid
                description: Uuid of the project.
                type: string
                required: true
                repeat: false
                example: "6bbf87c802cf4f2cbf87c802cf8f2c10"
        get: 
            description: Load the project with the given uuid.
            queryParameters: 
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
            responses: 
                "200": 
                    description: Loaded project.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | The name of the project. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | rootNode | true | object | The project root node. All futher nodes are children of this node. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "369fdb2eda7a43349fdb2eda7a6334f5",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "c142887f097e4ffd82887f097e9ffd16"
                                  },
                                  "created" : "2018-10-31T15:39:16.508Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "3dfb5e67660040d0bb5e676600b0d060"
                                  },
                                  "edited" : "2018-10-31T15:39:16.508Z",
                                  "name" : "Project name",
                                  "rootNode" : {
                                    "uuid" : "166a77a3ca684a20aa77a3ca68ba2090"
                                  },
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the project with the given uuid. The project is created if no project with the specified uuid could be found.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | New name of the project |
                    example: |
                        {
                          "name" : "New project name"
                        }
            responses: 
                "200": 
                    description: Updated project.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | The name of the project. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | rootNode | true | object | The project root node. All futher nodes are children of this node. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "53350af5acac4d38b50af5acacad385a",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "f6cc5ab2603c4db48c5ab2603cbdb49c"
                                  },
                                  "created" : "2018-10-31T15:39:16.509Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "c94aca8a5eaf44468aca8a5eaf1446aa"
                                  },
                                  "edited" : "2018-10-31T15:39:16.509Z",
                                  "name" : "New project name",
                                  "rootNode" : {
                                    "uuid" : "e9a9ea1a3f7e400aa9ea1a3f7ec00a68"
                                  },
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Delete the project and all attached nodes.
            responses: 
                "204": 
                    description: Project was deleted.
/schemas: 
    displayName: /schemas
    description: Provides endpoints which allow the manipulation of schemas.
    /: 
        get: 
            description: Read multiple schemas and return a paged list response.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: Loaded list of schemas.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "383ae94f02514538bae94f0251053846",
                                    "displayField" : "name",
                                    "segmentField" : "name",
                                    "container" : false,
                                    "description" : "Example schema description",
                                    "name" : "ExampleSchema",
                                    "fields" : [ {
                                      "name" : "name",
                                      "label" : "Name",
                                      "required" : false,
                                      "type" : "string"
                                    }, {
                                      "name" : "number",
                                      "label" : "Number",
                                      "required" : false,
                                      "type" : "number"
                                    }, {
                                      "name" : "html",
                                      "label" : "Teaser",
                                      "required" : false,
                                      "type" : "html"
                                    }, {
                                      "name" : "list",
                                      "label" : "List of nodes",
                                      "required" : false,
                                      "listType" : "node",
                                      "type" : "list",
                                      "allow" : [ "content", "video" ]
                                    }, {
                                      "name" : "node",
                                      "required" : false,
                                      "type" : "node",
                                      "allow" : [ "content", "video", "image" ]
                                    }, {
                                      "name" : "location",
                                      "label" : "Location",
                                      "required" : false,
                                      "type" : "micronode",
                                      "allow" : [ "geolocation" ]
                                    }, {
                                      "name" : "locationlist",
                                      "label" : "List of Locations",
                                      "required" : false,
                                      "listType" : "micronode",
                                      "type" : "list",
                                      "allow" : [ "geolocation" ]
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "094292f944724fe68292f944728fe67b",
                                    "displayField" : "name",
                                    "segmentField" : "name",
                                    "container" : false,
                                    "description" : "Example schema description",
                                    "name" : "ExampleSchema",
                                    "fields" : [ {
                                      "name" : "name",
                                      "label" : "Name",
                                      "required" : false,
                                      "type" : "string"
                                    }, {
                                      "name" : "number",
                                      "label" : "Number",
                                      "required" : false,
                                      "type" : "number"
                                    }, {
                                      "name" : "html",
                                      "label" : "Teaser",
                                      "required" : false,
                                      "type" : "html"
                                    }, {
                                      "name" : "list",
                                      "label" : "List of nodes",
                                      "required" : false,
                                      "listType" : "node",
                                      "type" : "list",
                                      "allow" : [ "content", "video" ]
                                    }, {
                                      "name" : "node",
                                      "required" : false,
                                      "type" : "node",
                                      "allow" : [ "content", "video", "image" ]
                                    }, {
                                      "name" : "location",
                                      "label" : "Location",
                                      "required" : false,
                                      "type" : "micronode",
                                      "allow" : [ "geolocation" ]
                                    }, {
                                      "name" : "locationlist",
                                      "label" : "List of Locations",
                                      "required" : false,
                                      "listType" : "micronode",
                                      "type" : "list",
                                      "allow" : [ "geolocation" ]
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
        post: 
            description: Create a new schema.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | container | false | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                        | description | false | string | Description of the schema |
                        | displayField | false | string | Name of the display field. |
                        | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | false | array | List of schema fields |
                        | name | true | string | Name of the schema |
                        | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                        | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                    example: |
                        {
                          "displayField" : "name",
                          "segmentField" : "name",
                          "container" : true,
                          "description" : "Some description text",
                          "name" : "video",
                          "fields" : [ {
                            "name" : "name",
                            "required" : false,
                            "type" : "string"
                          } ]
                        }
            responses: 
                "201": 
                    description: Created schema.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | container | true | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the schema. |
                                | displayField | true | string | Name of the display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of schema fields |
                                | name | true | string | Name of the schema. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                                | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the schema. |
                            example: |
                                {
                                  "uuid" : "6e1e66b636c6432b9e66b636c6c32bac",
                                  "displayField" : "name",
                                  "segmentField" : "name",
                                  "container" : false,
                                  "description" : "Example schema description",
                                  "name" : "ExampleSchema",
                                  "fields" : [ {
                                    "name" : "name",
                                    "label" : "Name",
                                    "required" : false,
                                    "type" : "string"
                                  }, {
                                    "name" : "number",
                                    "label" : "Number",
                                    "required" : false,
                                    "type" : "number"
                                  }, {
                                    "name" : "html",
                                    "label" : "Teaser",
                                    "required" : false,
                                    "type" : "html"
                                  }, {
                                    "name" : "list",
                                    "label" : "List of nodes",
                                    "required" : false,
                                    "listType" : "node",
                                    "type" : "list",
                                    "allow" : [ "content", "video" ]
                                  }, {
                                    "name" : "node",
                                    "required" : false,
                                    "type" : "node",
                                    "allow" : [ "content", "video", "image" ]
                                  }, {
                                    "name" : "location",
                                    "label" : "Location",
                                    "required" : false,
                                    "type" : "micronode",
                                    "allow" : [ "geolocation" ]
                                  }, {
                                    "name" : "locationlist",
                                    "label" : "List of Locations",
                                    "required" : false,
                                    "listType" : "micronode",
                                    "type" : "list",
                                    "allow" : [ "geolocation" ]
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
    /{schemaUuid}: 
        uriParameters: 
            schemaUuid: 
                displayName: schemaUuid
                description: Uuid of the schema.
                type: string
                required: true
                repeat: false
                example: ab3c78bac4b04a6ebc78bac4b07a6e44
        get: 
            description: Load the schema with the given uuid.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "200": 
                    description: Loaded schema.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | container | true | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the schema. |
                                | displayField | true | string | Name of the display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of schema fields |
                                | name | true | string | Name of the schema. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                                | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the schema. |
                            example: |
                                {
                                  "uuid" : "1d8bec835bd846678bec835bd8866731",
                                  "displayField" : "name",
                                  "segmentField" : "name",
                                  "container" : false,
                                  "description" : "Example schema description",
                                  "name" : "ExampleSchema",
                                  "fields" : [ {
                                    "name" : "name",
                                    "label" : "Name",
                                    "required" : false,
                                    "type" : "string"
                                  }, {
                                    "name" : "number",
                                    "label" : "Number",
                                    "required" : false,
                                    "type" : "number"
                                  }, {
                                    "name" : "html",
                                    "label" : "Teaser",
                                    "required" : false,
                                    "type" : "html"
                                  }, {
                                    "name" : "list",
                                    "label" : "List of nodes",
                                    "required" : false,
                                    "listType" : "node",
                                    "type" : "list",
                                    "allow" : [ "content", "video" ]
                                  }, {
                                    "name" : "node",
                                    "required" : false,
                                    "type" : "node",
                                    "allow" : [ "content", "video", "image" ]
                                  }, {
                                    "name" : "location",
                                    "label" : "Location",
                                    "required" : false,
                                    "type" : "micronode",
                                    "allow" : [ "geolocation" ]
                                  }, {
                                    "name" : "locationlist",
                                    "label" : "List of Locations",
                                    "required" : false,
                                    "listType" : "micronode",
                                    "type" : "list",
                                    "allow" : [ "geolocation" ]
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the schema.
            queryParameters: 
                updateAssignedBranches: 
                    description: Update the schema version for all branches which already utilize the schema.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                updateBranchNames: 
                    description: List of branch names which should be included in the update process. By default all branches which use the schema will be updated. You can thus use this parameter to only include a subset of branch in the update.
                    type: string
                    required: false
                    repeat: false
                    example: summerBranch,winterBranch
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | container | false | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                        | description | false | string | New description of the schema. |
                        | displayField | false | string | Name of the display field. |
                        | elasticsearch | false | object | Additional elasticsearch index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | true | array | List of schema fields |
                        | name | true | string | Name of the schema. |
                        | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                        | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                        | version | false | string | Version of the schema. |
                    example: |
                        {
                          "container" : false,
                          "description" : "New description",
                          "name" : "extended-content",
                          "fields" : [ ]
                        }
            responses: 
                "200": 
                    description: Updated schema.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | container | true | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the schema. |
                                | displayField | true | string | Name of the display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of schema fields |
                                | name | true | string | Name of the schema. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                                | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the schema. |
                            example: |
                                {
                                  "uuid" : "3c76a851c7d64a81b6a851c7d6ea8108",
                                  "displayField" : "name",
                                  "segmentField" : "name",
                                  "container" : false,
                                  "description" : "Example schema description",
                                  "name" : "ExampleSchema",
                                  "fields" : [ {
                                    "name" : "name",
                                    "label" : "Name",
                                    "required" : false,
                                    "type" : "string"
                                  }, {
                                    "name" : "number",
                                    "label" : "Number",
                                    "required" : false,
                                    "type" : "number"
                                  }, {
                                    "name" : "html",
                                    "label" : "Teaser",
                                    "required" : false,
                                    "type" : "html"
                                  }, {
                                    "name" : "list",
                                    "label" : "List of nodes",
                                    "required" : false,
                                    "listType" : "node",
                                    "type" : "list",
                                    "allow" : [ "content", "video" ]
                                  }, {
                                    "name" : "node",
                                    "required" : false,
                                    "type" : "node",
                                    "allow" : [ "content", "video", "image" ]
                                  }, {
                                    "name" : "location",
                                    "label" : "Location",
                                    "required" : false,
                                    "type" : "micronode",
                                    "allow" : [ "geolocation" ]
                                  }, {
                                    "name" : "locationlist",
                                    "label" : "List of Locations",
                                    "required" : false,
                                    "listType" : "micronode",
                                    "type" : "list",
                                    "allow" : [ "geolocation" ]
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Delete the schema with the given uuid.
            responses: 
                "204": 
                    description: Schema was successfully deleted.
    /{schemaUuid}/changes: 
        uriParameters: 
            schemaUuid: 
                displayName: schemaUuid
                description: Uuid of the schema.
                type: string
                required: true
                repeat: false
                example: "7b6aaf080b5a4fb4aaaf080b5abfb4c1"
        post: 
            description: Apply the posted changes to the schema. The schema migration will not automatically be started.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | changes.items.migrationScript | false | string | Optional migation script |
                        | changes.items.operation | false | string | Type of operation for this change |
                        | changes.items.uuid | false | string | Uuid of the change entry |
                    example: |
                        {
                          "changes" : [ {
                            "operation" : "ADDFIELD",
                            "properties" : {
                              "field" : "listFieldToBeAddedField",
                              "label" : "Field Label Value",
                              "type" : "list",
                              "listType" : "html"
                            }
                          }, {
                            "operation" : "CHANGEFIELDTYPE",
                            "properties" : {
                              "field" : "fieldToBeUpdated",
                              "type" : "string"
                            }
                          }, {
                            "operation" : "REMOVEFIELD",
                            "properties" : {
                              "field" : "fieldToBeRemoved"
                            }
                          }, {
                            "operation" : "UPDATEFIELD",
                            "migrationScript" : "function migrate(node, fieldname) {node.fields[fieldname] = new Date(new Date(node.fields[fieldname]).getTime() + 864000).toISOString(); return node;}",
                            "properties" : {
                              "field" : "fieldToBeUpdated",
                              "displayFieldname" : "newDisplayField",
                              "label" : "newLabel"
                            }
                          }, {
                            "operation" : "UPDATESCHEMA",
                            "properties" : { }
                          } ]
                        }
            responses: 
                "200": 
                    description: Schema changes have been applied.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /{schemaUuid}/diff: 
        uriParameters: 
            schemaUuid: 
                displayName: schemaUuid
                description: Uuid of the schema.
                type: string
                required: true
                repeat: false
                example: c055f883095a41d995f883095ab1d9a9
        post: 
            description: Compare the given schema with the stored schema and create a changeset.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | container | true | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                        | created | true | string | ISO8601 formatted created date string. |
                        | creator | true | object | User reference of the creator of the element. |
                        | description | false | string | Description of the schema. |
                        | displayField | true | string | Name of the display field. |
                        | edited | true | string | ISO8601 formatted edited date string. |
                        | editor | false | object | User reference of the editor of the element. |
                        | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | true | array | List of schema fields |
                        | name | true | string | Name of the schema. |
                        | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                        | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                        | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                        | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                        | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                        | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                        | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                        | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                        | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                        | uuid | true | string | Uuid of the element |
                        | version | true | string | Version of the schema. |
                    example: |
                        {
                          "uuid" : "195e9daf5ba145059e9daf5ba1b505b3",
                          "displayField" : "name",
                          "segmentField" : "name",
                          "container" : false,
                          "description" : "Example schema description",
                          "name" : "ExampleSchema",
                          "fields" : [ {
                            "name" : "name",
                            "label" : "Name",
                            "required" : false,
                            "type" : "string"
                          }, {
                            "name" : "number",
                            "label" : "Number",
                            "required" : false,
                            "type" : "number"
                          }, {
                            "name" : "html",
                            "label" : "Teaser",
                            "required" : false,
                            "type" : "html"
                          }, {
                            "name" : "list",
                            "label" : "List of nodes",
                            "required" : false,
                            "listType" : "node",
                            "type" : "list",
                            "allow" : [ "content", "video" ]
                          }, {
                            "name" : "node",
                            "required" : false,
                            "type" : "node",
                            "allow" : [ "content", "video", "image" ]
                          }, {
                            "name" : "location",
                            "label" : "Location",
                            "required" : false,
                            "type" : "micronode",
                            "allow" : [ "geolocation" ]
                          }, {
                            "name" : "locationlist",
                            "label" : "List of Locations",
                            "required" : false,
                            "listType" : "micronode",
                            "type" : "list",
                            "allow" : [ "geolocation" ]
                          } ],
                          "permissions" : {
                            "create" : true,
                            "read" : true,
                            "update" : true,
                            "delete" : true,
                            "publish" : false,
                            "readPublished" : false
                          }
                        }
            responses: 
                "200": 
                    description: List of schema changes that were detected by comparing the posted schema and the current version.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | changes.items.migrationScript | false | string | Optional migation script |
                                | changes.items.operation | false | string | Type of operation for this change |
                                | changes.items.uuid | false | string | Uuid of the change entry |
                            example: |
                                {
                                  "changes" : [ {
                                    "operation" : "ADDFIELD",
                                    "properties" : {
                                      "field" : "listFieldToBeAddedField",
                                      "label" : "Field Label Value",
                                      "type" : "list",
                                      "listType" : "html"
                                    }
                                  }, {
                                    "operation" : "CHANGEFIELDTYPE",
                                    "properties" : {
                                      "field" : "fieldToBeUpdated",
                                      "type" : "string"
                                    }
                                  }, {
                                    "operation" : "REMOVEFIELD",
                                    "properties" : {
                                      "field" : "fieldToBeRemoved"
                                    }
                                  }, {
                                    "operation" : "UPDATEFIELD",
                                    "migrationScript" : "function migrate(node, fieldname) {node.fields[fieldname] = new Date(new Date(node.fields[fieldname]).getTime() + 864000).toISOString(); return node;}",
                                    "properties" : {
                                      "field" : "fieldToBeUpdated",
                                      "displayFieldname" : "newDisplayField",
                                      "label" : "newLabel"
                                    }
                                  }, {
                                    "operation" : "UPDATESCHEMA",
                                    "properties" : { }
                                  } ]
                                }
/microschemas: 
    displayName: /microschemas
    description: Endpoint which provides methods to manipulate microschemas.
    /: 
        post: 
            description: Create a new microschema.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | description | false | string | Description of the microschema |
                        | elasticsearch | false | object | Additional elasticsearch index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | false | array | List of microschema fields |
                        | name | true | string | Name of the microschema |
                    example: |
                        {
                          "description" : "Microschema for Geolocations",
                          "name" : "geolocation",
                          "fields" : [ {
                            "name" : "longitude",
                            "label" : "Longitude",
                            "required" : true,
                            "type" : "number"
                          }, {
                            "name" : "latitude",
                            "label" : "Latitude",
                            "required" : true,
                            "type" : "number"
                          } ]
                        }
            responses: 
                "201": 
                    description: Created microschema.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the microschema |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of microschema fields |
                                | name | true | string | Name of the microschema |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the microschema |
                            example: |
                                {
                                  "uuid" : "98a1b11d3a064e14a1b11d3a068e1475",
                                  "version" : "1.0",
                                  "description" : "Microschema for Geolocations",
                                  "name" : "geolocation",
                                  "fields" : [ {
                                    "name" : "longitude",
                                    "label" : "Longitude",
                                    "required" : true,
                                    "type" : "number"
                                  }, {
                                    "name" : "latitude",
                                    "label" : "Latitude",
                                    "required" : true,
                                    "type" : "number"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Read multiple microschemas and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: List of miroschemas.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "60d5627d8ec3444b95627d8ec3544bdd",
                                    "version" : "1.0",
                                    "description" : "Microschema for Geolocations",
                                    "name" : "geolocation",
                                    "fields" : [ {
                                      "name" : "longitude",
                                      "label" : "Longitude",
                                      "required" : true,
                                      "type" : "number"
                                    }, {
                                      "name" : "latitude",
                                      "label" : "Latitude",
                                      "required" : true,
                                      "type" : "number"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "8660ce6aace045bfa0ce6aace035bfd9",
                                    "version" : "1.0",
                                    "description" : "Microschema for Geolocations",
                                    "name" : "geolocation",
                                    "fields" : [ {
                                      "name" : "longitude",
                                      "label" : "Longitude",
                                      "required" : true,
                                      "type" : "number"
                                    }, {
                                      "name" : "latitude",
                                      "label" : "Latitude",
                                      "required" : true,
                                      "type" : "number"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{microschemaUuid}: 
        uriParameters: 
            microschemaUuid: 
                displayName: microschemaUuid
                description: Uuid of the microschema.
                type: string
                required: true
                repeat: false
                example: "74b6d1983aab4e37b6d1983aab0e3730"
        get: 
            description: Read the microschema with the given uuid.
            queryParameters: 
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "200": 
                    description: Loaded microschema.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the microschema |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of microschema fields |
                                | name | true | string | Name of the microschema |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the microschema |
                            example: |
                                {
                                  "uuid" : "91c1ad288df048d081ad288df028d011",
                                  "version" : "1.0",
                                  "description" : "Microschema for Geolocations",
                                  "name" : "geolocation",
                                  "fields" : [ {
                                    "name" : "longitude",
                                    "label" : "Longitude",
                                    "required" : true,
                                    "type" : "number"
                                  }, {
                                    "name" : "latitude",
                                    "label" : "Latitude",
                                    "required" : true,
                                    "type" : "number"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the microschema with the given uuid.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | description | false | string | Description of the microschema |
                        | elasticsearch | false | object | Additional elasticsearch index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | false | array | List of microschema fields |
                        | name | false | string | Name of the microschema |
                        | version | false | string | Version of the microschema |
                    example: |
                        {
                          "name" : "geolocation-renamed",
                          "fields" : [ ]
                        }
            responses: 
                "200": 
                    description: Migration message.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
        delete: 
            description: Delete the microschema with the given uuid.
            responses: 
                "204": 
                    description: Microschema was deleted.
    /{microschemaUuid}/changes: 
        uriParameters: 
            microschemaUuid: 
                displayName: microschemaUuid
                description: Uuid of the microschema.
                type: string
                required: true
                repeat: false
                example: e60b9a292abe43348b9a292abe533491
        post: 
            description: Apply the provided changes on the latest version of the schema and migrate all nodes which are based on the schema. Please note that this operation is non-blocking and will continue to run in the background.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | changes.items.migrationScript | false | string | Optional migation script |
                        | changes.items.operation | false | string | Type of operation for this change |
                        | changes.items.uuid | false | string | Uuid of the change entry |
                    example: |
                        {
                          "changes" : [ {
                            "operation" : "ADDFIELD",
                            "properties" : {
                              "field" : "listFieldToBeAddedField",
                              "label" : "Field Label Value",
                              "type" : "list",
                              "listType" : "html"
                            }
                          }, {
                            "operation" : "CHANGEFIELDTYPE",
                            "properties" : {
                              "field" : "fieldToBeUpdated",
                              "type" : "string"
                            }
                          }, {
                            "operation" : "REMOVEFIELD",
                            "properties" : {
                              "field" : "fieldToBeRemoved"
                            }
                          }, {
                            "operation" : "UPDATEFIELD",
                            "migrationScript" : "function migrate(node, fieldname) {node.fields[fieldname] = new Date(new Date(node.fields[fieldname]).getTime() + 864000).toISOString(); return node;}",
                            "properties" : {
                              "field" : "fieldToBeUpdated",
                              "displayFieldname" : "newDisplayField",
                              "label" : "newLabel"
                            }
                          }, {
                            "operation" : "UPDATESCHEMA",
                            "properties" : { }
                          } ]
                        }
            responses: 
                "200": 
                    description: Microschema migration was invoked.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /{microschemaUuid}/diff: 
        uriParameters: 
            microschemaUuid: 
                displayName: microschemaUuid
                description: Uuid of the microschema.
                type: string
                required: true
                repeat: false
                example: "5569bbf53649429ea9bbf53649d29ef5"
        post: 
            description: Compare the provided schema with the schema which is currently stored and generate a set of changes that have been detected.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | description | false | string | Description of the microschema |
                        | elasticsearch | false | object | Additional elasticsearch index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | false | array | List of microschema fields |
                        | name | true | string | Name of the microschema |
                    example: |
                        {
                          "description" : "Microschema for Geolocations",
                          "name" : "geolocation",
                          "fields" : [ {
                            "name" : "longitude",
                            "label" : "Longitude",
                            "required" : true,
                            "type" : "number"
                          }, {
                            "name" : "latitude",
                            "label" : "Latitude",
                            "required" : true,
                            "type" : "number"
                          } ]
                        }
            responses: 
                "200": 
                    description: Found difference between both microschemas.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | changes.items.migrationScript | false | string | Optional migation script |
                                | changes.items.operation | false | string | Type of operation for this change |
                                | changes.items.uuid | false | string | Uuid of the change entry |
                            example: |
                                {
                                  "changes" : [ {
                                    "operation" : "ADDFIELD",
                                    "properties" : {
                                      "field" : "listFieldToBeAddedField",
                                      "label" : "Field Label Value",
                                      "type" : "list",
                                      "listType" : "html"
                                    }
                                  }, {
                                    "operation" : "CHANGEFIELDTYPE",
                                    "properties" : {
                                      "field" : "fieldToBeUpdated",
                                      "type" : "string"
                                    }
                                  }, {
                                    "operation" : "REMOVEFIELD",
                                    "properties" : {
                                      "field" : "fieldToBeRemoved"
                                    }
                                  }, {
                                    "operation" : "UPDATEFIELD",
                                    "migrationScript" : "function migrate(node, fieldname) {node.fields[fieldname] = new Date(new Date(node.fields[fieldname]).getTime() + 864000).toISOString(); return node;}",
                                    "properties" : {
                                      "field" : "fieldToBeUpdated",
                                      "displayFieldname" : "newDisplayField",
                                      "label" : "newLabel"
                                    }
                                  }, {
                                    "operation" : "UPDATESCHEMA",
                                    "properties" : { }
                                  } ]
                                }
/admin: 
    displayName: /admin
    description: Collection of administrative endpoints which usually require admin permission
    /cluster/status: 
        get: 
            description: Loads the cluster status information.
            responses: 
                "200": 
                    description: Cluster status.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                            example: |
                                {
                                  "instances" : [ ]
                                }
    /consistency/check: 
        get: 
            description: Invokes a consistency check of the graph database without attempting to repairing the found issues. A list of found issues will be returned.
            responses: 
                "200": 
                    description: Consistency check report
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | inconsistencies | true | array | List of found inconsistencies. |
                                | result | true | string | Result of the consistency check. |
                            example: |
                                {
                                  "result" : "INCONSISTENT",
                                  "inconsistencies" : [ {
                                    "description" : "A dangling field container has been found.",
                                    "severity" : "LOW",
                                    "elementUuid" : "4d425d545d5b461f825d545d5b661fc8",
                                    "repaired" : false,
                                    "repairAction" : "DELETE"
                                  } ]
                                }
    /consistency/repair: 
        post: 
            description: Invokes a consistency check and repair of the graph database and returns a list of found issues and their state.
            responses: 
                "200": 
                    description: Consistency check and repair report
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | inconsistencies | true | array | List of found inconsistencies. |
                                | result | true | string | Result of the consistency check. |
                            example: |
                                {
                                  "result" : "INCONSISTENT",
                                  "inconsistencies" : [ {
                                    "description" : "A dangling field container has been found.",
                                    "severity" : "LOW",
                                    "elementUuid" : "367f3275bb784126bf3275bb78312635",
                                    "repaired" : true,
                                    "repairAction" : "DELETE"
                                  } ]
                                }
    /graphdb/backup: 
        post: 
            description: Invoke a graph database backup and dump the data to the configured backup location. Note that this operation will block all current operation.
            responses: 
                "200": 
                    description: Incremental backup was invoked.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /graphdb/restore: 
        post: 
            description: Invoke a graph database restore. The latest dump from the backup directory will be inserted. Please note that this operation will block all current operation and effectively destroy all previously stored data.
            responses: 
                "200": 
                    description: Database restore command was invoked.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /jobs: 
        get: 
            description: List all currently queued jobs.
            responses: 
                "200": 
                    description: List of jobs.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "b3fab233eb314279bab233eb31b2791a",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "7f0388d5b8d44ba88388d5b8d41ba849"
                                    },
                                    "created" : "2018-10-31T15:39:16.552Z",
                                    "type" : "branch",
                                    "properties" : {
                                      "fromVersion" : "1.0",
                                      "branchUuid" : "0795ac3f357a4bb695ac3f357a3bb6b0",
                                      "schemaUuid" : "7c9651e7fe0f47e39651e7fe0f87e3c4",
                                      "toVersion" : "2.0"
                                    },
                                    "completionCount" : 0,
                                    "warnings" : [ ]
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 25,
                                    "pageCount" : 1,
                                    "totalCount" : 1
                                  }
                                }
    /jobs/{jobUuid}: 
        uriParameters: 
            jobUuid: 
                displayName: jobUuid
                description: Uuid of the job.
                type: string
                required: true
                repeat: false
                example: d50148d83deb42e78148d83deb72e7c6
        get: 
            description: Load a specific job.
            responses: 
                "200": 
                    description: Job information.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | completionCount | true | integer | The completion count of the job. This indicates how many items the job has processed. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | errorDetail | false | string | The detailed error information of the job. |
                                | errorMessage | false | string | The error message of the job. |
                                | nodeName | false | string | Name of the Gentics Mesh instance on which the job was executed. |
                                | properties | true | object | Properties of the job. |
                                | startDate | true | string | The start date of the job. |
                                | status | true | string | Migration status. |
                                | stopDate | true | string | The stop date of the job. |
                                | type | true | string | The type of the job. |
                                | uuid | true | string | Uuid of the element |
                                | warnings | false | array | List of warnings which were encoutered while executing the job. |
                            example: |
                                {
                                  "uuid" : "4140183f7b8e4f5b80183f7b8e9f5b2f",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "55464edee41240db864edee41210db7c"
                                  },
                                  "created" : "2018-10-31T15:39:16.552Z",
                                  "type" : "branch",
                                  "properties" : {
                                    "fromVersion" : "1.0",
                                    "branchUuid" : "21002e41769544f4802e41769504f497",
                                    "schemaUuid" : "1af57824a8dc4871b57824a8dcf871c3",
                                    "toVersion" : "2.0"
                                  },
                                  "completionCount" : 0,
                                  "warnings" : [ ]
                                }
        delete: 
            description: Deletes the job. Note that it is only possible to delete failed jobs
    /jobs/{jobUuid}/error: 
        uriParameters: 
            jobUuid: 
                displayName: jobUuid
                description: Uuid of the job.
                type: string
                required: true
                repeat: false
                example: e1471138980e41a2871138980ed1a292
        delete: 
            description: Deletes error state from the job. This will make it possible to execute the job once again.
    /plugins: 
        post: 
            description: Deploys the plugin using the provided deployment information.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | Deployment name of the plugin. This can either be a filesystem or maven deployment. |
                    example: |
                        {
                          "name" : "filesystem:my-plugin.jar"
                        }
            responses: 
                "200": 
                    description: Plugin response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | manifest | true | object | Manifest of the plugin |
                                | name | true | string | Name of the plugin. |
                                | uuid | true | string | Deployment UUUID of the plugin. Note that each deployment will get a new UUID. |
                            example: |
                                {
                                  "uuid" : "5530770c91a44608b0770c91a4b60894",
                                  "name" : "Hello World",
                                  "manifest" : {
                                    "name" : "Hello World",
                                    "apiName" : "hello-world",
                                    "description" : "A dummy plugin",
                                    "version" : "1.0",
                                    "author" : "Joe Doe",
                                    "inception" : "2018-10-31T15:39:16Z",
                                    "license" : "Apache License 2.0"
                                  }
                                }
        get: 
            description: Loads deployment information for all deployed plugins.
            responses: 
                "200": 
                    description: Plugin list response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "860c4e1ee152496c8c4e1ee152896c09",
                                    "name" : "Hello World",
                                    "manifest" : {
                                      "name" : "Hello World",
                                      "apiName" : "hello-world",
                                      "description" : "A dummy plugin",
                                      "version" : "1.0",
                                      "author" : "Joe Doe",
                                      "inception" : "2018-10-31T15:39:16Z",
                                      "license" : "Apache License 2.0"
                                    }
                                  }, {
                                    "uuid" : "cb942e3c3b764dab942e3c3b765dab5d",
                                    "name" : "Hello World",
                                    "manifest" : {
                                      "name" : "Hello World",
                                      "apiName" : "hello-world",
                                      "description" : "A dummy plugin",
                                      "version" : "1.0",
                                      "author" : "Joe Doe",
                                      "inception" : "2018-10-31T15:39:16Z",
                                      "license" : "Apache License 2.0"
                                    }
                                  }, {
                                    "uuid" : "7461a328aeb74730a1a328aeb7c7302c",
                                    "name" : "Hello World",
                                    "manifest" : {
                                      "name" : "Hello World",
                                      "apiName" : "hello-world",
                                      "description" : "A dummy plugin",
                                      "version" : "1.0",
                                      "author" : "Joe Doe",
                                      "inception" : "2018-10-31T15:39:16Z",
                                      "license" : "Apache License 2.0"
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 25,
                                    "pageCount" : 1,
                                    "totalCount" : 3
                                  }
                                }
    /plugins/{uuid}: 
        uriParameters: 
            uuid: 
                displayName: uuid
                description: Uuid of the plugin.
                type: string
                required: true
                repeat: false
                example: "21163b6f6e844a05963b6f6e84da0520"
        delete: 
            description: Undeploys the plugin with the given uuid.
            responses: 
                "200": 
                    description: Plugin response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | manifest | true | object | Manifest of the plugin |
                                | name | true | string | Name of the plugin. |
                                | uuid | true | string | Deployment UUUID of the plugin. Note that each deployment will get a new UUID. |
                            example: |
                                {
                                  "uuid" : "46572a7a44724618972a7a4472561882",
                                  "name" : "Hello World",
                                  "manifest" : {
                                    "name" : "Hello World",
                                    "apiName" : "hello-world",
                                    "description" : "A dummy plugin",
                                    "version" : "1.0",
                                    "author" : "Joe Doe",
                                    "inception" : "2018-10-31T15:39:16Z",
                                    "license" : "Apache License 2.0"
                                  }
                                }
        get: 
            description: Loads deployment information for the plugin with the given id.
            responses: 
                "200": 
                    description: Plugin response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | manifest | true | object | Manifest of the plugin |
                                | name | true | string | Name of the plugin. |
                                | uuid | true | string | Deployment UUUID of the plugin. Note that each deployment will get a new UUID. |
                            example: |
                                {
                                  "uuid" : "dd3211d941c94018b211d941c98018da",
                                  "name" : "Hello World",
                                  "manifest" : {
                                    "name" : "Hello World",
                                    "apiName" : "hello-world",
                                    "description" : "A dummy plugin",
                                    "version" : "1.0",
                                    "author" : "Joe Doe",
                                    "inception" : "2018-10-31T15:39:16Z",
                                    "license" : "Apache License 2.0"
                                  }
                                }
    /processJobs: 
        post: 
            description: Invoke the processing of remaining jobs.
            responses: 
                "200": 
                    description: Response message.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /status: 
        get: 
            description: Return the Gentics Mesh server status.
            responses: 
                "200": 
                    description: Status of the Gentics Mesh server.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | status | true | string | The current Gentics Mesh server status. |
                            example: |
                                {
                                  "status" : "READY"
                                }
/search: 
    displayName: /search
    description: Provides search endpoints which can be used to invoke global searches
    /clear: 
        post: 
            description: Drops all indices and recreates them. The index sync is not invoked automatically.
            responses: 
                "200": 
                    description: Recreated all indices.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /groups: 
        post: 
            description: Invoke a search query for groups and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for groups
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "679594fec68544d49594fec685a4d474",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "959160a42f56417a9160a42f56617ad4"
                                    },
                                    "created" : "2018-10-31T15:39:16.571Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "cb2605e31ca14be2a605e31ca13be2c9"
                                    },
                                    "edited" : "2018-10-31T15:39:16.571Z",
                                    "name" : "Admin Group",
                                    "roles" : [ {
                                      "name" : "admin",
                                      "uuid" : "626d4bacee99406aad4bacee99306a51"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "5e923e81209c4033923e81209ca033a2",
                                    "name" : "Editor Group",
                                    "roles" : [ ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /microschemas: 
        post: 
            description: Invoke a search query for microschemas and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for microschemas
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "478a9d7ede25460d8a9d7ede25060dc7",
                                    "version" : "1.0",
                                    "description" : "Microschema for Geolocations",
                                    "name" : "geolocation",
                                    "fields" : [ {
                                      "name" : "longitude",
                                      "label" : "Longitude",
                                      "required" : true,
                                      "type" : "number"
                                    }, {
                                      "name" : "latitude",
                                      "label" : "Latitude",
                                      "required" : true,
                                      "type" : "number"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "ce95aa5d1d3842f995aa5d1d3862f906",
                                    "version" : "1.0",
                                    "description" : "Microschema for Geolocations",
                                    "name" : "geolocation",
                                    "fields" : [ {
                                      "name" : "longitude",
                                      "label" : "Longitude",
                                      "required" : true,
                                      "type" : "number"
                                    }, {
                                      "name" : "latitude",
                                      "label" : "Latitude",
                                      "required" : true,
                                      "type" : "number"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /nodes: 
        post: 
            description: Invoke a search query for nodes and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for nodes
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "cbdc8d6d1e134ef09c8d6d1e13cef0f4",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "54c1e39eeab94bd881e39eeab9bbd8ac"
                                    },
                                    "created" : "2018-10-31T15:39:16.572Z",
                                    "edited" : "2018-10-31T15:39:16.572Z",
                                    "availableLanguages" : {
                                      "de" : {
                                        "published" : true,
                                        "version" : "1.0",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "acbd7dd5a111403bbd7dd5a111303b36"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.572Z"
                                      },
                                      "en" : {
                                        "published" : false,
                                        "version" : "1.1",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "749b052c78a04ca79b052c78a08ca7b2"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.572Z"
                                      }
                                    },
                                    "languagePaths" : {
                                      "de" : "/api/v1/yourProject/webroot/Bilder",
                                      "en" : "/api/v1/yourProject/webroot/Images"
                                    },
                                    "parentNode" : {
                                      "uuid" : "d025251bd50348aea5251bd503c8ae06",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "4997880868e7494197880868e7a941b7",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "red",
                                      "uuid" : "b742693d97bd463e82693d97bd963ebc",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "33bd0497219548afbd0497219548afb2",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "ded0a3c511bd44e990a3c511bd84e997"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "4c42b3fb751347ea82b3fb751387ea23"
                                    } ],
                                    "childrenInfo" : {
                                      "folder" : {
                                        "schemaUuid" : "6ff0642568824599b064256882e59924",
                                        "count" : 5
                                      },
                                      "blogpost" : {
                                        "schemaUuid" : "f10e875fa7ea485c8e875fa7ea685cf2",
                                        "count" : 1
                                      }
                                    },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "da3366cc33ff467ab366cc33ff967a78",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag de-DE",
                                      "filename" : "dummy-content.de.html",
                                      "teaser" : "Dummy teaser for de-DE",
                                      "content" : "Content for language tag de-DE",
                                      "relatedProduct" : {
                                        "uuid" : "f1b8b6ebeb9b48d8b8b6ebeb9b68d8bb"
                                      },
                                      "price" : 100.1,
                                      "enabled" : true,
                                      "branch" : "2018-10-31T15:39:16.572Z",
                                      "categories" : [ {
                                        "uuid" : "bf00d2a9363e4eb180d2a9363e3eb14f"
                                      }, {
                                        "uuid" : "a2d52c39167a45a9952c39167a15a9d1"
                                      }, {
                                        "uuid" : "a4a2fb1a7ed14713a2fb1a7ed1771319"
                                      } ],
                                      "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                      "categoryIds" : [ 1, 42, 133, 7 ],
                                      "binary" : {
                                        "fileName" : "flower.jpg",
                                        "width" : 800,
                                        "height" : 600,
                                        "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                        "fileSize" : 95365,
                                        "mimeType" : "image/jpeg",
                                        "dominantColor" : "#22a7f0"
                                      },
                                      "location" : {
                                        "uuid" : "13401cccb6c346a2801cccb6c376a221",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "74180a751a004981980a751a00898137"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      },
                                      "locations" : [ {
                                        "uuid" : "8b85ffaad891470385ffaad891d7033d",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "e8d0cfbf3c114ce290cfbf3c116ce2ec"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      }, {
                                        "uuid" : "b44d69c14ca6437b8d69c14ca6037b7a",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "f1ad6ae15a254517ad6ae15a2545171b"
                                        },
                                        "fields" : {
                                          "latitude" : 48.137222,
                                          "longitude" : 11.575556
                                        }
                                      } ]
                                    },
                                    "path" : "/api/v1/yourProject/webroot/Images",
                                    "breadcrumb" : [ {
                                      "uuid" : "b32814be88dd41e5a814be88dd81e50d",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "4e344286d78047e1b44286d780e7e159",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "3f1c2913f2d14bf69c2913f2d1ebf6aa",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "27da18b299b644d09a18b299b6c4d0ab"
                                    },
                                    "created" : "2018-10-31T15:39:16.572Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "de8011b0e45645a58011b0e456d5a593"
                                    },
                                    "edited" : "2018-10-31T15:39:16.572Z",
                                    "parentNode" : {
                                      "uuid" : "d72db372c936427fadb372c936727f2a",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "17a2f3f0c5be41cda2f3f0c5bef1cd85",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "b2738b84f3264ac9b38b84f3260ac956",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "5cc59112461543ae8591124615f3ae2b",
                                      "tagFamily" : "vehicles"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "c3a3e32c5e264e03a3e32c5e260e03b1",
                                      "tagFamily" : "vehicles"
                                    } ],
                                    "childrenInfo" : { },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "d62ba816c2d64928aba816c2d6692833",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag en",
                                      "filename" : "dummy-content.en.html",
                                      "teaser" : "Dummy teaser for en",
                                      "content" : "Content for language tag en"
                                    },
                                    "breadcrumb" : [ {
                                      "uuid" : "460b930dda1043d18b930dda10f3d1a7",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "44c32b902b344d63832b902b340d63a2",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /projects: 
        post: 
            description: Invoke a search query for projects and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for projects
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "93ade2fa03cd4b57ade2fa03cdeb5769",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "15d4ce1a188d4f7794ce1a188d1f77b0"
                                    },
                                    "created" : "2018-10-31T15:39:16.573Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "f5d08ee6971b47a6908ee6971bb7a66b"
                                    },
                                    "edited" : "2018-10-31T15:39:16.573Z",
                                    "name" : "Dummy project",
                                    "rootNode" : {
                                      "uuid" : "911b65248d074e459b65248d071e4510"
                                    },
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "8132d021e62a473cb2d021e62a173c06",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "4ec74d90144948cd874d90144928cda9"
                                    },
                                    "created" : "2018-10-31T15:39:16.573Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "5f104673248a4f31904673248acf3147"
                                    },
                                    "edited" : "2018-10-31T15:39:16.573Z",
                                    "name" : "Dummy Project (Mobile)",
                                    "rootNode" : {
                                      "uuid" : "eceecaa117654c74aecaa11765cc743d"
                                    },
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /roles: 
        post: 
            description: Invoke a search query for roles and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for roles
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "b8149d4556174878949d455617487849",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "df8960afd89542818960afd895f28176"
                                    },
                                    "created" : "2018-10-31T15:39:16.571Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "bd80d38e8b1a4f8380d38e8b1a4f839f"
                                    },
                                    "edited" : "2018-10-31T15:39:16.571Z",
                                    "name" : "Reader role",
                                    "groups" : [ ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "2d83018708d7457e83018708d7d57e41",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "ec70a07700264855b0a077002658552d"
                                    },
                                    "created" : "2018-10-31T15:39:16.571Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "5e814096ddc04f86814096ddc0cf862c"
                                    },
                                    "edited" : "2018-10-31T15:39:16.571Z",
                                    "name" : "Admin role",
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "ddb59b69f4504f06b59b69f4504f06b7"
                                    }, {
                                      "name" : "guests",
                                      "uuid" : "dfd42e90eb8e46db942e90eb8eb6dbd1"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /schemas: 
        post: 
            description: Invoke a search query for schemas and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for schemas
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "fea54e2557ea4c46a54e2557eafc462d",
                                    "displayField" : "name",
                                    "segmentField" : "name",
                                    "container" : false,
                                    "description" : "Example schema description",
                                    "name" : "ExampleSchema",
                                    "fields" : [ {
                                      "name" : "name",
                                      "label" : "Name",
                                      "required" : false,
                                      "type" : "string"
                                    }, {
                                      "name" : "number",
                                      "label" : "Number",
                                      "required" : false,
                                      "type" : "number"
                                    }, {
                                      "name" : "html",
                                      "label" : "Teaser",
                                      "required" : false,
                                      "type" : "html"
                                    }, {
                                      "name" : "list",
                                      "label" : "List of nodes",
                                      "required" : false,
                                      "listType" : "node",
                                      "type" : "list",
                                      "allow" : [ "content", "video" ]
                                    }, {
                                      "name" : "node",
                                      "required" : false,
                                      "type" : "node",
                                      "allow" : [ "content", "video", "image" ]
                                    }, {
                                      "name" : "location",
                                      "label" : "Location",
                                      "required" : false,
                                      "type" : "micronode",
                                      "allow" : [ "geolocation" ]
                                    }, {
                                      "name" : "locationlist",
                                      "label" : "List of Locations",
                                      "required" : false,
                                      "listType" : "micronode",
                                      "type" : "list",
                                      "allow" : [ "geolocation" ]
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "325caed012be427c9caed012bed27cc0",
                                    "displayField" : "name",
                                    "segmentField" : "name",
                                    "container" : false,
                                    "description" : "Example schema description",
                                    "name" : "ExampleSchema",
                                    "fields" : [ {
                                      "name" : "name",
                                      "label" : "Name",
                                      "required" : false,
                                      "type" : "string"
                                    }, {
                                      "name" : "number",
                                      "label" : "Number",
                                      "required" : false,
                                      "type" : "number"
                                    }, {
                                      "name" : "html",
                                      "label" : "Teaser",
                                      "required" : false,
                                      "type" : "html"
                                    }, {
                                      "name" : "list",
                                      "label" : "List of nodes",
                                      "required" : false,
                                      "listType" : "node",
                                      "type" : "list",
                                      "allow" : [ "content", "video" ]
                                    }, {
                                      "name" : "node",
                                      "required" : false,
                                      "type" : "node",
                                      "allow" : [ "content", "video", "image" ]
                                    }, {
                                      "name" : "location",
                                      "label" : "Location",
                                      "required" : false,
                                      "type" : "micronode",
                                      "allow" : [ "geolocation" ]
                                    }, {
                                      "name" : "locationlist",
                                      "label" : "List of Locations",
                                      "required" : false,
                                      "listType" : "micronode",
                                      "type" : "list",
                                      "allow" : [ "geolocation" ]
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /status: 
        get: 
            description: Returns the search index status.
            responses: 
                "200": 
                    description: Search index status.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | available | true | boolean | Flag which indicates whether Elasticsearch is available and search queries can be executed. |
                                | indexSyncRunning | false | boolean | Flag which indicates whether a index synchronization is currently running. |
                                | metrics | false | object | Map which contains various metric values. |
                            example: |
                                {
                                  "available" : true,
                                  "indexSyncRunning" : false,
                                  "metrics" : {
                                    "tagfamily" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "schema" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "node" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "role" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "microschema" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "project" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "tag" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "user" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    },
                                    "group" : {
                                      "insert.total" : 0,
                                      "delete.pending" : 0,
                                      "insert.pending" : 0,
                                      "update.pending" : 0,
                                      "delete.total" : 0,
                                      "update.total" : 0
                                    }
                                  }
                                }
    /sync: 
        post: 
            description: Invokes the manual synchronisation of the search indices. This operation may take some time to complete and is performed asynchronously. When clustering is enabled it will be executed on any free instance.
            responses: 
                "200": 
                    description: Invoked index synchronisation on all indices.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /tagFamilies: 
        post: 
            description: Invoke a search query for tagFamilies and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for tagFamilies
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "f80e4cd394604a388e4cd39460ba3890"
                                    },
                                    "created" : "2018-10-31T15:39:16.573Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "c418da76338741ba98da76338731ba11"
                                    },
                                    "edited" : "2018-10-31T15:39:16.573Z",
                                    "name" : "Colors",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /tags: 
        post: 
            description: Invoke a search query for tags and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for tags
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "bc124c14d3374210924c14d337f210aa",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "7b345e41f7bf48a4b45e41f7bf88a41c"
                                    },
                                    "created" : "2018-10-31T15:39:16.573Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "1738451f35554827b8451f3555b827df"
                                    },
                                    "edited" : "2018-10-31T15:39:16.573Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "585716f46eed4ec39716f46eed6ec3fe"
                                    },
                                    "name" : "green",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "fa672d0a528f461ea72d0a528fb61e0e",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "5e62664c84e14444a2664c84e144443b"
                                    },
                                    "created" : "2018-10-31T15:39:16.573Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "5f855dd0dab6424c855dd0dab6d24cc5"
                                    },
                                    "edited" : "2018-10-31T15:39:16.573Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "de02fff0cc6046a682fff0cc6056a60e"
                                    },
                                    "name" : "Name for language tag en",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /users: 
        post: 
            description: Invoke a search query for users and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result for users
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "74827abdb63f4750827abdb63fd75087",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "a622cf086b034f15a2cf086b037f1527"
                                    },
                                    "created" : "2018-10-31T15:39:16.570Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "c1a62b77ba794f3ba62b77ba790f3b82"
                                    },
                                    "edited" : "2018-10-31T15:39:16.570Z",
                                    "lastname" : "Doe",
                                    "firstname" : "Joe",
                                    "username" : "jdoe",
                                    "emailAddress" : "j.doe@nowhere.com",
                                    "nodeReference" : {
                                      "projectName" : "dummy",
                                      "uuid" : "30230ea01c8540c7a30ea01c85d0c79e"
                                    },
                                    "enabled" : true,
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "cfcf883aa0534b8c8f883aa053eb8c42"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "b879868add574891b9868add5778913f",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "b907228a7290459c87228a7290659c6e"
                                    },
                                    "created" : "2018-10-31T15:39:16.570Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "3e9763eecce942499763eecce91249ec"
                                    },
                                    "edited" : "2018-10-31T15:39:16.570Z",
                                    "lastname" : "Roe",
                                    "firstname" : "Jane",
                                    "username" : "jroe",
                                    "emailAddress" : "j.roe@nowhere.com",
                                    "nodeReference" : {
                                      "projectName" : "dummy",
                                      "uuid" : "d01fba71239345e19fba712393e5e167"
                                    },
                                    "enabled" : true,
                                    "groups" : [ {
                                      "name" : "editors",
                                      "uuid" : "2c301aa2919c4e99b01aa2919cbe993b"
                                    }, {
                                      "name" : "super-editors",
                                      "uuid" : "4c4ead3c7688440c8ead3c7688640c59"
                                    }, {
                                      "name" : "editors",
                                      "uuid" : "4cd1d53f19ac421191d53f19acc211c6"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
/rawSearch: 
    displayName: /rawSearch
    description: Provides search endpoints which can be used to invoke global searches which return the unmodified Elasticsearch response.
    /groups: 
        post: 
            description: Invoke a search query for groups and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /microschemas: 
        post: 
            description: Invoke a search query for microschemas and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /nodes: 
        post: 
            description: Invoke a search query for nodes and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /projects: 
        post: 
            description: Invoke a search query for projects and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /roles: 
        post: 
            description: Invoke a search query for roles and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /schemas: 
        post: 
            description: Invoke a search query for schemas and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /tagFamilies: 
        post: 
            description: Invoke a search query for tagFamilies and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /tags: 
        post: 
            description: Invoke a search query for tags and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /users: 
        post: 
            description: Invoke a search query for users and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
/utilities: 
    displayName: /utilities
    description: Provides endpoints for various utility actions
    /linkResolver: 
        post: 
            description: Return the posted text and resolve and replace all found mesh links. A mesh link must be in the format {{mesh.link("UUID","languageTag")}}
            queryParameters: 
                lang: 
                    description: ISO 639-1 language tag of the language which should be loaded. Fallback handling can be applied by specifying multiple languages in a comma-separated list. The first matching language will be returned.  If omitted or the requested language is not available then the _defaultLanguage_ as configured in _mesh.yml_ will be returned.
                    type: string
                    required: false
                    repeat: false
                    example: en,de
                resolveLinks: 
                    description: 'The resolve links parameter can be set to either _short_, _medium_ or _full_. Stored mesh links will automatically be resolved and replaced by the resolved webroot link. With the parameter set the _path_ property as well as the _languagesPath_ property (for available language variants) will be included in the response. Gentics Mesh links in any HTML-typed field will automatically be resolved and replaced by the resolved link:{{< relref "features.asciidoc" >}}#_link_resolving[WebRoot path]. No resolving occurs if no link has been specified.'
                    type: string
                    required: false
                    repeat: false
                    example: medium
            body: 
                text/plain: 
                    example: Some text before {{mesh.link("67282492fd5a48f5a82492fd5a18f5e0", "en")}} and after.
            responses: 
                "200": 
                    description: Some text before /api/v1/dummy/webroot/flower.jpg and after
    /validateMicroschema: 
        post: 
            description: Validate the posted microschema and report errors.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | description | false | string | Description of the microschema |
                        | elasticsearch | false | object | Additional elasticsearch index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | false | array | List of microschema fields |
                        | name | true | string | Name of the microschema |
                    example: |
                        {
                          "description" : "Microschema for Geolocations",
                          "name" : "geolocation",
                          "fields" : [ {
                            "name" : "longitude",
                            "label" : "Longitude",
                            "required" : true,
                            "type" : "number"
                          }, {
                            "name" : "latitude",
                            "label" : "Latitude",
                            "required" : true,
                            "type" : "number"
                          } ]
                        }
            responses: 
                "200": 
                    description: The validation report
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | elasticsearch | false | object | The generated elasticsearch index configuration which includes the used analyzers and mappings. |
                                | message | true | object | Detailed validation message. |
                                | status | true | string | Status of the validation. |
                            example: |
                                {
                                  "status" : "VALID",
                                  "message" : {
                                    "message" : "Schema validation was successful."
                                  },
                                  "elasticsearch" : {
                                    "settings" : {
                                      "analysis" : {
                                        "analyzer" : {
                                          "trigrams" : {
                                            "tokenizer" : "my_ngram_tokenizer",
                                            "filter" : [ "lowercase" ]
                                          }
                                        },
                                        "tokenizer" : {
                                          "my_ngram_tokenizer" : {
                                            "type" : "nGram",
                                            "min_gram" : "3",
                                            "max_gram" : "3"
                                          }
                                        }
                                      },
                                      "somebogus" : "value"
                                    },
                                    "mappings" : {
                                      "default" : {
                                        "properties" : {
                                          "uuid" : {
                                            "type" : "string",
                                            "index" : "not_analyzed"
                                          },
                                          "created" : {
                                            "type" : "date",
                                            "index" : "not_analyzed"
                                          },
                                          "edited" : {
                                            "type" : "date",
                                            "index" : "not_analyzed"
                                          },
                                          "editor" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "creator" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "_roleUuids" : {
                                            "type" : "string",
                                            "index" : "not_analyzed"
                                          },
                                          "project" : {
                                            "type" : "object",
                                            "properties" : {
                                              "name" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "tags" : {
                                            "type" : "nested",
                                            "properties" : {
                                              "name" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "tagFamilies" : {
                                            "type" : "object",
                                            "dynamic" : true
                                          },
                                          "language" : {
                                            "type" : "string",
                                            "index" : "not_analyzed"
                                          },
                                          "schema" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              },
                                              "name" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "version" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "displayField" : {
                                            "type" : "object",
                                            "properties" : {
                                              "key" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "value" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "parentNode" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "fields" : {
                                            "properties" : { }
                                          }
                                        },
                                        "dynamic" : "strict",
                                        "dynamic_templates" : [ {
                                          "tagFamilyUuid" : {
                                            "path_match" : "tagFamilies.*.uuid",
                                            "match_mapping_type" : "*",
                                            "mapping" : {
                                              "type" : "string",
                                              "index" : "not_analyzed"
                                            }
                                          }
                                        }, {
                                          "tagFamilyTags" : {
                                            "path_match" : "tagFamilies.*.tags",
                                            "match_mapping_type" : "*",
                                            "mapping" : {
                                              "type" : "nested",
                                              "properties" : {
                                                "name" : {
                                                  "type" : "string",
                                                  "index" : "analyzed",
                                                  "analyzer" : "trigrams",
                                                  "fields" : {
                                                    "raw" : {
                                                      "type" : "string",
                                                      "index" : "not_analyzed"
                                                    }
                                                  }
                                                },
                                                "uuid" : {
                                                  "type" : "string",
                                                  "index" : "not_analyzed"
                                                }
                                              }
                                            }
                                          }
                                        } ]
                                      }
                                    }
                                  }
                                }
    /validateSchema: 
        post: 
            description: Validate the posted schema and report errors.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | container | false | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                        | description | false | string | New description of the schema. |
                        | displayField | false | string | Name of the display field. |
                        | elasticsearch | false | object | Additional elasticsearch index configuration. This can be used to setup custom analyzers and filters. |
                        | fields | true | array | List of schema fields |
                        | name | true | string | Name of the schema. |
                        | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                        | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                        | version | false | string | Version of the schema. |
                    example: |
                        {
                          "container" : false,
                          "description" : "New description",
                          "name" : "extended-content",
                          "fields" : [ ]
                        }
            responses: 
                "200": 
                    description: The validation message
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | elasticsearch | false | object | The generated elasticsearch index configuration which includes the used analyzers and mappings. |
                                | message | true | object | Detailed validation message. |
                                | status | true | string | Status of the validation. |
                            example: |
                                {
                                  "status" : "VALID",
                                  "message" : {
                                    "message" : "Schema validation was successful."
                                  },
                                  "elasticsearch" : {
                                    "settings" : {
                                      "analysis" : {
                                        "analyzer" : {
                                          "trigrams" : {
                                            "tokenizer" : "my_ngram_tokenizer",
                                            "filter" : [ "lowercase" ]
                                          }
                                        },
                                        "tokenizer" : {
                                          "my_ngram_tokenizer" : {
                                            "type" : "nGram",
                                            "min_gram" : "3",
                                            "max_gram" : "3"
                                          }
                                        }
                                      },
                                      "somebogus" : "value"
                                    },
                                    "mappings" : {
                                      "default" : {
                                        "properties" : {
                                          "uuid" : {
                                            "type" : "string",
                                            "index" : "not_analyzed"
                                          },
                                          "created" : {
                                            "type" : "date",
                                            "index" : "not_analyzed"
                                          },
                                          "edited" : {
                                            "type" : "date",
                                            "index" : "not_analyzed"
                                          },
                                          "editor" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "creator" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "_roleUuids" : {
                                            "type" : "string",
                                            "index" : "not_analyzed"
                                          },
                                          "project" : {
                                            "type" : "object",
                                            "properties" : {
                                              "name" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "tags" : {
                                            "type" : "nested",
                                            "properties" : {
                                              "name" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "tagFamilies" : {
                                            "type" : "object",
                                            "dynamic" : true
                                          },
                                          "language" : {
                                            "type" : "string",
                                            "index" : "not_analyzed"
                                          },
                                          "schema" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              },
                                              "name" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "version" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "displayField" : {
                                            "type" : "object",
                                            "properties" : {
                                              "key" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              },
                                              "value" : {
                                                "type" : "string",
                                                "index" : "analyzed",
                                                "analyzer" : "trigrams",
                                                "fields" : {
                                                  "raw" : {
                                                    "type" : "string",
                                                    "index" : "not_analyzed"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "parentNode" : {
                                            "type" : "object",
                                            "properties" : {
                                              "uuid" : {
                                                "type" : "string",
                                                "index" : "not_analyzed"
                                              }
                                            }
                                          },
                                          "fields" : {
                                            "properties" : { }
                                          }
                                        },
                                        "dynamic" : "strict",
                                        "dynamic_templates" : [ {
                                          "tagFamilyUuid" : {
                                            "path_match" : "tagFamilies.*.uuid",
                                            "match_mapping_type" : "*",
                                            "mapping" : {
                                              "type" : "string",
                                              "index" : "not_analyzed"
                                            }
                                          }
                                        }, {
                                          "tagFamilyTags" : {
                                            "path_match" : "tagFamilies.*.tags",
                                            "match_mapping_type" : "*",
                                            "mapping" : {
                                              "type" : "nested",
                                              "properties" : {
                                                "name" : {
                                                  "type" : "string",
                                                  "index" : "analyzed",
                                                  "analyzer" : "trigrams",
                                                  "fields" : {
                                                    "raw" : {
                                                      "type" : "string",
                                                      "index" : "not_analyzed"
                                                    }
                                                  }
                                                },
                                                "uuid" : {
                                                  "type" : "string",
                                                  "index" : "not_analyzed"
                                                }
                                              }
                                            }
                                          }
                                        } ]
                                      }
                                    }
                                  }
                                }
/auth: 
    displayName: /auth
    description: Endpoint which contains login and logout methods.
    /login: 
        get: 
            description: Login via basic authentication.
            responses: 
                "200": 
                    description: Login was sucessful
        post: 
            description: Login via this dedicated login endpoint.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | password | true | string | Password of the user which should be logged in. |
                        | username | true | string | Username of the user which should be logged in. |
                    example: |
                        {
                          "username" : "admin",
                          "password" : "finger"
                        }
            responses: 
                "200": 
                    description: Generated login token.
                    body: 
                        text/plain: 
                            example: '{"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyVXVpZCI6IlVVSURPRlVTRVIxIiwiZXhwIjoxNDY5MTE3MjQ3LCJpYXQiOjE0NjkxMTM2NDd9.i1u4RMs4K7zBkGhmcpp1P79Wpz2UQYJkZKJTVdFp_iU="}'
    /logout: 
        get: 
            description: Logout and delete the currently active session.
            responses: 
                "200": 
                    description: User was successfully logged out.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /me: 
        get: 
            description: Load your own user which is currently logged in.
            responses: 
                "200": 
                    description: Currently logged in user.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | emailAddress | false | string | Email address of the user |
                                | enabled | true | boolean | Flag which indicates whether the user is enabled or disabled. Disabled users can no longer log into Gentics Mesh. Deleting a user user will not remove it. Instead the user will just be disabled. |
                                | firstname | false | string | Firstname of the user. |
                                | groups | true | array | List of group references to which the user belongs. |
                                | lastname | false | string | Lastname of the user. |
                                | nodeReference | false | object | Optional node reference of the user. Users can directly reference a single node. This can be used to store additional data that is user related. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | username | true | string | Username of the user. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "b3dc57644a9a46369c57644a9ab636d8",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "579f2e59d88748699f2e59d887e869cf"
                                  },
                                  "created" : "2018-10-31T15:39:16.604Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "f4096363601f495a896363601f195a66"
                                  },
                                  "edited" : "2018-10-31T15:39:16.604Z",
                                  "lastname" : "Doe",
                                  "firstname" : "Joe",
                                  "username" : "jdoe",
                                  "emailAddress" : "j.doe@nowhere.com",
                                  "nodeReference" : {
                                    "projectName" : "dummy",
                                    "uuid" : "d25d21bea71c41049d21bea71c4104fe"
                                  },
                                  "enabled" : true,
                                  "groups" : [ {
                                    "name" : "editors",
                                    "uuid" : "4aeb83d3d1df4a7bab83d3d1df0a7b37"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
/eventbus: 
    displayName: /eventbus
    description: This endpoint is a SockJS compliant websocket that creates a bridge to the mesh eventbus. It allows handling of various mesh specific events.
/: 
    displayName: /
    description: Provides endpoints that return information about the REST API.
    /: 
        get: 
            description: Endpoint which returns version information
            displayName: Version Information
            responses: 
                "200": 
                    description: JSON which contains version information
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | databaseRevision | false | string | Database structure revision hash. |
                                | databaseVendor | false | string | Used database implementation vendor name. |
                                | databaseVersion | false | string | Used database implementation version. |
                                | meshNodeId | false | string | NodeId of the Gentics Mesh instance. |
                                | meshVersion | false | string | Gentics Mesh Version string. |
                                | searchVendor | false | string | Used search implementation vendor name. |
                                | searchVersion | false | string | Used search implementation version. |
                                | vertxVersion | false | string | Used Vert.x version. |
                            example: |
                                {
                                  "meshVersion" : "0.27.1-SNAPSHOT",
                                  "meshNodeId" : "Reminiscent Tirtouga",
                                  "databaseVendor" : "orientdb",
                                  "databaseVersion" : "2.2.16",
                                  "searchVendor" : "elasticsearch",
                                  "searchVersion" : "2.4.3",
                                  "vertxVersion" : "3.5.4"
                                }
    /raml: 
        get: 
            description: Endpoint which provides a RAML document for all registed endpoints.
            displayName: RAML specification
            responses: 
                "200": 
                    description: Not yet specified
    /{project}: 
        uriParameters: 
            project: 
                displayName: project
                description: Name of the project.
                type: string
                required: true
                repeat: false
                example: demo
        get: 
            description: Return the current project info.
            responses: 
                "200": 
                    description: Project information.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | The name of the project. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | rootNode | true | object | The project root node. All futher nodes are children of this node. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "8fe9762789f84437a9762789f8e437db",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "57f8affb762b499eb8affb762bf99ee7"
                                  },
                                  "created" : "2018-10-31T15:39:16.609Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "74de444d6b774a139e444d6b77da138c"
                                  },
                                  "edited" : "2018-10-31T15:39:16.609Z",
                                  "name" : "demo",
                                  "rootNode" : {
                                    "uuid" : "7494a18abd1f45b594a18abd1ff5b5a9"
                                  },
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
/{project}/nodes: 
    displayName: /{project}/nodes
    description: Provides endpoints which allow the manipulation of nodes.
    /: 
        post: 
            description: Create a new node.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | fields | true | object | Dynamic map with fields of the node content. |
                        | language | true | string | ISO 639-1 language tag of the node content. |
                        | parentNode | true | object | Reference to the parent node in which the node will be created. The uuid of this object must be set. |
                        | schema | true | object | Reference to the schema of the node. |
                    example: |
                        {
                          "parentNode" : {
                            "uuid" : "1e0c1284685243bf8c1284685243bf0b"
                          },
                          "schema" : {
                            "name" : "vehicle"
                          },
                          "language" : "en",
                          "fields" : {
                            "name" : "DeLorean DMC-12",
                            "description" : "The DeLorean DMC-12 is a sports car manufactured by John DeLorean's DeLorean Motor Company for the American market from 1981–83."
                          }
                        }
            responses: 
                "201": 
                    description: Created node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "4f56366572a94b6d96366572a9fb6d3d",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "a4ef40cba5364529af40cba536952968"
                                  },
                                  "created" : "2018-10-31T15:39:16.612Z",
                                  "edited" : "2018-10-31T15:39:16.612Z",
                                  "availableLanguages" : {
                                    "de" : {
                                      "published" : true,
                                      "version" : "1.0",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "d58ce30d290d4c358ce30d290dbc3597"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.612Z"
                                    },
                                    "en" : {
                                      "published" : false,
                                      "version" : "1.1",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "d24d83b479e04ab28d83b479e03ab2ef"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.612Z"
                                    }
                                  },
                                  "languagePaths" : {
                                    "de" : "/api/v1/yourProject/webroot/Bilder",
                                    "en" : "/api/v1/yourProject/webroot/Images"
                                  },
                                  "parentNode" : {
                                    "uuid" : "5f0d04b21929432c8d04b21929a32c12",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "35c388053027424c8388053027824c74",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "red",
                                    "uuid" : "f4876cd28a5f4542876cd28a5f6542fe",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "62a0fb93b1d245e4a0fb93b1d235e481",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "7717e0d4a0554d9f97e0d4a055cd9feb"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "5c8f1e59ddc34e038f1e59ddc30e0381"
                                  } ],
                                  "childrenInfo" : {
                                    "folder" : {
                                      "schemaUuid" : "201da21a65a540299da21a65a5f02956",
                                      "count" : 5
                                    },
                                    "blogpost" : {
                                      "schemaUuid" : "ba525a64c57346ca925a64c573f6ca52",
                                      "count" : 1
                                    }
                                  },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "05b2ff244ef3484eb2ff244ef3384ee0",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag de-DE",
                                    "filename" : "dummy-content.de.html",
                                    "teaser" : "Dummy teaser for de-DE",
                                    "content" : "Content for language tag de-DE",
                                    "relatedProduct" : {
                                      "uuid" : "cca4bbd5cd4a4d72a4bbd5cd4a8d72d2"
                                    },
                                    "price" : 100.1,
                                    "enabled" : true,
                                    "branch" : "2018-10-31T15:39:16.612Z",
                                    "categories" : [ {
                                      "uuid" : "da85427f8011474485427f8011474498"
                                    }, {
                                      "uuid" : "64e26b646f324491a26b646f32349197"
                                    }, {
                                      "uuid" : "60e0ecaf0f1e479ca0ecaf0f1ef79cbe"
                                    } ],
                                    "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                    "categoryIds" : [ 1, 42, 133, 7 ],
                                    "binary" : {
                                      "fileName" : "flower.jpg",
                                      "width" : 800,
                                      "height" : 600,
                                      "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                      "fileSize" : 95365,
                                      "mimeType" : "image/jpeg",
                                      "dominantColor" : "#22a7f0"
                                    },
                                    "location" : {
                                      "uuid" : "2bfacf989c894195bacf989c8961952a",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "b9ecd311ae454c3eacd311ae452c3ea8"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    },
                                    "locations" : [ {
                                      "uuid" : "bba25f84164f456ca25f84164f556cec",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "c9bc1e2d51414f52bc1e2d51417f52db"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    }, {
                                      "uuid" : "ea9aa418b97541eb9aa418b97581eb52",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "07a780dde7e34c99a780dde7e31c99e9"
                                      },
                                      "fields" : {
                                        "latitude" : 48.137222,
                                        "longitude" : 11.575556
                                      }
                                    } ]
                                  },
                                  "path" : "/api/v1/yourProject/webroot/Images",
                                  "breadcrumb" : [ {
                                    "uuid" : "2b83217a789e411f83217a789e011f02",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "8bb59aa3fe024be0b59aa3fe025be064",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Read all nodes and return a paged list response.
            queryParameters: 
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                resolveLinks: 
                    description: 'The resolve links parameter can be set to either _short_, _medium_ or _full_. Stored mesh links will automatically be resolved and replaced by the resolved webroot link. With the parameter set the _path_ property as well as the _languagesPath_ property (for available language variants) will be included in the response. Gentics Mesh links in any HTML-typed field will automatically be resolved and replaced by the resolved link:{{< relref "features.asciidoc" >}}#_link_resolving[WebRoot path]. No resolving occurs if no link has been specified.'
                    type: string
                    required: false
                    repeat: false
                    example: medium
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
                lang: 
                    description: ISO 639-1 language tag of the language which should be loaded. Fallback handling can be applied by specifying multiple languages in a comma-separated list. The first matching language will be returned.  If omitted or the requested language is not available then the _defaultLanguage_ as configured in _mesh.yml_ will be returned.
                    type: string
                    required: false
                    repeat: false
                    example: en,de
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "200": 
                    description: Loaded list of nodes.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "1b6d3a3ddeca4153ad3a3ddeca8153ec",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "e6dd7ac32e9d4e449d7ac32e9d7e44ed"
                                    },
                                    "created" : "2018-10-31T15:39:16.614Z",
                                    "edited" : "2018-10-31T15:39:16.614Z",
                                    "availableLanguages" : {
                                      "de" : {
                                        "published" : true,
                                        "version" : "1.0",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "832b88d3d6104578ab88d3d6104578f7"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.614Z"
                                      },
                                      "en" : {
                                        "published" : false,
                                        "version" : "1.1",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "50703e969d3d46a5b03e969d3db6a565"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.614Z"
                                      }
                                    },
                                    "languagePaths" : {
                                      "de" : "/api/v1/yourProject/webroot/Bilder",
                                      "en" : "/api/v1/yourProject/webroot/Images"
                                    },
                                    "parentNode" : {
                                      "uuid" : "8116f61384e648da96f61384e618da73",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "ff898a7be3144ef7898a7be3149ef79c",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "red",
                                      "uuid" : "19e51117d09b4655a51117d09bb655e5",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "3ea3a6cd0aa9481fa3a6cd0aa9381f7e",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "d4fe62ce6bf74e58be62ce6bf78e5846"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "73e83c52092a4bcda83c52092a4bcd9c"
                                    } ],
                                    "childrenInfo" : {
                                      "folder" : {
                                        "schemaUuid" : "ef6f95351c644adcaf95351c640adc54",
                                        "count" : 5
                                      },
                                      "blogpost" : {
                                        "schemaUuid" : "5511911dcc9d499591911dcc9dd995ea",
                                        "count" : 1
                                      }
                                    },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "b434923d9fea45b8b4923d9fea05b8de",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag de-DE",
                                      "filename" : "dummy-content.de.html",
                                      "teaser" : "Dummy teaser for de-DE",
                                      "content" : "Content for language tag de-DE",
                                      "relatedProduct" : {
                                        "uuid" : "d81cca5325e14f3f9cca5325e1ff3f81"
                                      },
                                      "price" : 100.1,
                                      "enabled" : true,
                                      "branch" : "2018-10-31T15:39:16.614Z",
                                      "categories" : [ {
                                        "uuid" : "6148b7f5212c4b9c88b7f5212c5b9c35"
                                      }, {
                                        "uuid" : "02770ec1fbe64213b70ec1fbe602131e"
                                      }, {
                                        "uuid" : "952dcb106c69430fadcb106c69030faf"
                                      } ],
                                      "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                      "categoryIds" : [ 1, 42, 133, 7 ],
                                      "binary" : {
                                        "fileName" : "flower.jpg",
                                        "width" : 800,
                                        "height" : 600,
                                        "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                        "fileSize" : 95365,
                                        "mimeType" : "image/jpeg",
                                        "dominantColor" : "#22a7f0"
                                      },
                                      "location" : {
                                        "uuid" : "ec813345294f40e5813345294f50e5e6",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "92a431ee3b11477ba431ee3b11377b20"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      },
                                      "locations" : [ {
                                        "uuid" : "0742c367bfa7401982c367bfa7f019fa",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "fe15a3955f85417995a3955f85f17941"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      }, {
                                        "uuid" : "651e18f8813748fa9e18f88137a8fac6",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "1c05a2b41658434985a2b41658234912"
                                        },
                                        "fields" : {
                                          "latitude" : 48.137222,
                                          "longitude" : 11.575556
                                        }
                                      } ]
                                    },
                                    "path" : "/api/v1/yourProject/webroot/Images",
                                    "breadcrumb" : [ {
                                      "uuid" : "39cb11b4f42e4f7e8b11b4f42e9f7e9b",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "086fd17f119041c5afd17f1190a1c5d6",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "01708d1417ba49afb08d1417ba99af60",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "9653b57bdf7c4a3293b57bdf7c5a3207"
                                    },
                                    "created" : "2018-10-31T15:39:16.614Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "1ecb3031013841f38b3031013881f342"
                                    },
                                    "edited" : "2018-10-31T15:39:16.614Z",
                                    "parentNode" : {
                                      "uuid" : "6dec6182cc7440c5ac6182cc74b0c519",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "aea334ac703341bfa334ac703381bfe8",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "2df638cec86b48d9b638cec86b38d94f",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "1cb8dd778db843bab8dd778db8c3ba45",
                                      "tagFamily" : "vehicles"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "0305766f67ab473485766f67ab373451",
                                      "tagFamily" : "vehicles"
                                    } ],
                                    "childrenInfo" : { },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "b4b0516db49d4e9cb0516db49d6e9cc6",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag en",
                                      "filename" : "dummy-content.en.html",
                                      "teaser" : "Dummy teaser for en",
                                      "content" : "Content for language tag en"
                                    },
                                    "breadcrumb" : [ {
                                      "uuid" : "d106eb1cdb7442ca86eb1cdb74c2ca20",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "ac71b43f2ea04247b1b43f2ea0e2471e",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{nodeUuid}: 
        uriParameters: 
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node.
                type: string
                required: true
                repeat: false
                example: c595b3071e734fea95b3071e73ffea7d
        get: 
            description: Load the node with the given uuid.
            queryParameters: 
                role: 
                    description: |
                        The _role_ query parameter take a UUID of a role and may be used to add permission information to the response via the _rolePerm_ property which lists the permissions for the specified role on the element.
                        This may be useful when you are logged in as admin but you want to retrieve the editor role permissions on a given node.
                        Endpoint: */api/v1/:projectName/nodes?role=:roleUuid*
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                lang: 
                    description: ISO 639-1 language tag of the language which should be loaded. Fallback handling can be applied by specifying multiple languages in a comma-separated list. The first matching language will be returned.  If omitted or the requested language is not available then the _defaultLanguage_ as configured in _mesh.yml_ will be returned.
                    type: string
                    required: false
                    repeat: false
                    example: en,de
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
                resolveLinks: 
                    description: 'The resolve links parameter can be set to either _short_, _medium_ or _full_. Stored mesh links will automatically be resolved and replaced by the resolved webroot link. With the parameter set the _path_ property as well as the _languagesPath_ property (for available language variants) will be included in the response. Gentics Mesh links in any HTML-typed field will automatically be resolved and replaced by the resolved link:{{< relref "features.asciidoc" >}}#_link_resolving[WebRoot path]. No resolving occurs if no link has been specified.'
                    type: string
                    required: false
                    repeat: false
                    example: medium
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Loaded node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "59ae7524d7574c5bae7524d7571c5b64",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "8044102d6bd640ad84102d6bd6f0adaf"
                                  },
                                  "created" : "2018-10-31T15:39:16.613Z",
                                  "edited" : "2018-10-31T15:39:16.613Z",
                                  "availableLanguages" : {
                                    "de" : {
                                      "published" : true,
                                      "version" : "1.0",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "69f47e7ffe194c97b47e7ffe197c97dc"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.613Z"
                                    },
                                    "en" : {
                                      "published" : false,
                                      "version" : "1.1",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "4c073be415844b5e873be415848b5ed9"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.613Z"
                                    }
                                  },
                                  "languagePaths" : {
                                    "de" : "/api/v1/yourProject/webroot/Bilder",
                                    "en" : "/api/v1/yourProject/webroot/Images"
                                  },
                                  "parentNode" : {
                                    "uuid" : "a4b6ceb818cc4cfdb6ceb818ccccfd80",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "236b79da1ee54e6eab79da1ee52e6eb3",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "red",
                                    "uuid" : "f579dcbea97847fab9dcbea97807fafc",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "f89413180e7f43a59413180e7f93a501",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "f7577161233344dd977161233384dd4f"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "788da5a847a84f188da5a847a89f18de"
                                  } ],
                                  "childrenInfo" : {
                                    "folder" : {
                                      "schemaUuid" : "9aca120d69274ee78a120d69278ee704",
                                      "count" : 5
                                    },
                                    "blogpost" : {
                                      "schemaUuid" : "8d0ad217bc074f998ad217bc07bf99fe",
                                      "count" : 1
                                    }
                                  },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "c14e2666a07e4cb78e2666a07e7cb7a8",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag de-DE",
                                    "filename" : "dummy-content.de.html",
                                    "teaser" : "Dummy teaser for de-DE",
                                    "content" : "Content for language tag de-DE",
                                    "relatedProduct" : {
                                      "uuid" : "5cc4ad1261e84ded84ad1261e88ded24"
                                    },
                                    "price" : 100.1,
                                    "enabled" : true,
                                    "branch" : "2018-10-31T15:39:16.613Z",
                                    "categories" : [ {
                                      "uuid" : "30e18ba95fa14915a18ba95fa119156c"
                                    }, {
                                      "uuid" : "c780f0b7eb1f489580f0b7eb1ff895c4"
                                    }, {
                                      "uuid" : "609d71c59c754c2c9d71c59c75dc2c2c"
                                    } ],
                                    "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                    "categoryIds" : [ 1, 42, 133, 7 ],
                                    "binary" : {
                                      "fileName" : "flower.jpg",
                                      "width" : 800,
                                      "height" : 600,
                                      "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                      "fileSize" : 95365,
                                      "mimeType" : "image/jpeg",
                                      "dominantColor" : "#22a7f0"
                                    },
                                    "location" : {
                                      "uuid" : "24981c3ae04745f7981c3ae04745f748",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "459c93da897444d09c93da897454d090"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    },
                                    "locations" : [ {
                                      "uuid" : "d2eab24564b04232aab24564b0a232ec",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "c49d839bab4348729d839bab434872b4"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    }, {
                                      "uuid" : "07eb80a1ee994a92ab80a1ee99ea924c",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "af4a097b60824ed78a097b60829ed7ea"
                                      },
                                      "fields" : {
                                        "latitude" : 48.137222,
                                        "longitude" : 11.575556
                                      }
                                    } ]
                                  },
                                  "path" : "/api/v1/yourProject/webroot/Images",
                                  "breadcrumb" : [ {
                                    "uuid" : "135342f8ebd044849342f8ebd0e4849d",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "d3fbc659dc224e84bbc659dc22be841f",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the node with the given uuid. It is mandatory to specify the version within the update request. Mesh will automatically check for version conflicts and return a 409 error if a conflict has been detected. Additional conflict checks for WebRoot path conflicts will also be performed. The node is created if no node with the specified uuid could be found.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | fields | true | object | Dynamic map with fields of the node content. |
                        | language | true | string | ISO 639-1 language tag of the node content. |
                        | version | true | string | Version number which must be provided in order to handle and detect concurrent changes to the node content. |
                    example: |
                        {
                          "language" : "en",
                          "fields" : {
                            "filename" : "index-renamed.en.html",
                            "relatedProduct-" : {
                              "uuid" : "c8e6601059624646a660105962c6469c"
                            },
                            "price" : 100.1,
                            "enabled" : true,
                            "branch" : "2018-10-31T15:39:16.615Z",
                            "categories" : [ {
                              "uuid" : "2a0815ec249c47848815ec249cb78440"
                            }, {
                              "uuid" : "b9ec94a09e5244a5ac94a09e5254a511"
                            }, {
                              "uuid" : "fc97eb9a64004b5497eb9a64004b5447"
                            } ],
                            "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                            "categoryIds" : [ 1, 42, 133, 7 ],
                            "location" : {
                              "uuid" : "5980a345610143a180a3456101d3a15b",
                              "microschema" : {
                                "name" : "geolocation",
                                "uuid" : "7cceb37d39c54cfe8eb37d39c54cfe23"
                              },
                              "fields" : {
                                "latitude" : 48.208330230278,
                                "longitude" : 16.373063840833
                              }
                            },
                            "locations" : [ {
                              "uuid" : "38355b4ece5c4823b55b4ece5c68233f",
                              "microschema" : {
                                "name" : "geolocation",
                                "uuid" : "c53ef2fe755945dbbef2fe755905dba5"
                              },
                              "fields" : {
                                "latitude" : 48.208330230278,
                                "longitude" : 16.373063840833
                              }
                            }, {
                              "uuid" : "0c2f972a22534d0faf972a22534d0f86",
                              "microschema" : {
                                "name" : "geolocation",
                                "uuid" : "aee232c0f18440e8a232c0f18440e8d2"
                              },
                              "fields" : {
                                "latitude" : 48.137222,
                                "longitude" : 11.575556
                              }
                            } ]
                          }
                        }
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Updated node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "4dbc222e154f44f4bc222e154f24f421",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "1b6e2f904a194106ae2f904a191106b1"
                                  },
                                  "created" : "2018-10-31T15:39:16.616Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "284444f97d2d461a8444f97d2d261a4d"
                                  },
                                  "edited" : "2018-10-31T15:39:16.616Z",
                                  "parentNode" : {
                                    "uuid" : "2e2be6fa73ad44bcabe6fa73ad04bc54",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "a8e643e67ef64c43a643e67ef6bc43ef",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "9bc03c6bc3d6406b803c6bc3d6b06b3b",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "8e1ed5c406ed43c79ed5c406edd3c7e5",
                                    "tagFamily" : "vehicles"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "44630c7e3a844fd0a30c7e3a842fd027",
                                    "tagFamily" : "vehicles"
                                  } ],
                                  "childrenInfo" : { },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "914ecff664eb49028ecff664ebf902f6",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag en",
                                    "filename" : "dummy-content.en.html",
                                    "teaser" : "Dummy teaser for en",
                                    "content" : "Content for language tag en"
                                  },
                                  "breadcrumb" : [ {
                                    "uuid" : "f7f6bb89adab4bb2b6bb89adab8bb2fa",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "34d57fe80bc94d86957fe80bc92d86d2",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : false,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
                "409": 
                    description: A conflict has been detected.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
        delete: 
            description: Delete the node with the given uuid.
            queryParameters: 
                recursive: 
                    description: Specifiy whether deletion should also be applied recursively
                    type: boolean
                    required: false
                    repeat: false
                    default: "false"
                    example: "true"
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "204": 
                    description: Deletion was successful.
    /{nodeUuid}/binary/{fieldName}: 
        uriParameters: 
            fieldName: 
                displayName: fieldName
                description: Name of the binary field
                type: string
                required: true
                repeat: false
                example: image
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node.
                type: string
                required: true
                repeat: false
                example: "5adf47b3a36d41849f47b3a36dc18418"
        post: 
            description: Update the binaryfield with the given name.
            body: 
                multipart/form-data: 
                    formParameters: 
                        binary: 
                            description: Single binary file part.
                            type: file
                            required: true
                            repeat: false
                        language: 
                            description: Language of the node content which contains the binary field which should be updated.
                            type: string
                            required: true
                            repeat: false
                            example: en
                        version: 
                            description: Version of the node which should be updated. This information is used to determine conflicting updates.
                            type: string
                            required: true
                            repeat: false
                            example: "1.0"
            responses: 
                "404": 
                    description: The node or the field could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: The response contains the updated node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "a319057240c3488c99057240c3f88cf0",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "6673af1ceab94896b3af1ceab9d896c4"
                                  },
                                  "created" : "2018-10-31T15:39:16.620Z",
                                  "edited" : "2018-10-31T15:39:16.620Z",
                                  "availableLanguages" : {
                                    "de" : {
                                      "published" : true,
                                      "version" : "1.0",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "04c1db042e27474a81db042e27b74a06"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.620Z"
                                    },
                                    "en" : {
                                      "published" : false,
                                      "version" : "1.1",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "f5cd2f155c0d4bbd8d2f155c0dbbbd25"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.620Z"
                                    }
                                  },
                                  "languagePaths" : {
                                    "de" : "/api/v1/yourProject/webroot/Bilder",
                                    "en" : "/api/v1/yourProject/webroot/Images"
                                  },
                                  "parentNode" : {
                                    "uuid" : "e8274491b77f4d27a74491b77fcd2729",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "0b654148a04c4bd5a54148a04cabd5ad",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "red",
                                    "uuid" : "0c7e695608084101be69560808f10147",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "27b7c687d8bd4800b7c687d8bd180016",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "e15d2083a6a144109d2083a6a1c41004"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "1d3cd18c7be34a61bcd18c7be34a6115"
                                  } ],
                                  "childrenInfo" : {
                                    "folder" : {
                                      "schemaUuid" : "f24c9856fbf845e48c9856fbf8b5e455",
                                      "count" : 5
                                    },
                                    "blogpost" : {
                                      "schemaUuid" : "967f92c7086f4f36bf92c7086f0f367b",
                                      "count" : 1
                                    }
                                  },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "7a7ba9951f794f7cbba9951f793f7ceb",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag de-DE",
                                    "filename" : "dummy-content.de.html",
                                    "teaser" : "Dummy teaser for de-DE",
                                    "content" : "Content for language tag de-DE",
                                    "relatedProduct" : {
                                      "uuid" : "6db16b0d87604b23b16b0d87607b2365"
                                    },
                                    "price" : 100.1,
                                    "enabled" : true,
                                    "branch" : "2018-10-31T15:39:16.620Z",
                                    "categories" : [ {
                                      "uuid" : "2936af1f37fd4b79b6af1f37fdeb798a"
                                    }, {
                                      "uuid" : "98b6abd3fbd748cbb6abd3fbd718cbbe"
                                    }, {
                                      "uuid" : "02d048a93cde4f539048a93cdeff53ac"
                                    } ],
                                    "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                    "categoryIds" : [ 1, 42, 133, 7 ],
                                    "binary" : {
                                      "fileName" : "flower.jpg",
                                      "width" : 800,
                                      "height" : 600,
                                      "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                      "fileSize" : 95365,
                                      "mimeType" : "image/jpeg",
                                      "dominantColor" : "#22a7f0"
                                    },
                                    "location" : {
                                      "uuid" : "1b3c4600173541dbbc46001735f1db07",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "45ba83324aa3402cba83324aa3f02ccb"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    },
                                    "locations" : [ {
                                      "uuid" : "bccd3d33290644f78d3d33290654f7d8",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "d8b39cad4eab43a1b39cad4eab43a142"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    }, {
                                      "uuid" : "316e1e1af30a4265ae1e1af30a126585",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "e9f72e07d7ef4856b72e07d7ef585636"
                                      },
                                      "fields" : {
                                        "latitude" : 48.137222,
                                        "longitude" : 11.575556
                                      }
                                    } ]
                                  },
                                  "path" : "/api/v1/yourProject/webroot/Images",
                                  "breadcrumb" : [ {
                                    "uuid" : "7a28a3f1d8644d45a8a3f1d8647d4540",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "f56c1a41421a4019ac1a41421a30193a",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Download the binary field with the given name. You can use image query parameters for crop and resize if the binary data represents an image.
            queryParameters: 
                fpz: 
                    description: Set the focal point zoom factor. The value must be greater than one.
                    type: number
                    required: false
                    repeat: false
                    example: "1.5"
                rect: 
                    description: Set image crop area.
                    type: string
                    required: false
                    repeat: false
                    example: "20,20,128,128"
                w: 
                    description: Set image target width. The height will automatically be calculated if the width was omitted.
                    type: number
                    required: false
                    repeat: false
                    example: "1280"
                h: 
                    description: Set image target height. The width will automatically be calculated if the height was omitted.
                    type: number
                    required: false
                    repeat: false
                    example: "720"
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
                fpy: 
                    description: Set the focal point y factor between 0  and 1 where 0.5 is the middle of the image. You can use this parameter in combination with the crop=fp parameter in order to crop and resize the image in relation to the given point.
                    type: number
                    required: false
                    repeat: false
                    example: "0.2"
                crop: 
                    description: |
                        Set the crop mode. Possible modes: 
                        rect : The rect mode will work in combination with the rect parameter and crop the specified area.
                        fp : The fp mode will utilize the specified or pre-selected focal point and crop the image according to the position of the focus point and the specified image size.
                    type: string
                    required: false
                    repeat: false
                    example: rect
                fpx: 
                    description: Set the focal point x factor between 0  and 1 where 0.5 is the middle of the image.  You can use this parameter in combination with the crop=fp parameter in order to crop and resize the image in relation to the given point.
                    type: number
                    required: false
                    repeat: false
                    example: "0.1"
    /{nodeUuid}/binaryTransform/{fieldName}: 
        uriParameters: 
            fieldName: 
                displayName: fieldName
                description: Name of the field
                type: string
                required: true
                repeat: false
                example: image
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node.
                type: string
                required: true
                repeat: false
                example: f96ac800aa9f4e42aac800aa9f5e42f5
        post: 
            description: Transform the image with the given field name and overwrite the stored image with the transformation result.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | cropRect | false | object | Crop area. |
                        | height | false | integer | New height of the image. |
                        | language | true | string | ISO 639-1 language tag of the node which provides the image which should be transformed. |
                        | version | true | string | Version number which must be provided in order to handle and detect concurrent changes to the node content. |
                        | width | false | integer | New width of the image. |
                    example: |
                        {
                          "version" : "1.0",
                          "language" : "en",
                          "width" : 100,
                          "height" : 200,
                          "cropRect" : {
                            "startX" : 50,
                            "startY" : 20,
                            "width" : 170,
                            "height" : 150
                          }
                        }
            responses: 
                "404": 
                    description: The node or the field could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Transformation was executed and updated node was returned.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "94f60dd7f1d14b49b60dd7f1d14b4981",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "5f2775677e144930a775677e14b9309f"
                                  },
                                  "created" : "2018-10-31T15:39:16.621Z",
                                  "edited" : "2018-10-31T15:39:16.621Z",
                                  "availableLanguages" : {
                                    "de" : {
                                      "published" : true,
                                      "version" : "1.0",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "28a26e89dc974eeea26e89dc970eeeaf"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.621Z"
                                    },
                                    "en" : {
                                      "published" : false,
                                      "version" : "1.1",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "599ad334f4044eb59ad334f404feb52e"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.621Z"
                                    }
                                  },
                                  "languagePaths" : {
                                    "de" : "/api/v1/yourProject/webroot/Bilder",
                                    "en" : "/api/v1/yourProject/webroot/Images"
                                  },
                                  "parentNode" : {
                                    "uuid" : "879bed082c4441cd9bed082c44c1cd95",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "76c317a0844747228317a08447e722a7",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "red",
                                    "uuid" : "93e6613a0f264cbca6613a0f261cbcb9",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "c20ceb7ab8aa4b568ceb7ab8aa3b56c5",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "4c4a0efeb5ba4bd08a0efeb5ba7bd08c"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "ed859db0ad38478d859db0ad38d78d90"
                                  } ],
                                  "childrenInfo" : {
                                    "folder" : {
                                      "schemaUuid" : "804f85c356fc46c18f85c356fc26c134",
                                      "count" : 5
                                    },
                                    "blogpost" : {
                                      "schemaUuid" : "77c29059893a479f829059893a079fd6",
                                      "count" : 1
                                    }
                                  },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "21ccc5456d3347be8cc5456d3307be53",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag de-DE",
                                    "filename" : "dummy-content.de.html",
                                    "teaser" : "Dummy teaser for de-DE",
                                    "content" : "Content for language tag de-DE",
                                    "relatedProduct" : {
                                      "uuid" : "66dff6cb3cf047279ff6cb3cf0e7274d"
                                    },
                                    "price" : 100.1,
                                    "enabled" : true,
                                    "branch" : "2018-10-31T15:39:16.621Z",
                                    "categories" : [ {
                                      "uuid" : "5cb3d39606d34cc8b3d39606d3ecc89f"
                                    }, {
                                      "uuid" : "6d97dc70f51945da97dc70f51945da5b"
                                    }, {
                                      "uuid" : "acb72e978c0e4718b72e978c0ea718e2"
                                    } ],
                                    "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                    "categoryIds" : [ 1, 42, 133, 7 ],
                                    "binary" : {
                                      "fileName" : "flower.jpg",
                                      "width" : 800,
                                      "height" : 600,
                                      "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                      "fileSize" : 95365,
                                      "mimeType" : "image/jpeg",
                                      "dominantColor" : "#22a7f0"
                                    },
                                    "location" : {
                                      "uuid" : "4c780276f5524ebab80276f5529ebafb",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "d1a8d1ee260f42aba8d1ee260f72ab96"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    },
                                    "locations" : [ {
                                      "uuid" : "75d7675d34d7495e97675d34d7b95ec7",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "24cbd0f22b4f426c8bd0f22b4f926c8c"
                                      },
                                      "fields" : {
                                        "latitude" : 48.208330230278,
                                        "longitude" : 16.373063840833
                                      }
                                    }, {
                                      "uuid" : "04b13f6f8eef4937b13f6f8eef093731",
                                      "microschema" : {
                                        "name" : "geolocation",
                                        "uuid" : "89424c81a5f440d8824c81a5f4f0d840"
                                      },
                                      "fields" : {
                                        "latitude" : 48.137222,
                                        "longitude" : 11.575556
                                      }
                                    } ]
                                  },
                                  "path" : "/api/v1/yourProject/webroot/Images",
                                  "breadcrumb" : [ {
                                    "uuid" : "4056136b74e7498d96136b74e7898d97",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "d4ed4ce0b0a14a23ad4ce0b0a14a2398",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
    /{nodeUuid}/children: 
        uriParameters: 
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node.
                type: string
                required: true
                repeat: false
                example: "0db4e5621fc14275b4e5621fc1c2750e"
        get: 
            description: Load all child nodes and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                resolveLinks: 
                    description: 'The resolve links parameter can be set to either _short_, _medium_ or _full_. Stored mesh links will automatically be resolved and replaced by the resolved webroot link. With the parameter set the _path_ property as well as the _languagesPath_ property (for available language variants) will be included in the response. Gentics Mesh links in any HTML-typed field will automatically be resolved and replaced by the resolved link:{{< relref "features.asciidoc" >}}#_link_resolving[WebRoot path]. No resolving occurs if no link has been specified.'
                    type: string
                    required: false
                    repeat: false
                    example: medium
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
                lang: 
                    description: ISO 639-1 language tag of the language which should be loaded. Fallback handling can be applied by specifying multiple languages in a comma-separated list. The first matching language will be returned.  If omitted or the requested language is not available then the _defaultLanguage_ as configured in _mesh.yml_ will be returned.
                    type: string
                    required: false
                    repeat: false
                    example: en,de
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: List of loaded node children.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "0552f28dcf2643b492f28dcf2693b4ee",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "d631f5614c0441adb1f5614c04b1adfe"
                                    },
                                    "created" : "2018-10-31T15:39:16.616Z",
                                    "edited" : "2018-10-31T15:39:16.616Z",
                                    "availableLanguages" : {
                                      "de" : {
                                        "published" : true,
                                        "version" : "1.0",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "3ae3f97d23fc44e2a3f97d23fc04e2fd"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.617Z"
                                      },
                                      "en" : {
                                        "published" : false,
                                        "version" : "1.1",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "afe2c251d220425fa2c251d220625f5c"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.617Z"
                                      }
                                    },
                                    "languagePaths" : {
                                      "de" : "/api/v1/yourProject/webroot/Bilder",
                                      "en" : "/api/v1/yourProject/webroot/Images"
                                    },
                                    "parentNode" : {
                                      "uuid" : "1313c54f28094bbe93c54f2809abbec7",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "0d20f7e44afc48f4a0f7e44afca8f496",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "red",
                                      "uuid" : "a07e9c4b1eb14813be9c4b1eb1281349",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "92610fb7f5d04e4fa10fb7f5d0fe4f46",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "8ce13a287bb24d2aa13a287bb2fd2a06"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "8e41a888abf64b9a81a888abf6db9a54"
                                    } ],
                                    "childrenInfo" : {
                                      "folder" : {
                                        "schemaUuid" : "ffda992f68b24f909a992f68b2bf90f1",
                                        "count" : 5
                                      },
                                      "blogpost" : {
                                        "schemaUuid" : "387ec8bc033747c9bec8bc0337e7c9de",
                                        "count" : 1
                                      }
                                    },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "d5fa9988c1974f39ba9988c1977f3980",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag de-DE",
                                      "filename" : "dummy-content.de.html",
                                      "teaser" : "Dummy teaser for de-DE",
                                      "content" : "Content for language tag de-DE",
                                      "relatedProduct" : {
                                        "uuid" : "2a2cb8ee7f104c3dacb8ee7f10ec3ddc"
                                      },
                                      "price" : 100.1,
                                      "enabled" : true,
                                      "branch" : "2018-10-31T15:39:16.617Z",
                                      "categories" : [ {
                                        "uuid" : "0b384f481bd84a44b84f481bd8aa4422"
                                      }, {
                                        "uuid" : "e00ca0f497554afe8ca0f49755cafea4"
                                      }, {
                                        "uuid" : "6f746c82e64f4ba6b46c82e64feba6cb"
                                      } ],
                                      "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                      "categoryIds" : [ 1, 42, 133, 7 ],
                                      "binary" : {
                                        "fileName" : "flower.jpg",
                                        "width" : 800,
                                        "height" : 600,
                                        "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                        "fileSize" : 95365,
                                        "mimeType" : "image/jpeg",
                                        "dominantColor" : "#22a7f0"
                                      },
                                      "location" : {
                                        "uuid" : "683e442782c94226be442782c9b2268f",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "76adf0f036e446e8adf0f036e4b6e882"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      },
                                      "locations" : [ {
                                        "uuid" : "5a378b4c314a40ecb78b4c314ac0ec9f",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "111c467b637447b79c467b637437b782"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      }, {
                                        "uuid" : "b50a138aeec546c28a138aeec596c229",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "c6eb0f10cbc7417dab0f10cbc7217de0"
                                        },
                                        "fields" : {
                                          "latitude" : 48.137222,
                                          "longitude" : 11.575556
                                        }
                                      } ]
                                    },
                                    "path" : "/api/v1/yourProject/webroot/Images",
                                    "breadcrumb" : [ {
                                      "uuid" : "8419575612404f649957561240bf640a",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "4cdef0b171964a989ef0b17196ca98ef",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "4ababb989cbe4c6cbabb989cbe9c6c6b",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "702249bbeb944035a249bbeb94503527"
                                    },
                                    "created" : "2018-10-31T15:39:16.617Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "766021dc8d9b47a1a021dc8d9b87a117"
                                    },
                                    "edited" : "2018-10-31T15:39:16.617Z",
                                    "parentNode" : {
                                      "uuid" : "5c5af211669c4f4f9af211669cdf4f08",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "8795ae4e918c4ea895ae4e918ccea8e9",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "c5e7235fb6204008a7235fb620f00875",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "2b9fb75329354b1e9fb7532935db1e32",
                                      "tagFamily" : "vehicles"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "ca942894041b48d5942894041be8d5ab",
                                      "tagFamily" : "vehicles"
                                    } ],
                                    "childrenInfo" : { },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "975d1c75c50142bd9d1c75c501d2bd70",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag en",
                                      "filename" : "dummy-content.en.html",
                                      "teaser" : "Dummy teaser for en",
                                      "content" : "Content for language tag en"
                                    },
                                    "breadcrumb" : [ {
                                      "uuid" : "c52c95ab69ad4aeaac95ab69ad3aeafc",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "a49156a2da47494c9156a2da47094c7e",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{nodeUuid}/languages/{language}: 
        uriParameters: 
            language: 
                displayName: language
                description: Language tag of the content which should be deleted.
                type: string
                required: true
                repeat: false
                example: en
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node.
                type: string
                required: true
                repeat: false
                example: "7db483b8e5a34db0b483b8e5a3cdb02c"
        delete: 
            description: Delete the language specific content of the node.
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "204": 
                    description: Language variation of the node has been deleted.
    /{nodeUuid}/languages/{language}/published: 
        uriParameters: 
            language: 
                displayName: language
                description: Name of the language tag
                type: string
                required: true
                repeat: false
                example: en
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node
                type: string
                required: true
                repeat: false
                example: "14d638aa7abc46b99638aa7abc06b9db"
        get: 
            description: Return the publish status for the given language of the node.
            responses: 
                "404": 
                    description: The node or the language could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Publish status of the specific language.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | publishDate | false | string | ISO8601 formatted publish date string. |
                                | published | true | boolean | Flag which indicates whether the content is published. |
                                | publisher | false | object | Reference to the publisher user of the node content. |
                                | version | true | string | Version number. |
                            example: |
                                {
                                  "published" : true,
                                  "version" : "3.0",
                                  "publisher" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "a1d6fdc6f75d4a1996fdc6f75daa19a6"
                                  },
                                  "publishDate" : "2018-10-31T15:39:16.622Z"
                                }
        post: 
            description: Publish the language of the node. This will automatically assign a new major version to the node and update the draft version to the published version.
            responses: 
                "404": 
                    description: The node or the language could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Updated publish status.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | publishDate | false | string | ISO8601 formatted publish date string. |
                                | published | true | boolean | Flag which indicates whether the content is published. |
                                | publisher | false | object | Reference to the publisher user of the node content. |
                                | version | true | string | Version number. |
                            example: |
                                {
                                  "published" : true,
                                  "version" : "3.0",
                                  "publisher" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "2a2aaa56edd5480aaaaa56edd5380a87"
                                  },
                                  "publishDate" : "2018-10-31T15:39:16.622Z"
                                }
        delete: 
            description: Take the language of the node offline.
            responses: 
                "404": 
                    description: The node or the language could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "204": 
                    description: Node language was taken offline.
    /{nodeUuid}/moveTo/{toUuid}: 
        uriParameters: 
            toUuid: 
                displayName: toUuid
                description: Uuid of target the node.
                type: string
                required: true
                repeat: false
                example: "5b67fa0a833f4cdea7fa0a833f8cde9b"
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node which should be moved.
                type: string
                required: true
                repeat: false
                example: "81516114607c4d57916114607c6d57e5"
        post: 
            description: Move the node into the target node.
            queryParameters: 
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "404": 
                    description: The source or target node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "204": 
                    description: Node was moved.
    /{nodeUuid}/navigation: 
        uriParameters: 
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node.
                type: string
                required: true
                repeat: false
                example: "01c1a52d017e419b81a52d017e219bad"
        get: 
            description: Returns a navigation object for the provided node.
            displayName: Navigation
            queryParameters: 
                maxDepth: 
                    description: Specifies the maximum depth for the requested navigation tree structure.
                    type: number
                    required: false
                    repeat: false
                    default: "10"
                    example: "5"
                includeAll: 
                    description: If set to true all nodes will be included in the response. By default only container nodes are included in a navigation response.
                    type: boolean
                    required: false
                    repeat: false
                    example: "true"
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Loaded navigation.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | children | false | array | List of further child elements of the node. |
                                | node | false | object | Detailed node information. |
                                | uuid | false | string | Uuid of the node within this navigation element. |
                            example: |
                                {
                                  "uuid" : "276f834db81248f5af834db812c8f536"
                                }
    /{nodeUuid}/published: 
        uriParameters: 
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node
                type: string
                required: true
                repeat: false
                example: "98163c8226ee442f963c8226ee042fa0"
        get: 
            description: Return the published status of the node.
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Publish status of the node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | false | object | Map of publish status entries per language |
                            example: |
                                {
                                  "availableLanguages" : {
                                    "de" : {
                                      "published" : false,
                                      "version" : "0.4"
                                    },
                                    "en" : {
                                      "published" : true,
                                      "version" : "3.0",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "f6aa8221a9b54405aa8221a9b5140582"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.622Z"
                                    },
                                    "fr" : {
                                      "published" : false,
                                      "version" : "5.2"
                                    }
                                  }
                                }
        post: 
            description: Publish all language specific contents of the node with the given uuid.
            queryParameters: 
                recursive: 
                    description: Specifiy whether the invoked action should be applied recursively.
                    type: boolean
                    required: false
                    repeat: false
                    default: "false"
                    example: "true"
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Publish status of the node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | false | object | Map of publish status entries per language |
                            example: |
                                {
                                  "availableLanguages" : {
                                    "de" : {
                                      "published" : false,
                                      "version" : "0.4"
                                    },
                                    "en" : {
                                      "published" : true,
                                      "version" : "3.0",
                                      "publisher" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "efeb521b1bb846a3ab521b1bb866a33e"
                                      },
                                      "publishDate" : "2018-10-31T15:39:16.622Z"
                                    },
                                    "fr" : {
                                      "published" : false,
                                      "version" : "5.2"
                                    }
                                  }
                                }
        delete: 
            description: Unpublish the given node.
            queryParameters: 
                recursive: 
                    description: Specifiy whether the invoked action should be applied recursively.
                    type: boolean
                    required: false
                    repeat: false
                    default: "false"
                    example: "true"
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "204": 
                    description: Node was unpublished.
    /{nodeUuid}/tags: 
        uriParameters: 
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node.
                type: string
                required: true
                repeat: false
                example: c89d95e3b8e942429d95e3b8e9424225
        get: 
            description: Return a list of all tags which tag the node.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: List of tags that were used to tag the node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "cb846dc12a5943ba846dc12a59d3ba22",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "1bc7f2afd75d4ca487f2afd75ddca432"
                                    },
                                    "created" : "2018-10-31T15:39:16.619Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "0b0b8c5cc1b144c98b8c5cc1b104c9f7"
                                    },
                                    "edited" : "2018-10-31T15:39:16.619Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "e9168685de9a4524968685de9a952480"
                                    },
                                    "name" : "green",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "23525f72bb0e4fa5925f72bb0e9fa561",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "4be3726185c44a7ea3726185c4fa7eb4"
                                    },
                                    "created" : "2018-10-31T15:39:16.619Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "48d7eef3e326489097eef3e326f89033"
                                    },
                                    "edited" : "2018-10-31T15:39:16.619Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "f6c3e66a7221498a83e66a7221e98abe"
                                    },
                                    "name" : "Name for language tag en",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
        post: 
            description: Update the list of assigned tags
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | tags | true | array | List of tags which should be assigned to the node. Tags which are not included will be removed from the node. |
                    example: |
                        {
                          "tags" : [ {
                            "name" : "green",
                            "uuid" : "eef1879a394840ccb1879a3948c0ccd7",
                            "tagFamily" : "colors"
                          }, {
                            "name" : "yellow",
                            "uuid" : "ed72e4ba9ef043b0b2e4ba9ef0d3b0fb",
                            "tagFamily" : "colors"
                          } ]
                        }
            responses: 
                "404": 
                    description: The node could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Updated tag list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "a11c809d37894c259c809d3789cc252d",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "03108b1f94334792908b1f9433c792a1"
                                    },
                                    "created" : "2018-10-31T15:39:16.619Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "45406b79db2f4166806b79db2ff1665b"
                                    },
                                    "edited" : "2018-10-31T15:39:16.619Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "b8e3da67821643c5a3da67821683c576"
                                    },
                                    "name" : "green",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "ea00c3a72810468480c3a728103684ac",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "71f5e6f2be114bbab5e6f2be112bba3a"
                                    },
                                    "created" : "2018-10-31T15:39:16.619Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "9b6041855a8e437da041855a8ea37d7a"
                                    },
                                    "edited" : "2018-10-31T15:39:16.619Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "32d1a37f25d94a3391a37f25d9ea3385"
                                    },
                                    "name" : "Name for language tag en",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{nodeUuid}/tags/{tagUuid}: 
        uriParameters: 
            tagUuid: 
                displayName: tagUuid
                description: Uuid of the tag
                type: string
                required: true
                repeat: false
                example: "3ba799a24d4540c8a799a24d45b0c8a6"
            nodeUuid: 
                displayName: nodeUuid
                description: Uuid of the node
                type: string
                required: true
                repeat: false
                example: "083e78f7de634fc7be78f7de63afc730"
        post: 
            description: Assign the given tag to the node.
            queryParameters: 
                branch: 
                    description: Specifies the branch to be used for loading data. The latest project branch will be used if this parameter is omitted.
                    type: string
                    required: false
                    repeat: false
                    example: "24cf92691c7641158f92691c76c115ef"
                version: 
                    description: "Specifies the version to be loaded. Can either be published/draft or version number. e.g.: _0.1_, _1.0_, _draft_, _published_."
                    type: string
                    required: false
                    repeat: false
                    default: draft
                    example: "1.1"
            responses: 
                "404": 
                    description: The node or tag could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "200": 
                    description: Updated node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "c120bec84f504dd6a0bec84f508dd6be",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "f3f202589c324506b202589c32d50697"
                                  },
                                  "created" : "2018-10-31T15:39:16.619Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "92a527e76051415ca527e76051b15c22"
                                  },
                                  "edited" : "2018-10-31T15:39:16.619Z",
                                  "parentNode" : {
                                    "uuid" : "d703ff2e868441fe83ff2e8684e1fe0a",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "925c6901c0a44e2c9c6901c0a4ee2c9f",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "f155e6861a1b4fc295e6861a1b3fc217",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "d54a1657421a400e8a1657421a400e0d",
                                    "tagFamily" : "vehicles"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "10ebfe4e86824c36abfe4e8682ac36eb",
                                    "tagFamily" : "vehicles"
                                  } ],
                                  "childrenInfo" : { },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "60527d10c34b41af927d10c34b41afac",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag en",
                                    "filename" : "dummy-content.en.html",
                                    "teaser" : "Dummy teaser for en",
                                    "content" : "Content for language tag en"
                                  },
                                  "breadcrumb" : [ {
                                    "uuid" : "54e45b4d2bf34236a45b4d2bf3223671",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "97b7267ea9674d64b7267ea9675d646b",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : false,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Remove the given tag from the node.
            responses: 
                "404": 
                    description: The node or tag could not be found.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
                "204": 
                    description: Removal was successful.
/{project}/tagFamilies: 
    displayName: /{project}/tagFamilies
    description: Provides endpoints which allow the manipulation of tag families and tags.
    /: 
        get: 
            description: Load multiple tag families and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: Loaded tag families.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "7388304316974013883043169700134e"
                                    },
                                    "created" : "2018-10-31T15:39:16.678Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "4fabd80624464d74abd8062446ad742f"
                                    },
                                    "edited" : "2018-10-31T15:39:16.678Z",
                                    "name" : "Colors",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
        post: 
            description: Create a new tag family.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | Name of the tag family which will be created. |
                    example: |
                        {
                          "name" : "Colors"
                        }
            responses: 
                "201": 
                    description: Created tag family.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | false | string | Name of the tag family. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "fdb5d2e17eba4e88b5d2e17eba3e8871"
                                  },
                                  "created" : "2018-10-31T15:39:16.678Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "cd5e75049b714e709e75049b71be7077"
                                  },
                                  "edited" : "2018-10-31T15:39:16.678Z",
                                  "name" : "Colors",
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
    /{tagFamilyUuid}: 
        uriParameters: 
            tagFamilyUuid: 
                displayName: tagFamilyUuid
                description: Uuid of the tag family.
                type: string
                required: true
                repeat: false
                example: "9aa157f692c540c0a157f692c500c0ca"
        get: 
            description: Read the tag family with the given uuid.
            responses: 
                "200": 
                    description: Loaded tag family.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | false | string | Name of the tag family. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "e4cbeeb5782448908beeb57824c890ae"
                                  },
                                  "created" : "2018-10-31T15:39:16.678Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "d29b6964d0ff4e859b6964d0ff2e853c"
                                  },
                                  "edited" : "2018-10-31T15:39:16.677Z",
                                  "name" : "Colors",
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the tag family with the given uuid.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | New name of the tag family |
                    example: |
                        {
                          "name" : "Nicer colors"
                        }
            responses: 
                "200": 
                    description: Updated tag family.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | false | string | Name of the tag family. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "f5a5f7f11dc14edca5f7f11dc17edcf9"
                                  },
                                  "created" : "2018-10-31T15:39:16.678Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "cd3c2414221a44a6bc2414221aa4a6b0"
                                  },
                                  "edited" : "2018-10-31T15:39:16.678Z",
                                  "name" : "Nicer colors",
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Delete the tag family.
            responses: 
                "204": 
                    description: Tag family was deleted.
    /{tagFamilyUuid}/tags: 
        uriParameters: 
            tagFamilyUuid: 
                displayName: tagFamilyUuid
                description: Uuid of the tag family.
                type: string
                required: true
                repeat: false
                example: "757faa45d21f4939bfaa45d21f293934"
        post: 
            description: Create a new tag within the tag family.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | Name of the tag which will be created. |
                    example: |
                        {
                          "name" : "red"
                        }
            responses: 
                "200": 
                    description: Created tag
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the tag. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | tagFamily | true | object | Reference to the tag family to which the tag belongs. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "c3966de3976d410d966de3976db10dfe",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "fc974c1a3e1e4c0d974c1a3e1edc0daf"
                                  },
                                  "created" : "2018-10-31T15:39:16.679Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "7866a78f4ff54559a6a78f4ff5755985"
                                  },
                                  "edited" : "2018-10-31T15:39:16.679Z",
                                  "tagFamily" : {
                                    "name" : "colors",
                                    "uuid" : "dd167d4b6fe84f48967d4b6fe8df484f"
                                  },
                                  "name" : "red",
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Load tags which were assigned to this tag family and return a paged list response.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: List of tags.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "816a7f96ec0b468baa7f96ec0b168bf9",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "7d5c576625ed496c9c576625ed996c1e"
                                    },
                                    "created" : "2018-10-31T15:39:16.679Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "e0e6a837203c40bba6a837203c70bb96"
                                    },
                                    "edited" : "2018-10-31T15:39:16.679Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "34c1839289854d598183928985fd5964"
                                    },
                                    "name" : "green",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "faac84c40a794f70ac84c40a79ef7081",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "14790581bbec4551b90581bbec7551d8"
                                    },
                                    "created" : "2018-10-31T15:39:16.679Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "0af486cfa3194a71b486cfa3196a7144"
                                    },
                                    "edited" : "2018-10-31T15:39:16.679Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "5626cf1b4def4987a6cf1b4defc9872e"
                                    },
                                    "name" : "Name for language tag en",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{tagFamilyUuid}/tags/{tagUuid}: 
        uriParameters: 
            tagFamilyUuid: 
                displayName: tagFamilyUuid
                description: Uuid of the tag family.
                type: string
                required: true
                repeat: false
                example: "209430a835324ced9430a835327ced1b"
            tagUuid: 
                displayName: tagUuid
                description: Uuid of the tag.
                type: string
                required: true
                repeat: false
                example: "9287b845f6db402587b845f6dbb02548"
        get: 
            description: Read the specified tag from the tag family.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
            responses: 
                "200": 
                    description: Loaded tag.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the tag. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | tagFamily | true | object | Reference to the tag family to which the tag belongs. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "c9d6cd172489414496cd1724891144c8",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "231721acb3d548fa9721acb3d5b8fa14"
                                  },
                                  "created" : "2018-10-31T15:39:16.679Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "d40f117be28e43328f117be28ef332e6"
                                  },
                                  "edited" : "2018-10-31T15:39:16.679Z",
                                  "tagFamily" : {
                                    "name" : "colors",
                                    "uuid" : "5a1ac7aa4f0340819ac7aa4f038081d7"
                                  },
                                  "name" : "red",
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the specified tag
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | name | true | string | New name of the tag. |
                    example: |
                        {
                          "name" : "Red"
                        }
            responses: 
                "200": 
                    description: Updated tag.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | name | true | string | Name of the tag. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | tagFamily | true | object | Reference to the tag family to which the tag belongs. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "0ec1e4469e874edb81e4469e876edb4e",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "7fedf046415e4446adf046415ea446d0"
                                  },
                                  "created" : "2018-10-31T15:39:16.680Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "d1f37e2857ba4489b37e2857ba0489fb"
                                  },
                                  "edited" : "2018-10-31T15:39:16.680Z",
                                  "tagFamily" : {
                                    "name" : "colors",
                                    "uuid" : "5ba631610c244e0ba631610c243e0b25"
                                  },
                                  "name" : "Red",
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Remove the tag from the tag family.
            responses: 
                "204": 
                    description: Tag was removed from the tag family
    /{tagFamilyUuid}/tags/{tagUuid}/nodes: 
        uriParameters: 
            tagFamilyUuid: 
                displayName: tagFamilyUuid
                description: Uuid of the tag family.
                type: string
                required: true
                repeat: false
                example: "9deaf8d4e638473daaf8d4e638e73dc2"
            tagUuid: 
                displayName: tagUuid
                description: Uuid of the tag.
                type: string
                required: true
                repeat: false
                example: a58ed3bdfa754d9e8ed3bdfa75ed9e83
        get: 
            description: Load all nodes that have been tagged with the tag and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: List of nodes which were tagged using the provided tag.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "e0ee93a2cae54343ae93a2cae5834374",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "00fd136be2a74520bd136be2a7952030"
                                    },
                                    "created" : "2018-10-31T15:39:16.680Z",
                                    "edited" : "2018-10-31T15:39:16.680Z",
                                    "availableLanguages" : {
                                      "de" : {
                                        "published" : true,
                                        "version" : "1.0",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "313cf9ef045144cebcf9ef045194ced4"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.680Z"
                                      },
                                      "en" : {
                                        "published" : false,
                                        "version" : "1.1",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "102444c3bb8c4c59a444c3bb8c9c5955"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.680Z"
                                      }
                                    },
                                    "languagePaths" : {
                                      "de" : "/api/v1/yourProject/webroot/Bilder",
                                      "en" : "/api/v1/yourProject/webroot/Images"
                                    },
                                    "parentNode" : {
                                      "uuid" : "887453bbdcc248dab453bbdcc2e8da0f",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "ce870b6164584306870b6164580306dc",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "red",
                                      "uuid" : "2b91eee89fb2468291eee89fb2a68272",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "63111c75411d49ca911c75411d09ca08",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "0bb3114ea6654b2db3114ea665db2dd7"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "5417064845254ec89706484525fec8eb"
                                    } ],
                                    "childrenInfo" : {
                                      "folder" : {
                                        "schemaUuid" : "95058b03ba1f42de858b03ba1fd2de74",
                                        "count" : 5
                                      },
                                      "blogpost" : {
                                        "schemaUuid" : "42bddf44564b4f1bbddf44564b0f1b54",
                                        "count" : 1
                                      }
                                    },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "a84276c1fc68455f8276c1fc68c55fc7",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag de-DE",
                                      "filename" : "dummy-content.de.html",
                                      "teaser" : "Dummy teaser for de-DE",
                                      "content" : "Content for language tag de-DE",
                                      "relatedProduct" : {
                                        "uuid" : "e5f0b17156a543c4b0b17156a5b3c498"
                                      },
                                      "price" : 100.1,
                                      "enabled" : true,
                                      "branch" : "2018-10-31T15:39:16.680Z",
                                      "categories" : [ {
                                        "uuid" : "0c902a569aeb49ed902a569aebf9edd2"
                                      }, {
                                        "uuid" : "80392063c2734981b92063c273a9811a"
                                      }, {
                                        "uuid" : "9452a7ef4068465092a7ef4068a650db"
                                      } ],
                                      "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                      "categoryIds" : [ 1, 42, 133, 7 ],
                                      "binary" : {
                                        "fileName" : "flower.jpg",
                                        "width" : 800,
                                        "height" : 600,
                                        "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                        "fileSize" : 95365,
                                        "mimeType" : "image/jpeg",
                                        "dominantColor" : "#22a7f0"
                                      },
                                      "location" : {
                                        "uuid" : "222db21571d141cdadb21571d131cda6",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "172a227f5490464caa227f5490d64c71"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      },
                                      "locations" : [ {
                                        "uuid" : "838c48f1bdb34a338c48f1bdb38a339f",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "8152a8f58126482092a8f58126c820d0"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      }, {
                                        "uuid" : "eacb1cd9e3654e228b1cd9e365fe2281",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "db459c63721b40c6859c63721bc0c6f6"
                                        },
                                        "fields" : {
                                          "latitude" : 48.137222,
                                          "longitude" : 11.575556
                                        }
                                      } ]
                                    },
                                    "path" : "/api/v1/yourProject/webroot/Images",
                                    "breadcrumb" : [ {
                                      "uuid" : "a9cf1ffebed348968f1ffebed388962d",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "8410c942392e475890c942392e9758e3",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "8198de62a82c4b3798de62a82cab378c",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "4c1edd79f22140009edd79f221f00071"
                                    },
                                    "created" : "2018-10-31T15:39:16.680Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "25547cb7c0554f75947cb7c0553f757e"
                                    },
                                    "edited" : "2018-10-31T15:39:16.680Z",
                                    "parentNode" : {
                                      "uuid" : "cbd479716b334fd39479716b332fd3d1",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "f9b727d9fcb245c3b727d9fcb2d5c33e",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "ad0a9bb8ad6542cd8a9bb8ad65e2cd34",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "c2aaee69233b4d10aaee69233bfd10b9",
                                      "tagFamily" : "vehicles"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "b32aad7d9a6e49cdaaad7d9a6e49cdbb",
                                      "tagFamily" : "vehicles"
                                    } ],
                                    "childrenInfo" : { },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "de90f1834dc7434890f1834dc7434841",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag en",
                                      "filename" : "dummy-content.en.html",
                                      "teaser" : "Dummy teaser for en",
                                      "content" : "Content for language tag en"
                                    },
                                    "breadcrumb" : [ {
                                      "uuid" : "e4727e382fed45ceb27e382fed65cee2",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "663f4daa3df44087bf4daa3df42087e0",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
/{project}/navroot: 
    displayName: /{project}/navroot
    description: Provides an endpoint which can be used to retrieve a navigation response
    /{path}: 
        uriParameters: 
            path: 
                displayName: path
                description: Webroot path to the node language variation.
                type: string
                required: true
                repeat: false
                example: someFolder/somePage.html
        get: 
            description: Return a navigation for the node which is located using the given path.
            queryParameters: 
                maxDepth: 
                    description: Specifies the maximum depth for the requested navigation tree structure.
                    type: number
                    required: false
                    repeat: false
                    default: "10"
                    example: "5"
                includeAll: 
                    description: If set to true all nodes will be included in the response. By default only container nodes are included in a navigation response.
                    type: boolean
                    required: false
                    repeat: false
                    example: "true"
            responses: 
                "200": 
                    description: Loaded navigation.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | children | false | array | List of further child elements of the node. |
                                | node | false | object | Detailed node information. |
                                | uuid | false | string | Uuid of the node within this navigation element. |
                            example: |
                                {
                                  "uuid" : "07d02d2284a74748902d2284a7174852",
                                  "node" : {
                                    "uuid" : "07d02d2284a74748902d2284a7174852",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "2608b59679d5484c88b59679d5184ca9"
                                    },
                                    "created" : "2018-10-31T15:39:16.699Z",
                                    "edited" : "2018-10-31T15:39:16.699Z",
                                    "availableLanguages" : {
                                      "de" : {
                                        "published" : true,
                                        "version" : "1.0",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "937eed24db7f4d42beed24db7f5d4227"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.699Z"
                                      },
                                      "en" : {
                                        "published" : false,
                                        "version" : "1.1",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "3c9163c58f9e4dc49163c58f9efdc485"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.699Z"
                                      }
                                    },
                                    "languagePaths" : {
                                      "de" : "/api/v1/yourProject/webroot/Bilder",
                                      "en" : "/api/v1/yourProject/webroot/Images"
                                    },
                                    "parentNode" : {
                                      "uuid" : "8f9bb3b4f82146b09bb3b4f82146b064",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "61006571f17f4ecc806571f17f4eccd5",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "red",
                                      "uuid" : "7abdc32b7c3f4c1fbdc32b7c3f1c1ff2",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "c480ac72c46d47e280ac72c46d47e241",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "d403aeb2b83d462783aeb2b83df62726"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "cb8de69204824d318de6920482ad3153"
                                    } ],
                                    "childrenInfo" : {
                                      "folder" : {
                                        "schemaUuid" : "f640eb0f80bc49c380eb0f80bcd9c3b6",
                                        "count" : 5
                                      },
                                      "blogpost" : {
                                        "schemaUuid" : "b947036bf062490387036bf062b903cf",
                                        "count" : 1
                                      }
                                    },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "6aead6e87fde4a40aad6e87fde2a408e",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag de-DE",
                                      "filename" : "dummy-content.de.html",
                                      "teaser" : "Dummy teaser for de-DE",
                                      "content" : "Content for language tag de-DE",
                                      "relatedProduct" : {
                                        "uuid" : "4fc3783b6462437c83783b6462837ccd"
                                      },
                                      "price" : 100.1,
                                      "enabled" : true,
                                      "branch" : "2018-10-31T15:39:16.699Z",
                                      "categories" : [ {
                                        "uuid" : "5b09d78144cd49e589d78144cde9e5e7"
                                      }, {
                                        "uuid" : "33f2fd95ad0a4162b2fd95ad0ad16229"
                                      }, {
                                        "uuid" : "afbbf78217ee42d1bbf78217ee02d195"
                                      } ],
                                      "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                      "categoryIds" : [ 1, 42, 133, 7 ],
                                      "binary" : {
                                        "fileName" : "flower.jpg",
                                        "width" : 800,
                                        "height" : 600,
                                        "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                        "fileSize" : 95365,
                                        "mimeType" : "image/jpeg",
                                        "dominantColor" : "#22a7f0"
                                      },
                                      "location" : {
                                        "uuid" : "110c94152a3c4b2a8c94152a3c8b2a2f",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "fc454622136348cf8546221363f8cf49"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      },
                                      "locations" : [ {
                                        "uuid" : "670cd48d5cf64ce18cd48d5cf6bce10c",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "03db12e4bc8d47119b12e4bc8d871126"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      }, {
                                        "uuid" : "8bac12e7c25c4c3aac12e7c25c2c3a2e",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "a620c2c006d74580a0c2c006d7458042"
                                        },
                                        "fields" : {
                                          "latitude" : 48.137222,
                                          "longitude" : 11.575556
                                        }
                                      } ]
                                    },
                                    "path" : "/api/v1/yourProject/webroot/Images",
                                    "breadcrumb" : [ {
                                      "uuid" : "03f0053e610f4bd6b0053e610f0bd6a2",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "2f27ffb69a8a496ca7ffb69a8ab96c51",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  },
                                  "children" : [ {
                                    "uuid" : "3dd3af7acebf40f793af7acebf60f723",
                                    "node" : {
                                      "uuid" : "3dd3af7acebf40f793af7acebf60f723",
                                      "creator" : {
                                        "firstName" : "Joe",
                                        "lastName" : "Doe",
                                        "uuid" : "3e4256ce87c245d98256ce87c2f5d985"
                                      },
                                      "created" : "2018-10-31T15:39:16.699Z",
                                      "edited" : "2018-10-31T15:39:16.699Z",
                                      "availableLanguages" : {
                                        "de" : {
                                          "published" : true,
                                          "version" : "1.0",
                                          "publisher" : {
                                            "firstName" : "Joe",
                                            "lastName" : "Doe",
                                            "uuid" : "fa4848a963c748c08848a963c788c09f"
                                          },
                                          "publishDate" : "2018-10-31T15:39:16.699Z"
                                        },
                                        "en" : {
                                          "published" : false,
                                          "version" : "1.1",
                                          "publisher" : {
                                            "firstName" : "Joe",
                                            "lastName" : "Doe",
                                            "uuid" : "08e611a106294717a611a10629b71736"
                                          },
                                          "publishDate" : "2018-10-31T15:39:16.699Z"
                                        }
                                      },
                                      "languagePaths" : {
                                        "de" : "/api/v1/yourProject/webroot/Bilder",
                                        "en" : "/api/v1/yourProject/webroot/Images"
                                      },
                                      "parentNode" : {
                                        "uuid" : "d3fe8323cac94ee6be8323cac92ee635",
                                        "displayName" : "parentNodeDisplayName"
                                      },
                                      "tags" : [ {
                                        "name" : "red",
                                        "uuid" : "2edeade5a84249f29eade5a84229f207",
                                        "tagFamily" : "colors"
                                      }, {
                                        "name" : "red",
                                        "uuid" : "cf176614cf8c48fb976614cf8c68fbca",
                                        "tagFamily" : "colors"
                                      }, {
                                        "name" : "green",
                                        "uuid" : "020eda97d40f4c3d8eda97d40f5c3d00",
                                        "tagFamily" : "colors"
                                      }, {
                                        "name" : "car",
                                        "uuid" : "6fe97d41ac3a4f17a97d41ac3a2f17ea"
                                      }, {
                                        "name" : "ship",
                                        "uuid" : "047dc81747d041aebdc81747d081ae8e"
                                      } ],
                                      "childrenInfo" : {
                                        "folder" : {
                                          "schemaUuid" : "b508bfaf16de40ee88bfaf16de90ee03",
                                          "count" : 5
                                        },
                                        "blogpost" : {
                                          "schemaUuid" : "7fbd772a4f7f4eafbd772a4f7f2eaf05",
                                          "count" : 1
                                        }
                                      },
                                      "schema" : {
                                        "name" : "content",
                                        "uuid" : "aa4b2b92759740558b2b9275972055c5",
                                        "version" : "1.0"
                                      },
                                      "container" : false,
                                      "fields" : {
                                        "name" : "Name for language tag de-DE",
                                        "filename" : "dummy-content.de.html",
                                        "teaser" : "Dummy teaser for de-DE",
                                        "content" : "Content for language tag de-DE",
                                        "relatedProduct" : {
                                          "uuid" : "c1c107a2f8bb498f8107a2f8bb398fc5"
                                        },
                                        "price" : 100.1,
                                        "enabled" : true,
                                        "branch" : "2018-10-31T15:39:16.699Z",
                                        "categories" : [ {
                                          "uuid" : "18a3df3ffb1d4d6aa3df3ffb1d4d6a26"
                                        }, {
                                          "uuid" : "f5e0e8b1b3f14447a0e8b1b3f10447e6"
                                        }, {
                                          "uuid" : "07eed2d28b2d4800aed2d28b2d08006f"
                                        } ],
                                        "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                        "categoryIds" : [ 1, 42, 133, 7 ],
                                        "binary" : {
                                          "fileName" : "flower.jpg",
                                          "width" : 800,
                                          "height" : 600,
                                          "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                          "fileSize" : 95365,
                                          "mimeType" : "image/jpeg",
                                          "dominantColor" : "#22a7f0"
                                        },
                                        "location" : {
                                          "uuid" : "41c18a62698c45c4818a62698c95c455",
                                          "microschema" : {
                                            "name" : "geolocation",
                                            "uuid" : "db6111a690f348c2a111a690f3a8c24f"
                                          },
                                          "fields" : {
                                            "latitude" : 48.208330230278,
                                            "longitude" : 16.373063840833
                                          }
                                        },
                                        "locations" : [ {
                                          "uuid" : "86cdc68e6b9f4dd18dc68e6b9fcdd135",
                                          "microschema" : {
                                            "name" : "geolocation",
                                            "uuid" : "510689595bf24b7f8689595bf25b7f14"
                                          },
                                          "fields" : {
                                            "latitude" : 48.208330230278,
                                            "longitude" : 16.373063840833
                                          }
                                        }, {
                                          "uuid" : "c7fbacdff28343b3bbacdff283c3b3e7",
                                          "microschema" : {
                                            "name" : "geolocation",
                                            "uuid" : "8314e1b3093a496d94e1b3093a996de4"
                                          },
                                          "fields" : {
                                            "latitude" : 48.137222,
                                            "longitude" : 11.575556
                                          }
                                        } ]
                                      },
                                      "path" : "/api/v1/yourProject/webroot/Images",
                                      "breadcrumb" : [ {
                                        "uuid" : "8c995672280443319956722804833122",
                                        "displayName" : "news",
                                        "path" : "/news"
                                      }, {
                                        "uuid" : "09bc3de134ad4a2cbc3de134ad9a2cb6",
                                        "displayName" : "2015",
                                        "path" : "/news/2015"
                                      } ],
                                      "permissions" : {
                                        "create" : true,
                                        "read" : true,
                                        "update" : true,
                                        "delete" : true,
                                        "publish" : false,
                                        "readPublished" : false
                                      }
                                    }
                                  } ]
                                }
/{project}/webroot: 
    displayName: /{project}/webroot
    description: Provides endpoints which allow loading nodes via a webroot path.
    /{path}: 
        uriParameters: 
            path: 
                displayName: path
                description: Path to the node
                type: string
                required: true
                repeat: false
                example: /News/2015/Images/flower.jpg
        get: 
            description: Load the node or the node's binary data which is located using the provided path.
            queryParameters: 
                fpz: 
                    description: Set the focal point zoom factor. The value must be greater than one.
                    type: number
                    required: false
                    repeat: false
                    example: "1.5"
                rect: 
                    description: Set image crop area.
                    type: string
                    required: false
                    repeat: false
                    example: "20,20,128,128"
                w: 
                    description: Set image target width. The height will automatically be calculated if the width was omitted.
                    type: number
                    required: false
                    repeat: false
                    example: "1280"
                h: 
                    description: Set image target height. The width will automatically be calculated if the height was omitted.
                    type: number
                    required: false
                    repeat: false
                    example: "720"
                fpy: 
                    description: Set the focal point y factor between 0  and 1 where 0.5 is the middle of the image. You can use this parameter in combination with the crop=fp parameter in order to crop and resize the image in relation to the given point.
                    type: number
                    required: false
                    repeat: false
                    example: "0.2"
                crop: 
                    description: |
                        Set the crop mode. Possible modes: 
                        rect : The rect mode will work in combination with the rect parameter and crop the specified area.
                        fp : The fp mode will utilize the specified or pre-selected focal point and crop the image according to the position of the focus point and the specified image size.
                    type: string
                    required: false
                    repeat: false
                    example: rect
                fpx: 
                    description: Set the focal point x factor between 0  and 1 where 0.5 is the middle of the image.  You can use this parameter in combination with the crop=fp parameter in order to crop and resize the image in relation to the given point.
                    type: number
                    required: false
                    repeat: false
                    example: "0.1"
            responses: 
                "200": 
                    description: JSON for a node or the binary data of the node for the given path.
                    headers: 
                        Webroot-Response-Type: 
                            description: Header value which identifies the type of the webroot response. The response can either be a node or binary response.
                            type: string
                            required: false
                            repeat: false
                            example: node
        post: 
            description: Update or create a node for the given path.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | fields | true | object | Dynamic map with fields of the node content. |
                        | language | true | string | ISO 639-1 language tag of the node content. |
                        | version | true | string | Version number which must be provided in order to handle and detect concurrent changes to the node content. |
                    example: |
                        {
                          "language" : "en",
                          "fields" : {
                            "filename" : "index-renamed.en.html",
                            "relatedProduct-" : {
                              "uuid" : "c8df05ffeb8d4e429f05ffeb8d6e4288"
                            },
                            "price" : 100.1,
                            "enabled" : true,
                            "branch" : "2018-10-31T15:39:16.702Z",
                            "categories" : [ {
                              "uuid" : "ebc7441a61b0481e87441a61b0b81ea2"
                            }, {
                              "uuid" : "2b59793dd43544dc99793dd43554dc2e"
                            }, {
                              "uuid" : "d998be75a2f64d3398be75a2f66d33cb"
                            } ],
                            "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                            "categoryIds" : [ 1, 42, 133, 7 ],
                            "location" : {
                              "uuid" : "21daa96f491e47169aa96f491e67161b",
                              "microschema" : {
                                "name" : "geolocation",
                                "uuid" : "4eca5c13732145708a5c137321a570a8"
                              },
                              "fields" : {
                                "latitude" : 48.208330230278,
                                "longitude" : 16.373063840833
                              }
                            },
                            "locations" : [ {
                              "uuid" : "3619e624836c486999e624836cc8699c",
                              "microschema" : {
                                "name" : "geolocation",
                                "uuid" : "973b4cb9ce0f4fe7bb4cb9ce0f9fe7e1"
                              },
                              "fields" : {
                                "latitude" : 48.208330230278,
                                "longitude" : 16.373063840833
                              }
                            }, {
                              "uuid" : "7b5b2c6e047947239b2c6e0479172378",
                              "microschema" : {
                                "name" : "geolocation",
                                "uuid" : "82c7bd5772d2422687bd5772d2222628"
                              },
                              "fields" : {
                                "latitude" : 48.137222,
                                "longitude" : 11.575556
                              }
                            } ]
                          }
                        }
            responses: 
                "200": 
                    description: Updated node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "4ae5b0d7a4c8442fa5b0d7a4c8e42f30",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "c1e539b82c964eeea539b82c96ceee73"
                                  },
                                  "created" : "2018-10-31T15:39:16.702Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "6eb07ab693aa4c64b07ab693aabc64bf"
                                  },
                                  "edited" : "2018-10-31T15:39:16.702Z",
                                  "parentNode" : {
                                    "uuid" : "05380db6aae14761b80db6aae1a761a9",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "0643de13fbb1417483de13fbb16174bb",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "f4e42fc0bfd541c6a42fc0bfd561c68d",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "2e6a97d3ac7e4cbcaa97d3ac7e6cbc22",
                                    "tagFamily" : "vehicles"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "5da6b17411fb4ec9a6b17411fb1ec96c",
                                    "tagFamily" : "vehicles"
                                  } ],
                                  "childrenInfo" : { },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "138ee0f304024c3c8ee0f304029c3c31",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag en",
                                    "filename" : "dummy-content.en.html",
                                    "teaser" : "Dummy teaser for en",
                                    "content" : "Content for language tag en"
                                  },
                                  "breadcrumb" : [ {
                                    "uuid" : "326692a97f9a4551a692a97f9a755117",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "a62a2b1b1d854fb8aa2b1b1d856fb854",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : false,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
                "201": 
                    description: Created node.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | availableLanguages | true | object | Map of languages for which content is available and their publish status. |
                                | breadcrumb | true | array | List of nodes which construct the breadcrumb. Note that the start node will not be included in the list. |
                                | childrenInfo | false | object | Object which contains information about child elements. |
                                | container | true | boolean | Flag which indicates whether the node is a container and can contain nested elements. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | displayField | false | string | Display field name of the node. May not be retured if the node schema has no display field. |
                                | displayName | false | string | Display field value of the node. May not be retured if the node schema has no display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | fields | true | object | Dynamic map with fields of the node language specific content. |
                                | language | false | string | ISO 639-1 language tag of the node content. |
                                | languagePaths | false | object | Map of webroot paths per language. This property will only be populated if the resolveLinks query parameter has been set accordingly. |
                                | parentNode | false | object | Reference to the parent node. Note that the root node of the project has no parent node. |
                                | path | false | string | Webroot path to the node content. Will only be provided if the resolveLinks query parameter has been set accordingly. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | project | true | object | Reference to the project of the node. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | schema | true | object | Reference to the schema of the node. |
                                | tags | true | array | List of tags that were used to tag the node. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the node content. |
                            example: |
                                {
                                  "uuid" : "1b3e88b58558413fbe88b58558813f33",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "5eeb638675b34270ab638675b3f270dc"
                                  },
                                  "created" : "2018-10-31T15:39:16.702Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "ab9024775055458e9024775055658e36"
                                  },
                                  "edited" : "2018-10-31T15:39:16.702Z",
                                  "parentNode" : {
                                    "uuid" : "0047e67709f74d3487e67709f75d3444",
                                    "displayName" : "parentNodeDisplayName"
                                  },
                                  "tags" : [ {
                                    "name" : "red",
                                    "uuid" : "70456538a4284adc856538a428eadc1f",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "green",
                                    "uuid" : "717bff5769d74ab5bbff5769d71ab54d",
                                    "tagFamily" : "colors"
                                  }, {
                                    "name" : "car",
                                    "uuid" : "f434d7dc3a204c66b4d7dc3a203c66fc",
                                    "tagFamily" : "vehicles"
                                  }, {
                                    "name" : "ship",
                                    "uuid" : "044e49a534b84e678e49a534b8be6778",
                                    "tagFamily" : "vehicles"
                                  } ],
                                  "childrenInfo" : { },
                                  "schema" : {
                                    "name" : "content",
                                    "uuid" : "5bec7b7ec58a4de2ac7b7ec58acde214",
                                    "version" : "1.0"
                                  },
                                  "container" : false,
                                  "fields" : {
                                    "name" : "Name for language tag en",
                                    "filename" : "dummy-content.en.html",
                                    "teaser" : "Dummy teaser for en",
                                    "content" : "Content for language tag en"
                                  },
                                  "breadcrumb" : [ {
                                    "uuid" : "0bfd2300363f468dbd2300363f968d01",
                                    "displayName" : "news",
                                    "path" : "/news"
                                  }, {
                                    "uuid" : "24510e9af7db4a61910e9af7db1a61ca",
                                    "displayName" : "2015",
                                    "path" : "/news/2015"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : false,
                                    "delete" : false,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
                "409": 
                    description: A conflict has been detected.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
/{project}/branches: 
    displayName: /{project}/branches
    description: Provides endpoints which allow the manipulation of branches.
    /: 
        post: 
            description: Create a new branch and automatically invoke a node migration.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | baseBranch | false | object | Optional reference to the base branch. If not set, the new branch will be based on the current &#x27;latest&#x27; branch. |
                        | hostname | false | string | The hostname of the branch which will be used to generate links across multiple projects. |
                        | latest | false | boolean | Whether the new branch will be set as &#x27;latest&#x27; branch. Defaults to &#x27;true&#x27;. |
                        | name | true | string | Name of the branch. |
                        | pathPrefix | false | string | Optional path prefix for webroot path and rendered links. |
                        | ssl | false | boolean | SSL flag of the branch which will be used to generate links across multiple projects. |
                    example: |
                        {
                          "name" : "Winter 2016",
                          "hostname" : "getmesh.io",
                          "ssl" : true,
                          "latest" : true
                        }
            responses: 
                "201": 
                    description: Created branch.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | hostname | false | string | The hostname of the branch which will be used to generate links across multiple projects. |
                                | latest | true | boolean | Flag which indicates whether this is the latest branch. Requests that do not specify a specific branch will be performed in the scope of the latest branch. |
                                | migrated | true | boolean | Flag which indicates whether any active node migration for this branch is still running or whether all nodes have been migrated to this branch. |
                                | name | true | string | Name of the branch. |
                                | pathPrefix | true | string | Optional path prefix for webroot path and rendered links. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | ssl | false | boolean | SSL flag of the branch which will be used to generate links across multiple projects. |
                                | tags | true | array | List of tags that were used to tag the branch. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "c04efc6f07e740ec8efc6f07e7c0ec1e",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "d7c1191a29d7491a81191a29d7191a23"
                                  },
                                  "created" : "2018-10-31T15:39:16.707Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "0904bcaff9184e0a84bcaff918de0a52"
                                  },
                                  "edited" : "2018-10-31T15:39:16.707Z",
                                  "name" : "Winter 2016",
                                  "hostname" : "getmesh.io",
                                  "ssl" : true,
                                  "pathPrefix" : "my/prefix",
                                  "migrated" : true,
                                  "latest" : false,
                                  "tags" : [ {
                                    "name" : "dev",
                                    "uuid" : "1c1c8e522d824b769c8e522d82bb7626",
                                    "tagFamily" : "branchTags"
                                  }, {
                                    "name" : "prod",
                                    "uuid" : "5716bf22a134441296bf22a134c412a2",
                                    "tagFamily" : "branchTags"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  },
                                  "rolePerms" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        get: 
            description: Load multiple branches and return a paged list response.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: Loaded branches.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "e2b1d4e8f17e45c3b1d4e8f17ec5c3fe",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "8965007bbbfe48d9a5007bbbfef8d9a2"
                                    },
                                    "created" : "2018-10-31T15:39:16.708Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "10cd13b5f38b41258d13b5f38bd1250c"
                                    },
                                    "edited" : "2018-10-31T15:39:16.708Z",
                                    "name" : "summer2016",
                                    "hostname" : "getmesh.io",
                                    "ssl" : true,
                                    "pathPrefix" : "my/prefix",
                                    "migrated" : true,
                                    "latest" : false,
                                    "tags" : [ {
                                      "name" : "dev",
                                      "uuid" : "749ec76364b548cc9ec76364b508ccff",
                                      "tagFamily" : "branchTags"
                                    }, {
                                      "name" : "prod",
                                      "uuid" : "c4c52f513e2047ce852f513e2017ce01",
                                      "tagFamily" : "branchTags"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    },
                                    "rolePerms" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "1f74cbdfe22246b1b4cbdfe22246b11e",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "3a80caada5ed453d80caada5ed853d34"
                                    },
                                    "created" : "2018-10-31T15:39:16.708Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "ca2f96a210464707af96a210465707d2"
                                    },
                                    "edited" : "2018-10-31T15:39:16.708Z",
                                    "name" : "autumn2016",
                                    "hostname" : "getmesh.io",
                                    "ssl" : true,
                                    "pathPrefix" : "my/prefix",
                                    "migrated" : true,
                                    "latest" : true,
                                    "tags" : [ {
                                      "name" : "dev",
                                      "uuid" : "58d5f7e090054db395f7e09005adb3f8",
                                      "tagFamily" : "branchTags"
                                    }, {
                                      "name" : "prod",
                                      "uuid" : "83fbe70661104e09bbe7066110de09c2",
                                      "tagFamily" : "branchTags"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    },
                                    "rolePerms" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{branchUuid}: 
        uriParameters: 
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch
                type: string
                required: true
                repeat: false
                example: fe466b13babd4b53866b13babd8b5335
        get: 
            description: Load the branch with the given uuid.
            queryParameters: 
                fields: 
                    description: Parameter which can be used to disable the etag parameter generation and thus increase performance when etags are not needed.
                    type: boolean
                    required: false
                    repeat: false
                    default: "true"
            responses: 
                "200": 
                    description: Loaded branch.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | hostname | false | string | The hostname of the branch which will be used to generate links across multiple projects. |
                                | latest | true | boolean | Flag which indicates whether this is the latest branch. Requests that do not specify a specific branch will be performed in the scope of the latest branch. |
                                | migrated | true | boolean | Flag which indicates whether any active node migration for this branch is still running or whether all nodes have been migrated to this branch. |
                                | name | true | string | Name of the branch. |
                                | pathPrefix | true | string | Optional path prefix for webroot path and rendered links. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | ssl | false | boolean | SSL flag of the branch which will be used to generate links across multiple projects. |
                                | tags | true | array | List of tags that were used to tag the branch. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "9f4b754f26824f2b8b754f2682ff2b68",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "c33801a9cf4c4536b801a9cf4c7536c5"
                                  },
                                  "created" : "2018-10-31T15:39:16.708Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "1986a065ccf2488a86a065ccf2088a2a"
                                  },
                                  "edited" : "2018-10-31T15:39:16.708Z",
                                  "name" : "Summer Collection Branch",
                                  "hostname" : "getmesh.io",
                                  "ssl" : true,
                                  "pathPrefix" : "my/prefix",
                                  "migrated" : true,
                                  "latest" : true,
                                  "tags" : [ {
                                    "name" : "dev",
                                    "uuid" : "3bb88c4893a84d78b88c4893a83d7847",
                                    "tagFamily" : "branchTags"
                                  }, {
                                    "name" : "prod",
                                    "uuid" : "7b2fdc1d76a04e8aafdc1d76a02e8ae5",
                                    "tagFamily" : "branchTags"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  },
                                  "rolePerms" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Update the branch with the given uuid. The branch is created if no branch with the specified uuid could be found.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | hostname | false | string | The hostname of the branch which will be used to generate links across multiple projects. |
                        | name | true | string | Name of the branch. |
                        | pathPrefix | false | string | Optional path prefix for webroot path and rendered links. |
                        | ssl | false | boolean | SSL flag of the branch which will be used to generate links across multiple projects. |
                    example: |
                        {
                          "name" : "Winter Collection Branch",
                          "hostname" : "getmesh.io",
                          "ssl" : true
                        }
            responses: 
                "200": 
                    description: Updated branch
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | hostname | false | string | The hostname of the branch which will be used to generate links across multiple projects. |
                                | latest | true | boolean | Flag which indicates whether this is the latest branch. Requests that do not specify a specific branch will be performed in the scope of the latest branch. |
                                | migrated | true | boolean | Flag which indicates whether any active node migration for this branch is still running or whether all nodes have been migrated to this branch. |
                                | name | true | string | Name of the branch. |
                                | pathPrefix | true | string | Optional path prefix for webroot path and rendered links. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | ssl | false | boolean | SSL flag of the branch which will be used to generate links across multiple projects. |
                                | tags | true | array | List of tags that were used to tag the branch. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "5d887a4a4ff7474f887a4a4ff7e74f82",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "08e440f01df44902a440f01df40902f8"
                                  },
                                  "created" : "2018-10-31T15:39:16.709Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "7ff3d6e1e6d841dfb3d6e1e6d8a1df7d"
                                  },
                                  "edited" : "2018-10-31T15:39:16.709Z",
                                  "name" : "Winter Collection Branch",
                                  "hostname" : "getmesh.io",
                                  "ssl" : true,
                                  "pathPrefix" : "my/prefix",
                                  "migrated" : true,
                                  "latest" : false,
                                  "tags" : [ {
                                    "name" : "dev",
                                    "uuid" : "82856e901d6b4a21856e901d6b5a2107",
                                    "tagFamily" : "branchTags"
                                  }, {
                                    "name" : "prod",
                                    "uuid" : "050f3cf5e1bb43fb8f3cf5e1bbe3fbc2",
                                    "tagFamily" : "branchTags"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  },
                                  "rolePerms" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
    /{branchUuid}/latest: 
        uriParameters: 
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch
                type: string
                required: true
                repeat: false
                example: "00838272954d4271838272954db27129"
        post: 
            description: Set the branch with the given uuid as 'latest' branch of the project.
            responses: 
                "200": 
                    description: Latest branch
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | hostname | false | string | The hostname of the branch which will be used to generate links across multiple projects. |
                                | latest | true | boolean | Flag which indicates whether this is the latest branch. Requests that do not specify a specific branch will be performed in the scope of the latest branch. |
                                | migrated | true | boolean | Flag which indicates whether any active node migration for this branch is still running or whether all nodes have been migrated to this branch. |
                                | name | true | string | Name of the branch. |
                                | pathPrefix | true | string | Optional path prefix for webroot path and rendered links. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | ssl | false | boolean | SSL flag of the branch which will be used to generate links across multiple projects. |
                                | tags | true | array | List of tags that were used to tag the branch. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "c4efd4ccf8ce4d4bafd4ccf8ce5d4b79",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "44613796bcb642bba13796bcb6a2bbb6"
                                  },
                                  "created" : "2018-10-31T15:39:16.709Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "5ae3fa423d424289a3fa423d42728903"
                                  },
                                  "edited" : "2018-10-31T15:39:16.709Z",
                                  "name" : "Winter Collection Branch",
                                  "hostname" : "getmesh.io",
                                  "ssl" : true,
                                  "pathPrefix" : "my/prefix",
                                  "migrated" : true,
                                  "latest" : true,
                                  "tags" : [ {
                                    "name" : "dev",
                                    "uuid" : "70f55a2d66d24ecab55a2d66d21ecadb",
                                    "tagFamily" : "branchTags"
                                  }, {
                                    "name" : "prod",
                                    "uuid" : "343de0f9eadb4035bde0f9eadb703538",
                                    "tagFamily" : "branchTags"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  },
                                  "rolePerms" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
    /{branchUuid}/microschemas: 
        uriParameters: 
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch
                type: string
                required: true
                repeat: false
                example: "3485906847424f348590684742ef3411"
        get: 
            description: Load microschemas that are assigned to the branch and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: List of microschemas.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | microschemas | false | array | List of microschema references. |
                            example: |
                                {
                                  "microschemas" : [ {
                                    "name" : "vcard",
                                    "uuid" : "3856c200739a407996c200739a5079e3",
                                    "version" : "2.0"
                                  }, {
                                    "name" : "geolocation",
                                    "uuid" : "17eed0f3d5b54ecdaed0f3d5b57ecde4",
                                    "version" : "1.0"
                                  } ]
                                }
        post: 
            description: Assign a microschema version to the branch.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | microschemas | false | array | List of microschema references. |
                    example: |
                        {
                          "microschemas" : [ {
                            "name" : "vcard",
                            "uuid" : "dde5eca5f895406ca5eca5f895a06c09",
                            "version" : "2.0"
                          }, {
                            "name" : "geolocation",
                            "uuid" : "ddd8d4ed3f5a47b498d4ed3f5a17b455",
                            "version" : "1.0"
                          } ]
                        }
            responses: 
                "200": 
                    description: Updated microschema list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | microschemas | false | array | List of microschema references. |
                            example: |
                                {
                                  "microschemas" : [ {
                                    "name" : "vcard",
                                    "uuid" : "48cd5e7bcb0641118d5e7bcb06e11174",
                                    "version" : "2.0"
                                  }, {
                                    "name" : "geolocation",
                                    "uuid" : "b7632a22d3e24624a32a22d3e21624c1",
                                    "version" : "1.0"
                                  } ]
                                }
    /{branchUuid}/migrateMicroschemas: 
        uriParameters: 
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch
                type: string
                required: true
                repeat: false
                example: "3ad9f8bd9492403299f8bd9492503258"
        post: 
            description: Invoked the micronode migration for not yet migrated micronodes of microschemas that are assigned to the branch.
            responses: 
                "200": 
                    description: schema_migration_invoked
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /{branchUuid}/migrateSchemas: 
        uriParameters: 
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch
                type: string
                required: true
                repeat: false
                example: "1674801c8c3944f5b4801c8c3944f5bc"
        post: 
            description: Invoked the node migration for not yet migrated nodes of schemas that are assigned to the branch.
            responses: 
                "200": 
                    description: schema_migration_invoked
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | internalMessage | true | string | Internal developer friendly message |
                                | message | true | string | Enduser friendly translated message. Translation depends on the &#x27;Accept-Language&#x27; header value |
                                | properties | false | object | Map of i18n properties which were used to construct the provided message |
                            example: |
                                {
                                  "message" : "I18n message"
                                }
    /{branchUuid}/schemas: 
        uriParameters: 
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch
                type: string
                required: true
                repeat: false
                example: d43827bc7b0b48c3b827bc7b0b28c3ce
        get: 
            description: Load schemas that are assigned to the branch and return a paged list response.
            queryParameters: 
                perPage: 
                    description: Number of elements per page.
                    type: number
                    required: false
                    repeat: false
                    example: "42"
                page: 
                    description: Number of page to be loaded.
                    type: number
                    required: false
                    repeat: false
                    default: "1"
                    example: "42"
            responses: 
                "200": 
                    description: Loaded schema list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | schemas | false | array | List of schema references. |
                            example: |
                                {
                                  "schemas" : [ {
                                    "name" : "content",
                                    "uuid" : "b62f66d530084086af66d53008c086b4",
                                    "version" : "1.0"
                                  }, {
                                    "name" : "folder",
                                    "uuid" : "d4b1256dc72e478ab1256dc72e078a6b",
                                    "version" : "1.0"
                                  }, {
                                    "name" : "binary-data",
                                    "uuid" : "4020a2b72b264596a0a2b72b26d596c6",
                                    "version" : "1.0"
                                  } ]
                                }
        post: 
            description: Assign a schema version to the breanch.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | schemas | false | array | List of schema references. |
                    example: |
                        {
                          "schemas" : [ {
                            "name" : "content",
                            "uuid" : "103d231b667a4695bd231b667a669518",
                            "version" : "1.0"
                          }, {
                            "name" : "folder",
                            "uuid" : "106ce411834a44daace411834a94dab2",
                            "version" : "1.0"
                          }, {
                            "name" : "binary-data",
                            "uuid" : "11fb0f2d870743e7bb0f2d8707d3e77f",
                            "version" : "1.0"
                          } ]
                        }
            responses: 
                "200": 
                    description: Updated schema list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | schemas | false | array | List of schema references. |
                            example: |
                                {
                                  "schemas" : [ {
                                    "name" : "content",
                                    "uuid" : "b2adde3d83d24727adde3d83d2672737",
                                    "version" : "1.0"
                                  }, {
                                    "name" : "folder",
                                    "uuid" : "755cea0dbd424cbb9cea0dbd42ccbbc6",
                                    "version" : "1.0"
                                  }, {
                                    "name" : "binary-data",
                                    "uuid" : "0a48093362ad4c4f88093362ad7c4ffe",
                                    "version" : "1.0"
                                  } ]
                                }
    /{branchUuid}/tags: 
        uriParameters: 
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch.
                type: string
                required: true
                repeat: false
                example: "30860ee0532a48c4860ee0532a48c458"
        get: 
            description: Return a list of all tags which tag the branch.
            responses: 
                "200": 
                    description: List of tags that were used to tag the branch.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "1021b04dd1c34b48a1b04dd1c3fb48d2",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "3b160af54d014417960af54d01441772"
                                    },
                                    "created" : "2018-10-31T15:39:16.709Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "7902644944ec4f0882644944eccf08b7"
                                    },
                                    "edited" : "2018-10-31T15:39:16.709Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "7b2fd08aded141e4afd08aded1a1e468"
                                    },
                                    "name" : "green",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "e730b9f713604a5fb0b9f713604a5f5d",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "0f4bd38948214d738bd38948212d7322"
                                    },
                                    "created" : "2018-10-31T15:39:16.709Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "1468c9aa64504b50a8c9aa6450bb502c"
                                    },
                                    "edited" : "2018-10-31T15:39:16.709Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "14265f68c4584eaca65f68c458deac01"
                                    },
                                    "name" : "Name for language tag en",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
        post: 
            description: Update the list of assigned tags
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | tags | true | array | List of tags which should be assigned to the node. Tags which are not included will be removed from the node. |
                    example: |
                        {
                          "tags" : [ {
                            "name" : "green",
                            "uuid" : "9064be12a78d4329a4be12a78d6329a7",
                            "tagFamily" : "colors"
                          }, {
                            "name" : "yellow",
                            "uuid" : "bcb7b9f85dc54834b7b9f85dc5d8345d",
                            "tagFamily" : "colors"
                          } ]
                        }
            responses: 
                "200": 
                    description: Updated tag list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "e8b1bb208953429fb1bb208953a29f1a",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "af270819a33c410aa70819a33c010a95"
                                    },
                                    "created" : "2018-10-31T15:39:16.710Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "e892e560e46540c592e560e465a0c5b8"
                                    },
                                    "edited" : "2018-10-31T15:39:16.710Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "c5b467bf1c8748eeb467bf1c87a8eea3"
                                    },
                                    "name" : "green",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "e4b22300efec4ad4b22300efec8ad409",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "423610b622f64754b610b622f6275414"
                                    },
                                    "created" : "2018-10-31T15:39:16.710Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "696c0404318c4948ac0404318c29481d"
                                    },
                                    "edited" : "2018-10-31T15:39:16.710Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "3d81b99e76c54a8181b99e76c5aa81b9"
                                    },
                                    "name" : "Name for language tag en",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{branchUuid}/tags/{tagUuid}: 
        uriParameters: 
            tagUuid: 
                displayName: tagUuid
                description: Uuid of the tag
                type: string
                required: true
                repeat: false
                example: c5e77a64c5ee4ff5a77a64c5eefff5f1
            branchUuid: 
                displayName: branchUuid
                description: Uuid of the branch
                type: string
                required: true
                repeat: false
                example: a2ae91c9ac384a2cae91c9ac38da2cb0
        post: 
            description: Assign the given tag to the branch.
            responses: 
                "200": 
                    description: Updated branch.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | hostname | false | string | The hostname of the branch which will be used to generate links across multiple projects. |
                                | latest | true | boolean | Flag which indicates whether this is the latest branch. Requests that do not specify a specific branch will be performed in the scope of the latest branch. |
                                | migrated | true | boolean | Flag which indicates whether any active node migration for this branch is still running or whether all nodes have been migrated to this branch. |
                                | name | true | string | Name of the branch. |
                                | pathPrefix | true | string | Optional path prefix for webroot path and rendered links. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | ssl | false | boolean | SSL flag of the branch which will be used to generate links across multiple projects. |
                                | tags | true | array | List of tags that were used to tag the branch. |
                                | uuid | true | string | Uuid of the element |
                            example: |
                                {
                                  "uuid" : "660868e2b07143fe8868e2b071b3fe36",
                                  "creator" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "ea552de0ac0d4f91952de0ac0d1f9114"
                                  },
                                  "created" : "2018-10-31T15:39:16.710Z",
                                  "editor" : {
                                    "firstName" : "Joe",
                                    "lastName" : "Doe",
                                    "uuid" : "97951ddc3b9a405e951ddc3b9aa05e9a"
                                  },
                                  "edited" : "2018-10-31T15:39:16.710Z",
                                  "name" : "Summer Collection Branch",
                                  "hostname" : "getmesh.io",
                                  "ssl" : true,
                                  "pathPrefix" : "my/prefix",
                                  "migrated" : true,
                                  "latest" : false,
                                  "tags" : [ {
                                    "name" : "dev",
                                    "uuid" : "4c4e4ec1a19f4e628e4ec1a19fae6271",
                                    "tagFamily" : "branchTags"
                                  }, {
                                    "name" : "prod",
                                    "uuid" : "45081558b1a44a0d881558b1a4da0d24",
                                    "tagFamily" : "branchTags"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  },
                                  "rolePerms" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Remove the given tag from the branch.
            responses: 
                "204": 
                    description: Removal was successful.
/{project}/graphql: 
    displayName: /{project}/graphql
    description: GraphQL endpoint
    /: 
        post: 
            description: Endpoint which accepts GraphQL queries.
            body: 
                application/json: 
                    schema: |
                        | Property | Mandatory | Type | Description |
                        |----------|-----------|------|-------------|
                        | operationName | false | string | GraphQL operation name. |
                        | query | true | string | The actual GraphQL query. |
                        | variables | false | object | JSON object which contains the variables. |
                    example: |
                        {
                          "query" : "{ me { username } }"
                        }
            responses: 
                "200": 
                    description: Basic GraphQL response.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | data | true | object | Nested JSON object which contains the query result data. |
                                | errors | false | array | Array of errors which were encoutered when handling the query. |
                            example: |
                                {
                                  "data" : {
                                    "me" : {
                                      "username" : "anonymous"
                                    }
                                  }
                                }
/{project}/search: 
    displayName: /{project}/search
    description: Provides endpoints which allow project wide search.
    /nodes: 
        post: 
            description: Invoke a search query for nodes and return a paged list response.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "5d54074f0f3d41fd94074f0f3dd1fd29",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "3795d3d6076d4c9f95d3d6076d6c9f2e"
                                    },
                                    "created" : "2018-10-31T15:39:16.738Z",
                                    "edited" : "2018-10-31T15:39:16.738Z",
                                    "availableLanguages" : {
                                      "de" : {
                                        "published" : true,
                                        "version" : "1.0",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "8178c3f3df8a42f7b8c3f3df8a92f7c7"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.738Z"
                                      },
                                      "en" : {
                                        "published" : false,
                                        "version" : "1.1",
                                        "publisher" : {
                                          "firstName" : "Joe",
                                          "lastName" : "Doe",
                                          "uuid" : "50e3dfabbd2a4d44a3dfabbd2a8d44bb"
                                        },
                                        "publishDate" : "2018-10-31T15:39:16.738Z"
                                      }
                                    },
                                    "languagePaths" : {
                                      "de" : "/api/v1/yourProject/webroot/Bilder",
                                      "en" : "/api/v1/yourProject/webroot/Images"
                                    },
                                    "parentNode" : {
                                      "uuid" : "88a6014fd7af4645a6014fd7af164573",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "89cea9e9d2d84be48ea9e9d2d81be48a",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "red",
                                      "uuid" : "84f2740fa60f4277b2740fa60fb277e6",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "3d795e30aa0e467ab95e30aa0e567a54",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "359439efb2d24c2b9439efb2d22c2b4f"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "f48b9bca925d4c3a8b9bca925dec3a0e"
                                    } ],
                                    "childrenInfo" : {
                                      "folder" : {
                                        "schemaUuid" : "96543b35e0e34f86943b35e0e37f864a",
                                        "count" : 5
                                      },
                                      "blogpost" : {
                                        "schemaUuid" : "173a85d4bac04fceba85d4bac0afce0c",
                                        "count" : 1
                                      }
                                    },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "70111dbce74540fa911dbce745b0fa1d",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag de-DE",
                                      "filename" : "dummy-content.de.html",
                                      "teaser" : "Dummy teaser for de-DE",
                                      "content" : "Content for language tag de-DE",
                                      "relatedProduct" : {
                                        "uuid" : "89ee24baa9864542ae24baa98605422c"
                                      },
                                      "price" : 100.1,
                                      "enabled" : true,
                                      "branch" : "2018-10-31T15:39:16.738Z",
                                      "categories" : [ {
                                        "uuid" : "27cc1db5fa4146658c1db5fa41d66596"
                                      }, {
                                        "uuid" : "58acad94d92d44c6acad94d92df4c63e"
                                      }, {
                                        "uuid" : "55bfc32691af4f85bfc32691af3f859a"
                                      } ],
                                      "names" : [ "Jack", "Joe", "Mary", "Tom" ],
                                      "categoryIds" : [ 1, 42, 133, 7 ],
                                      "binary" : {
                                        "fileName" : "flower.jpg",
                                        "width" : 800,
                                        "height" : 600,
                                        "sha512sum" : "ec582eb760034dd91d5fd33656c0b56f082b7365d32e2a139dd9c87ebc192bff3525f32ff4c4137463a31cad020ac19e6e356508db2b90e32d737b6d725e14c1",
                                        "fileSize" : 95365,
                                        "mimeType" : "image/jpeg",
                                        "dominantColor" : "#22a7f0"
                                      },
                                      "location" : {
                                        "uuid" : "cef5df75b8bc425bb5df75b8bc525b59",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "6c40ad9417284b8d80ad9417282b8d6d"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      },
                                      "locations" : [ {
                                        "uuid" : "0a2a7cf4eada4cb6aa7cf4eada8cb698",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "23010f959db04004810f959db020046a"
                                        },
                                        "fields" : {
                                          "latitude" : 48.208330230278,
                                          "longitude" : 16.373063840833
                                        }
                                      }, {
                                        "uuid" : "1760ae06f05f4eb9a0ae06f05f0eb921",
                                        "microschema" : {
                                          "name" : "geolocation",
                                          "uuid" : "054810a93ede4b098810a93ede2b096d"
                                        },
                                        "fields" : {
                                          "latitude" : 48.137222,
                                          "longitude" : 11.575556
                                        }
                                      } ]
                                    },
                                    "path" : "/api/v1/yourProject/webroot/Images",
                                    "breadcrumb" : [ {
                                      "uuid" : "93d7799d20cd459e97799d20cdb59e1b",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "0f4384d5e33944a78384d5e33964a73d",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "dd65a4790e3143b8a5a4790e31c3b80a",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "ce80c8bb39f04e5780c8bb39f03e57d7"
                                    },
                                    "created" : "2018-10-31T15:39:16.738Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "689e86d9f39340099e86d9f393d0099e"
                                    },
                                    "edited" : "2018-10-31T15:39:16.738Z",
                                    "parentNode" : {
                                      "uuid" : "180b174ec1fe46858b174ec1fe368582",
                                      "displayName" : "parentNodeDisplayName"
                                    },
                                    "tags" : [ {
                                      "name" : "red",
                                      "uuid" : "1f1573fb904d46c99573fb904d56c973",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "green",
                                      "uuid" : "c0ca1feec04244708a1feec0426470e6",
                                      "tagFamily" : "colors"
                                    }, {
                                      "name" : "car",
                                      "uuid" : "7ec38bea215842b8838bea215842b878",
                                      "tagFamily" : "vehicles"
                                    }, {
                                      "name" : "ship",
                                      "uuid" : "3aebaa5f86924688abaa5f8692d688ce",
                                      "tagFamily" : "vehicles"
                                    } ],
                                    "childrenInfo" : { },
                                    "schema" : {
                                      "name" : "content",
                                      "uuid" : "7739ade2bfd44f91b9ade2bfd4af9106",
                                      "version" : "1.0"
                                    },
                                    "container" : false,
                                    "fields" : {
                                      "name" : "Name for language tag en",
                                      "filename" : "dummy-content.en.html",
                                      "teaser" : "Dummy teaser for en",
                                      "content" : "Content for language tag en"
                                    },
                                    "breadcrumb" : [ {
                                      "uuid" : "339e40790e0c443a9e40790e0cb43a6e",
                                      "displayName" : "news",
                                      "path" : "/news"
                                    }, {
                                      "uuid" : "8f00817958d146fa80817958d146face",
                                      "displayName" : "2015",
                                      "path" : "/news/2015"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /tagFamilies: 
        post: 
            description: Invoke a search query for tagFamilies and return a paged list response.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "1e6310d3ff324207a310d3ff32d2073e"
                                    },
                                    "created" : "2018-10-31T15:39:16.739Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "3d57a578ac89491a97a578ac89a91aaf"
                                    },
                                    "edited" : "2018-10-31T15:39:16.739Z",
                                    "name" : "Colors",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /tags: 
        post: 
            description: Invoke a search query for tags and return a paged list response.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Paged search result list.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "5f305722a2124b61b05722a2128b6105",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "2bd0e6f5a98948a790e6f5a98998a707"
                                    },
                                    "created" : "2018-10-31T15:39:16.738Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "5123b585c2fa4085a3b585c2faf08501"
                                    },
                                    "edited" : "2018-10-31T15:39:16.738Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "0c931e4c08074248931e4c0807f24821"
                                    },
                                    "name" : "green",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "dc0fe12b60fa45128fe12b60fa4512b1",
                                    "creator" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "cf8af22a011448698af22a0114d869d0"
                                    },
                                    "created" : "2018-10-31T15:39:16.738Z",
                                    "editor" : {
                                      "firstName" : "Joe",
                                      "lastName" : "Doe",
                                      "uuid" : "a8036736bd4c4d9f836736bd4ccd9fdb"
                                    },
                                    "edited" : "2018-10-31T15:39:16.739Z",
                                    "tagFamily" : {
                                      "name" : "colors",
                                      "uuid" : "062e57e9bac74c67ae57e9bac7dc6797"
                                    },
                                    "name" : "Name for language tag en",
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : false,
                                      "delete" : false,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
/{project}/rawSearch: 
    displayName: /{project}/rawSearch
    description: Provides endpoints which allow project wide search which return the unmodified Elasticsearch response.
    /nodes: 
        post: 
            description: Invoke a search query for nodes and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /tagFamilies: 
        post: 
            description: Invoke a search query for tagFamilies and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
    /tags: 
        post: 
            description: Invoke a search query for tags and return the unmodified Elasticsearch response. Note that the query will be executed using the multi search API of Elasticsearch.
            body: 
                application/json: 
                    example: '{"query":{"query_string":{"query":"some name"}}}'
            responses: 
                "200": 
                    description: Raw search response.
                    body: 
                        text/plain: 
                            example: "{}"
/{project}/schemas: 
    displayName: /{project}/schemas
    description: Provides endpoints which can be used to assign schemas to projects.
    /: 
        get: 
            description: Read multiple schemas and return a paged list response.
            responses: 
                "200": 
                    description: Loaded list of schemas.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "c71f77ed6ef8464d9f77ed6ef8364dde",
                                    "displayField" : "name",
                                    "segmentField" : "name",
                                    "container" : false,
                                    "description" : "Example schema description",
                                    "name" : "ExampleSchema",
                                    "fields" : [ {
                                      "name" : "name",
                                      "label" : "Name",
                                      "required" : false,
                                      "type" : "string"
                                    }, {
                                      "name" : "number",
                                      "label" : "Number",
                                      "required" : false,
                                      "type" : "number"
                                    }, {
                                      "name" : "html",
                                      "label" : "Teaser",
                                      "required" : false,
                                      "type" : "html"
                                    }, {
                                      "name" : "list",
                                      "label" : "List of nodes",
                                      "required" : false,
                                      "listType" : "node",
                                      "type" : "list",
                                      "allow" : [ "content", "video" ]
                                    }, {
                                      "name" : "node",
                                      "required" : false,
                                      "type" : "node",
                                      "allow" : [ "content", "video", "image" ]
                                    }, {
                                      "name" : "location",
                                      "label" : "Location",
                                      "required" : false,
                                      "type" : "micronode",
                                      "allow" : [ "geolocation" ]
                                    }, {
                                      "name" : "locationlist",
                                      "label" : "List of Locations",
                                      "required" : false,
                                      "listType" : "micronode",
                                      "type" : "list",
                                      "allow" : [ "geolocation" ]
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "47fc1976c44e4859bc1976c44ee859df",
                                    "displayField" : "name",
                                    "segmentField" : "name",
                                    "container" : false,
                                    "description" : "Example schema description",
                                    "name" : "ExampleSchema",
                                    "fields" : [ {
                                      "name" : "name",
                                      "label" : "Name",
                                      "required" : false,
                                      "type" : "string"
                                    }, {
                                      "name" : "number",
                                      "label" : "Number",
                                      "required" : false,
                                      "type" : "number"
                                    }, {
                                      "name" : "html",
                                      "label" : "Teaser",
                                      "required" : false,
                                      "type" : "html"
                                    }, {
                                      "name" : "list",
                                      "label" : "List of nodes",
                                      "required" : false,
                                      "listType" : "node",
                                      "type" : "list",
                                      "allow" : [ "content", "video" ]
                                    }, {
                                      "name" : "node",
                                      "required" : false,
                                      "type" : "node",
                                      "allow" : [ "content", "video", "image" ]
                                    }, {
                                      "name" : "location",
                                      "label" : "Location",
                                      "required" : false,
                                      "type" : "micronode",
                                      "allow" : [ "geolocation" ]
                                    }, {
                                      "name" : "locationlist",
                                      "label" : "List of Locations",
                                      "required" : false,
                                      "listType" : "micronode",
                                      "type" : "list",
                                      "allow" : [ "geolocation" ]
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{schemaUuid}: 
        uriParameters: 
            schemaUuid: 
                displayName: schemaUuid
                description: Uuid of the schema.
                type: string
                required: true
                repeat: false
                example: "3e7b7a0bf10c4815bb7a0bf10cf81577"
        get: 
            description: Load the schema with the given uuid.
            responses: 
                "200": 
                    description: Loaded schema.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | container | true | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the schema. |
                                | displayField | true | string | Name of the display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of schema fields |
                                | name | true | string | Name of the schema. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                                | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the schema. |
                            example: |
                                {
                                  "uuid" : "83d32271db234781932271db23078182",
                                  "displayField" : "name",
                                  "segmentField" : "name",
                                  "container" : false,
                                  "description" : "Example schema description",
                                  "name" : "ExampleSchema",
                                  "fields" : [ {
                                    "name" : "name",
                                    "label" : "Name",
                                    "required" : false,
                                    "type" : "string"
                                  }, {
                                    "name" : "number",
                                    "label" : "Number",
                                    "required" : false,
                                    "type" : "number"
                                  }, {
                                    "name" : "html",
                                    "label" : "Teaser",
                                    "required" : false,
                                    "type" : "html"
                                  }, {
                                    "name" : "list",
                                    "label" : "List of nodes",
                                    "required" : false,
                                    "listType" : "node",
                                    "type" : "list",
                                    "allow" : [ "content", "video" ]
                                  }, {
                                    "name" : "node",
                                    "required" : false,
                                    "type" : "node",
                                    "allow" : [ "content", "video", "image" ]
                                  }, {
                                    "name" : "location",
                                    "label" : "Location",
                                    "required" : false,
                                    "type" : "micronode",
                                    "allow" : [ "geolocation" ]
                                  }, {
                                    "name" : "locationlist",
                                    "label" : "List of Locations",
                                    "required" : false,
                                    "listType" : "micronode",
                                    "type" : "list",
                                    "allow" : [ "geolocation" ]
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        post: 
            description: Assign the schema to the project. This will automatically assign the latest schema version to all branches of the project.
            responses: 
                "200": 
                    description: Assigned schema.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | container | true | boolean | Flag which indicates whether nodes which use this schema store additional child nodes. |
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the schema. |
                                | displayField | true | string | Name of the display field. |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of schema fields |
                                | name | true | string | Name of the schema. |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | segmentField | false | string | Name of the segment field. This field is used to construct the webroot path to the node. |
                                | urlFields | false | array | Names of the fields which provide a compete url to the node. This property can be used to define custom urls for certain nodes. The webroot API will try to locate the node via it&#x27;s segment field and via the specified url fields. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the schema. |
                            example: |
                                {
                                  "uuid" : "a8c563ea27b44a3c8563ea27b45a3cbd",
                                  "displayField" : "name",
                                  "segmentField" : "name",
                                  "container" : false,
                                  "description" : "Example schema description",
                                  "name" : "ExampleSchema",
                                  "fields" : [ {
                                    "name" : "name",
                                    "label" : "Name",
                                    "required" : false,
                                    "type" : "string"
                                  }, {
                                    "name" : "number",
                                    "label" : "Number",
                                    "required" : false,
                                    "type" : "number"
                                  }, {
                                    "name" : "html",
                                    "label" : "Teaser",
                                    "required" : false,
                                    "type" : "html"
                                  }, {
                                    "name" : "list",
                                    "label" : "List of nodes",
                                    "required" : false,
                                    "listType" : "node",
                                    "type" : "list",
                                    "allow" : [ "content", "video" ]
                                  }, {
                                    "name" : "node",
                                    "required" : false,
                                    "type" : "node",
                                    "allow" : [ "content", "video", "image" ]
                                  }, {
                                    "name" : "location",
                                    "label" : "Location",
                                    "required" : false,
                                    "type" : "micronode",
                                    "allow" : [ "geolocation" ]
                                  }, {
                                    "name" : "locationlist",
                                    "label" : "List of Locations",
                                    "required" : false,
                                    "listType" : "micronode",
                                    "type" : "list",
                                    "allow" : [ "geolocation" ]
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Remove the schema with the given uuid from the project. This will automatically remove all schema versions of the given schema from all branches of the project.
            responses: 
                "204": 
                    description: Schema was successfully removed.
/{project}/microschemas: 
    displayName: /{project}/microschemas
    description: Contains endpoints which allow microschemas to be assigned to projects.
    /: 
        get: 
            description: Read all microschemas which are assigned to the project.
            responses: 
                "200": 
                    description: List of assigned microschemas.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | _metainfo | true | object | Paging information of the list result. |
                                | data | true | array | Array which contains the found elements. |
                            example: |
                                {
                                  "data" : [ {
                                    "uuid" : "b17e829d0741485ebe829d0741985edc",
                                    "version" : "1.0",
                                    "description" : "Microschema for Geolocations",
                                    "name" : "geolocation",
                                    "fields" : [ {
                                      "name" : "longitude",
                                      "label" : "Longitude",
                                      "required" : true,
                                      "type" : "number"
                                    }, {
                                      "name" : "latitude",
                                      "label" : "Latitude",
                                      "required" : true,
                                      "type" : "number"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  }, {
                                    "uuid" : "39cdcb5bd02a459e8dcb5bd02a859ef0",
                                    "version" : "1.0",
                                    "description" : "Microschema for Geolocations",
                                    "name" : "geolocation",
                                    "fields" : [ {
                                      "name" : "longitude",
                                      "label" : "Longitude",
                                      "required" : true,
                                      "type" : "number"
                                    }, {
                                      "name" : "latitude",
                                      "label" : "Latitude",
                                      "required" : true,
                                      "type" : "number"
                                    } ],
                                    "permissions" : {
                                      "create" : true,
                                      "read" : true,
                                      "update" : true,
                                      "delete" : true,
                                      "publish" : false,
                                      "readPublished" : false
                                    }
                                  } ],
                                  "_metainfo" : {
                                    "currentPage" : 1,
                                    "perPage" : 2,
                                    "pageCount" : 10,
                                    "totalCount" : 20
                                  }
                                }
    /{microschemaUuid}: 
        uriParameters: 
            microschemaUuid: 
                displayName: microschemaUuid
                description: Uuid of the microschema.
                type: string
                required: true
                repeat: false
                example: "5ed3d138e01e44ac93d138e01e54ac95"
        post: 
            description: Add the microschema to the project.
            responses: 
                "200": 
                    description: Microschema was added to the project.
                    body: 
                        application/json: 
                            schema: |
                                | Property | Mandatory | Type | Description |
                                |----------|-----------|------|-------------|
                                | created | true | string | ISO8601 formatted created date string. |
                                | creator | true | object | User reference of the creator of the element. |
                                | description | false | string | Description of the microschema |
                                | edited | true | string | ISO8601 formatted edited date string. |
                                | editor | false | object | User reference of the editor of the element. |
                                | elasticsearch | false | object | Additional search index configuration. This can be used to setup custom analyzers and filters. |
                                | fields | true | array | List of microschema fields |
                                | name | true | string | Name of the microschema |
                                | permissions.create | true | boolean | Flag which indicates whether the create permission is granted. |
                                | permissions.delete | true | boolean | Flag which indicates whether the delete permission is granted. |
                                | permissions.publish | true | boolean | Flag which indicates whether the publish permission is granted. |
                                | permissions.read | true | boolean | Flag which indicates whether the read permission is granted. |
                                | permissions.readPublished | true | boolean | Flag which indicates whether the read published permission is granted. |
                                | permissions.update | true | boolean | Flag which indicates whether the update permission is granted. |
                                | rolePerms | false | object | Permission information for provided role. This property will only be populated if a role query parameter has been specified. |
                                | uuid | true | string | Uuid of the element |
                                | version | true | string | Version of the microschema |
                            example: |
                                {
                                  "uuid" : "3bff471629754d06bf471629755d06fe",
                                  "version" : "1.0",
                                  "description" : "Microschema for Geolocations",
                                  "name" : "geolocation",
                                  "fields" : [ {
                                    "name" : "longitude",
                                    "label" : "Longitude",
                                    "required" : true,
                                    "type" : "number"
                                  }, {
                                    "name" : "latitude",
                                    "label" : "Latitude",
                                    "required" : true,
                                    "type" : "number"
                                  } ],
                                  "permissions" : {
                                    "create" : true,
                                    "read" : true,
                                    "update" : true,
                                    "delete" : true,
                                    "publish" : false,
                                    "readPublished" : false
                                  }
                                }
        delete: 
            description: Remove the microschema from the project.
            responses: 
                "204": 
                    description: Microschema was removed from project.
